// Code generated by go-bindata.
// sources:
// templates/codec.go.tpl
// templates/enum.go.tpl
// templates/model-many-to-many.go.tpl
// templates/model.go.tpl
// templates/model_test.go.tpl
// templates/pogo.go.tpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesCodecGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x91\x31\x6f\xc2\x30\x10\x85\x67\xfc\x2b\xae\x0c\x15\x89\x2a\x67\xaf\xc4\xd0\x2a\x29\x62\x21\xa8\x40\xa5\x8e\x26\x36\xee\x09\x62\xa3\x8b\x3d\x45\xfc\xf7\xca\x4e\xa0\xed\xd0\x0d\x67\x88\x14\x3f\xdf\xfb\xde\xcb\xf5\x7d\x91\xdf\xeb\x29\x2e\x17\x16\xfc\xe0\x43\x10\x8a\xfd\x49\x75\x70\x3b\xbb\x27\x83\xb1\xbb\x5b\xc6\xd8\xb5\x27\x58\x8b\xe6\x28\xb4\x4a\x14\xfc\x3c\xba\xf7\x3d\xf0\x8d\x72\x0e\x8d\xee\xf8\x15\x19\x2e\x24\xe9\xb5\x6c\xcf\x96\x5c\xaa\x65\x60\x74\x07\xef\x51\xc2\x54\xa3\xfb\xf2\x7b\xde\xd8\xb6\xe8\x84\xb3\x84\x85\xb6\x3c\x48\xd3\x44\xdd\xd6\x56\x5b\x68\x05\x1d\x15\x25\xea\x57\x14\xb0\xa8\x56\xd5\xfb\xcb\xb6\x2a\xe1\xf5\x13\xd6\xf5\xa2\xe6\x50\xd6\xb0\xaa\xb7\x50\x95\xcb\x2d\x4f\x54\x6d\xf8\x81\x7c\xb7\x5b\x96\xe9\xaa\x95\xaa\xb1\x52\x45\x46\x7c\x39\x0b\x9d\x23\x34\x9a\x1d\xbc\x69\x7e\xc9\x33\x94\x71\xc7\x31\x4f\x06\xf9\x70\x0b\x7a\x36\x09\x8b\x7f\x9e\x03\x4a\xbe\x89\x67\xb3\x8c\x4d\x48\x39\x4f\x06\x1e\x3d\x4a\x36\x80\x2a\x73\x03\x8d\xa3\xce\x46\xe4\x00\xfa\x91\x03\x68\x74\xcf\x20\xbf\x21\x03\x09\x0f\x80\x12\xe6\x73\x30\x78\x0a\xdf\x57\x8c\xc1\x13\x9b\x5c\x58\x8c\xf2\x04\x8a\x28\xe4\x89\x93\x6f\x64\xdb\x31\x55\x8e\x32\x8b\x16\x41\x7f\xf8\xdf\xe3\x4f\xf4\xef\x00\x00\x00\xff\xff\x93\x91\x27\x04\x1f\x05\x00\x00")

func templatesCodecGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCodecGoTpl,
		"templates/codec.go.tpl",
	)
}

func templatesCodecGoTpl() (*asset, error) {
	bytes, err := templatesCodecGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/codec.go.tpl", size: 1311, mode: os.FileMode(420), modTime: time.Unix(1503997588, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesEnumGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x96\xd1\x6f\xda\x3a\x14\xc6\x9f\xe3\xbf\xe2\x5c\x54\xa9\x09\xea\x4d\xd4\x97\xfb\x50\x89\x87\xdb\x15\x55\x93\x3a\x40\x85\x55\x9b\xa6\x49\x98\x70\x12\x2c\x12\x87\xda\x4e\x0a\xa3\xf9\xdf\x27\x3b\x21\x98\xb5\x2b\xdb\xd4\x54\x5a\x1f\x63\xfb\x3b\x9f\xbf\xf3\xf3\x29\xdb\x6d\xd0\x7d\xad\xbf\xa0\x2c\x89\xd6\x83\x3b\x2a\x18\x9d\x25\x28\xa1\xf9\xf6\x9a\x35\xc8\x76\x0b\x27\xc8\xe1\xa2\x07\x7e\x9f\xe7\xa9\x3f\xa0\x29\x82\x29\x04\x27\xa9\xfe\xac\x57\x1f\x41\x32\x1e\xe7\x09\x15\xcd\x52\xf1\xcc\xda\x23\x24\xd9\x03\x9a\x3d\xaf\x6e\xd4\x84\x31\xcc\x05\x8c\x68\xb8\xa4\x31\xb6\x14\xc7\xaa\x56\x47\x9e\xa7\x2d\x5d\x62\x94\xc5\x19\xa4\x54\x2c\x51\xb4\x74\x89\x20\x80\xeb\xfe\xa0\x7f\xfb\xff\xa4\x7f\x05\x97\x9f\x61\x34\xbc\x1e\xfa\x70\x35\x84\xc1\x70\x02\xfd\xab\xf7\x13\xbf\xc5\xfe\xe8\xe4\x40\x6d\x56\x6d\x75\x28\x08\xa0\x62\xb3\x2c\x81\x49\x50\x0b\x84\x69\x0d\x71\x59\x4e\xad\xf2\x91\xc8\x52\xb3\xe4\x8f\xc3\x05\xa6\x74\x87\xf6\xd4\x27\x66\xbd\x51\xc9\x19\x57\xe7\xff\xfd\xc5\x91\x84\x19\x97\x0a\x5c\x02\xfa\x4e\x82\xf2\x18\xeb\xc7\x7c\x47\x93\x1c\xa5\x7e\x8f\x8e\x15\x9b\x8e\xe4\x86\xce\x30\x81\x47\x08\xe9\x8a\x29\x9a\xb0\x6f\x68\xe5\x79\xba\xdf\x51\x96\xa7\xcd\x39\x9f\x38\xc7\x25\x7a\xcd\x76\x57\x6f\x1a\x8a\xb9\x19\x08\x5e\x65\x0e\xf9\x5c\xbb\xf1\x5a\x0a\x7b\x4c\x15\x93\xd1\xc6\x5c\x42\x2a\xc1\x78\x8c\x02\x18\x57\x28\x22\x1a\xb6\x08\xe4\xd8\xd4\x02\x81\x2a\x17\x5c\x5a\xe5\xa1\xd0\x1d\x80\x2c\xda\x73\xaa\xa3\x99\x92\x28\xe7\x21\xb8\xf5\x24\x2d\xcb\x26\x34\xaf\xd6\x72\xbd\x9d\xc2\x96\x38\x05\xad\x18\xba\xa3\x49\xfd\x95\x10\x47\x3e\x30\x15\x2e\xc0\x92\x78\xa9\xff\x00\x21\x95\x78\x1c\x81\x0b\x02\x00\x4d\xb1\x1e\x74\x6c\x14\x3a\x07\x4d\x74\x4a\x42\x9c\xea\xca\xbb\x03\xa4\xad\xc1\x6f\x37\x36\xa5\x42\x2e\x68\xf2\x36\x9d\xfd\x50\x15\x9b\xe0\x5a\xed\x0a\x4b\x6b\xfe\x70\x95\x81\xc2\xb5\xf2\x5f\x68\xa8\x25\xe1\x7a\xe0\x7e\xf9\x3a\xdb\x28\x3c\x03\x14\x22\x13\x9e\x6e\x6f\x9d\x61\xb5\xb0\x97\xf0\x77\x24\x78\x67\xc0\x99\xc9\x36\x08\xe0\x23\x4f\x2d\x4b\x39\x7f\x6a\xca\xcc\xbd\xe7\x4d\x75\xf7\xae\x0e\x74\x5c\xbd\xbd\x36\xe0\x55\xce\xb4\xb1\x1a\xb1\x0a\x39\xb3\xc7\xfb\x25\xca\x0e\xa1\xa9\x90\xea\xee\x5d\xf4\x8e\x63\x78\x08\xda\x1c\x23\x9a\x27\xea\x82\x38\x0d\x6f\xda\xa2\xf4\x07\xf8\xe0\x76\x18\x2f\x68\xc2\xe6\x8d\x68\xc7\x3b\x40\xb3\x8e\xae\xfd\x79\x73\x9f\x04\x73\xc1\x0a\x14\x55\x20\x6f\x82\xa7\xa9\x04\xd2\xd8\x60\x28\x8f\x1a\x89\x74\x63\x9b\x71\xfe\x73\x66\xcd\x41\x4d\xab\x2d\xf4\x0c\xb3\x4f\x61\xb5\x59\x1d\x87\x94\xff\x60\x6e\x4e\x15\x9d\x51\x89\x81\xbc\x4f\x7c\xbd\xce\x7f\xc3\x9f\x85\xaf\x3e\xea\x4a\x11\xee\xcf\x6e\x4b\x8b\xdc\x59\x1e\x9d\x41\xb6\xd4\xbf\x51\xa5\x08\xfd\xfa\xd1\x79\xc4\x61\x11\xfc\x93\x2d\xf5\x96\x3f\x40\x69\x7f\xdb\xc3\xd7\x33\xcb\x23\xaf\x35\xc6\xde\xe5\x52\x65\x29\xc8\x3a\x2b\x9d\xd0\x2a\x5e\xb7\xf8\xbf\x2c\xa4\x7c\x14\xaf\xab\xd9\x36\xba\xfe\x74\xac\x0b\xa3\x78\xed\x16\x02\xba\xab\x78\x5d\x61\x72\x8b\x74\x8e\xc2\x6a\x06\x8b\xa0\x10\xfe\x0d\x72\xd7\x83\x5e\x0f\xfe\x3d\xb7\xe3\xd7\xb4\x38\xe5\xd1\x88\x0b\xe1\x6b\xdd\xcb\x8d\x42\xe9\xee\xd4\x3c\x9d\xfa\xf7\x00\x00\x00\xff\xff\xb3\x5b\x01\xb0\x76\x0d\x00\x00")

func templatesEnumGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesEnumGoTpl,
		"templates/enum.go.tpl",
	)
}

func templatesEnumGoTpl() (*asset, error) {
	bytes, err := templatesEnumGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/enum.go.tpl", size: 3446, mode: os.FileMode(420), modTime: time.Unix(1503978090, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelManyToManyGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\xe1\x77\xda\x38\x12\xff\x0c\x7f\xc5\x1c\x2f\xdb\x42\x96\x9a\xfb\x9c\x7b\xf9\x90\x16\xda\x65\xaf\x0b\xb9\x84\xec\xbd\x7b\xdd\xbe\x20\xec\x01\xb4\xb1\x25\x57\x92\x21\x1c\xf5\xff\xbe\x6f\x24\xd9\x98\x04\xd2\xdd\x36\xee\x5b\xbe\x60\xcb\xa3\xd1\x68\x66\x7e\xbf\x19\x69\xbb\xed\x9d\x3e\xd7\xaf\x97\xe7\x4d\xd2\x07\xbf\x32\xc5\xd9\x2c\x46\x0d\xe5\xd8\x73\xae\xd1\xdc\x6e\xe1\x24\xbd\x5b\xc0\xd9\x39\x04\xd7\x68\x0c\x17\x0b\x1d\x5c\xb2\xf0\x8e\x2d\x10\xec\x82\x70\x62\xe8\xab\x21\x2b\x04\x4b\x10\x82\xeb\x70\x89\x09\x83\x60\x42\x43\xa5\x90\xb0\x3a\xec\x58\x30\x22\x39\xff\x21\xa4\xf1\x84\xa5\xd0\xd6\x69\xcc\x0d\xb4\x6e\x5b\x24\xdd\x81\x24\x64\x29\x37\x2c\xe6\xff\x47\xf8\x0c\xbf\x4b\x2e\xa0\xd5\x2a\x67\xad\x68\xda\x49\x08\x9f\x21\x96\x6b\x54\xc5\x78\x72\x54\x9b\xe6\x62\x91\xc5\x4c\x3d\xd6\x95\x38\x5d\xc9\x43\x5d\xa1\xa4\xf1\x50\xc6\xb4\x2d\x5d\xd8\xfe\x46\xc6\x59\x22\x74\x21\xc4\xa3\x7b\x4d\x62\x5c\x44\x78\xbf\x93\x1a\xfa\xd7\x52\xd5\xbc\x30\x8c\xd4\xb6\x93\x54\x71\x61\xe6\xd0\xfa\xad\xf5\x83\xfe\xad\xd5\xea\x94\x56\x75\x61\xb7\x47\xb9\xa8\x4e\xaa\xfa\x83\x14\xe0\x9c\xdf\x43\xeb\x45\x28\x63\x1d\x1c\x56\x30\xbf\x4b\x99\x62\x89\xb5\xaf\x7c\x3e\x1c\x9e\xf9\xdd\x7a\x89\x0a\x9d\xa4\x7b\xf4\x3b\x79\x2b\x15\xf2\x85\xf8\x37\x6e\xf4\x4e\xd8\xab\xdc\x73\xcc\x41\xc1\x98\x6b\x53\x6e\x82\xe6\x25\x21\x4b\x70\x2f\xa6\xde\xe0\x67\xcf\x5d\x8b\x8f\x71\xa6\xa0\x48\xd7\x7a\x10\x92\x7a\xed\x3e\x2b\x6b\xdb\xc9\xa5\x5c\x48\x48\x98\xba\x43\x55\xd3\x4e\x7a\x3d\x78\x37\x18\x0d\xae\x2e\x26\x83\x3e\xbc\xfe\x1f\x5c\x8e\xdf\x8d\x03\xe8\x8f\x61\x34\x9e\xc0\xa0\x3f\x9c\x04\x35\x6d\x6d\xa0\x94\x54\x75\x31\x58\xaf\x47\xfa\x1d\x37\xe4\xf9\x48\x9a\xb7\x32\x13\x11\x28\x34\x99\x12\x18\x01\x9f\x83\x59\xba\xf0\x25\x14\x3e\xe0\x1a\x84\x34\x30\x27\xb1\xe6\x8a\xa9\x83\xd3\xcf\x01\xad\xd1\xc1\x08\xd7\xed\xd6\x6e\x72\x39\xb3\xd5\xa9\xc9\x59\x17\x71\x6c\x0d\x0e\x3d\x0f\x71\x01\x32\x53\x8e\x7f\xeb\x73\x61\x65\xb5\xa9\xe3\xfc\x3c\x9f\x36\xcd\x26\xdd\x19\xa2\x8d\xca\x42\x03\xdb\x26\x90\x33\x15\x13\x0b\x7c\xcc\x99\x65\xbd\x08\x25\xaa\x10\xe1\xa4\xa4\xa3\x3e\x33\x6c\x42\xfa\xf2\xdc\x69\x70\x55\xe2\x33\x54\x68\x2f\xcf\xe1\xb4\x58\x1d\xa6\xbf\x6b\x29\xce\x5a\xa5\x64\x9e\x77\x65\xc2\x0d\x26\xa9\xd9\xb4\xa6\xa4\x81\xcf\x21\x78\x23\x93\x04\x05\x4d\xe8\xf5\xac\xd6\xdd\xc0\x76\x0b\x28\xa2\xea\x43\xb3\x2e\xf0\x4e\x96\x5c\x43\x28\x85\x61\x5c\x68\x1b\xaf\x79\x9c\x91\x15\x96\x94\xd1\xa0\x2a\xbe\xd6\x89\xee\x22\x8b\x8b\xc5\x2f\x2e\x87\x2e\x84\xe5\x87\x32\x86\x8d\x22\xaa\xa7\xfe\xa1\x36\xd7\xfc\x84\x71\x8a\x0a\x8c\x84\x50\x21\x33\x68\x93\x7b\x67\x60\x7d\xde\x18\xe1\xba\x92\xcb\xd6\x19\xf3\x4c\x84\x34\xde\xee\xb8\x3c\xb3\x3e\xd9\x36\x1b\x8e\x2c\xe0\x45\x31\xb6\x7d\xe1\xbd\xb2\xad\x31\x67\xde\xa1\x40\x45\x0e\x41\x16\x2e\x41\xce\xab\x8e\x49\xd0\x2c\x65\xa4\x61\x2e\x55\x75\x78\x97\x4d\xe4\x39\xfb\x7b\x90\x83\x5c\xc3\x0a\xd5\x06\x12\xd4\x7a\x03\x8a\x2f\x96\x06\x84\x5c\xc3\x0c\x43\x96\x69\x84\x35\xc2\x92\xad\x10\xb4\x4c\x10\xc2\x4c\x1b\x99\x00\x0b\x43\xd4\x9a\x18\x7a\x4f\x1f\xad\x9d\x65\x3c\x0a\xe0\x5b\x7e\x3b\x7d\xcf\xf3\xdb\xe9\x1b\x8d\x27\x83\x33\xb7\xeb\xb5\xcc\xe2\x08\x52\x25\x67\x6c\x16\x6f\x60\x86\x30\x43\x43\x6e\xd2\x32\x5e\x61\x04\xcc\x40\xba\xb8\x87\x18\x57\x18\x77\x61\x96\x19\x18\x82\x4e\xc9\xa3\xd5\xfd\x32\xca\x52\x09\xb1\x14\x0b\x30\x6a\xc3\xe9\x4f\xc2\x02\x0d\x98\x25\x33\xb0\x96\xea\x8e\xc6\xd6\xdc\x2c\x41\x87\x4c\x08\x7a\x13\x3c\x86\x53\xeb\xa6\x9b\x9b\x61\xbf\xaa\xef\xad\x54\x26\x13\xcc\x60\xbc\xe9\x82\x71\xc1\x11\x2f\x0d\x30\x98\xf1\x05\x44\xc8\xc8\x14\x1f\x16\x8a\x31\x85\x34\x64\x02\x14\x26\x8c\x0b\xd0\x75\x32\xfe\x71\x02\x6f\x6e\xb7\xaf\xe0\x44\x64\xb6\x9b\x7f\xcc\xd0\xaf\x4a\x89\x70\x5f\xc2\x37\x7d\xe5\xf7\xa8\x52\x05\x8a\x04\x3b\x54\x0d\x68\x82\xa7\x2e\x91\x59\x8a\x42\xa3\xad\x3f\xa6\x15\xe6\x9f\x3a\xe8\xb6\x77\x85\xb8\xc4\x6f\x67\x37\xd7\x7e\x16\xa1\x05\xf5\xd6\x9a\x40\x9f\xf7\x90\x5e\x2a\x08\x3c\xc2\x83\xdd\xca\xe7\x34\x2b\xc2\x50\x46\xe8\x0e\x45\xa4\xcb\x69\x29\x29\xa2\x9c\xdf\xf4\x0d\x15\x9a\x9d\x02\x27\x73\xc0\x7a\xaa\x54\x1a\xcd\x53\x9b\xa8\x2a\x6a\x77\xa0\xb2\x95\xd3\xca\x5e\xb6\x55\x43\x50\x54\x4c\x4d\x56\x76\xb2\x37\xd7\xb6\xe7\xbe\xe6\xd5\xc3\x5e\xc3\x24\x8d\xd1\x16\x5a\xda\xed\x2f\x4c\xe9\x25\x8b\x51\xc1\x0b\xb8\x11\x49\xf9\xc6\x85\x41\x35\x67\x61\x6d\xe7\xd7\x5e\xaf\x58\xfb\xe7\xeb\xf1\x08\xfc\xca\xbb\x10\x38\x47\x4f\xc9\x10\x09\x24\xf2\x54\x0c\x2a\x9a\x28\x04\x1f\x3e\xce\x36\x06\xbb\xae\x13\xac\xfa\x9e\x1a\x93\xc0\x0b\xb7\x1f\x65\x54\xc7\xa7\x46\xe9\x07\x6b\x59\x26\x4a\xdb\x68\x3a\x31\x0b\xab\x5a\xf8\x94\x5d\x7b\x9a\xda\x11\x33\x0c\x9c\x6d\x1d\x67\xdb\x43\xd3\x4a\x79\x2b\xdb\x85\xc3\x26\x7e\x87\xb4\xb8\x36\x8a\x8b\x45\x35\x0f\x6a\x4a\x83\x27\x9c\xe7\x6c\x68\x77\xa8\xf7\x21\xc2\xde\xf9\xaa\xd2\xd6\x4f\xc6\xfd\x71\xab\x36\xa7\x5c\x2a\xbe\xa2\x42\xbf\x2c\x5b\x21\x2a\x2a\xcc\x37\xfa\x42\x8a\x57\x54\x45\xbe\x6f\xc3\xff\x84\x05\xce\x9b\x0b\x34\xbe\x2a\x1c\xf6\x6b\xc2\xd2\x0f\xce\xa5\x1f\xcb\xe8\x6e\x73\x7b\x3c\x28\x76\x62\xef\x05\xee\xb0\x7d\x58\xb4\xf3\xc5\x83\x44\x28\xe3\x23\x65\xc8\x9e\x21\xf8\xfc\x71\x66\x07\xc5\xbc\x3c\x87\x7f\x9c\xdb\xea\x4c\x16\x95\x36\x7d\xa8\x9e\x27\x5a\x1f\x1d\xe7\x1f\x55\xd1\x04\xa8\x1c\x1e\x00\x9a\xe0\x39\x1e\xea\xee\x9a\x53\xb9\x90\xc1\xc9\xe4\xe2\xf5\xfb\x41\xf0\x96\x8b\xa8\xdd\x39\x83\x39\x17\x11\x48\x81\xa0\xa8\xa1\xdb\x00\x37\x2f\x35\xa4\x8a\x27\x4c\x6d\xe0\x0e\x37\xf5\x25\x0b\x59\xb0\x4f\x57\x6e\x7d\x0d\xc5\x75\x51\x71\xd9\x33\xed\xc2\xb4\x05\x9f\xa1\xb8\xff\x9a\xfe\xa0\xa7\xad\x3c\x77\x29\x65\x37\x12\xcd\xa0\xb8\x74\xcc\xf3\xa0\xff\xba\x0b\x7b\x57\x59\x94\x5a\xed\x32\xcd\xaa\xe4\xfb\x30\x57\xaa\xf7\x51\xd4\x45\x34\x6e\xf7\x0e\x95\xbe\x21\xc9\x73\x4a\xa1\xed\x16\xe6\x77\x7b\xa5\xdd\x5f\x8f\x95\x57\x95\x8d\x4a\xc1\x6c\xf4\x7a\xa0\x3f\xc5\xa0\x31\xc6\xd0\xc0\xa7\x0c\xd5\xa6\xbb\xe7\xe9\x54\xc9\x15\x8f\x30\x22\x37\x68\xfc\x94\xa1\x08\xb1\xd9\xd0\x9f\x62\x6d\x14\xad\x37\x6d\x36\xae\x07\xef\x07\x6f\x26\x50\xdc\x0e\xd2\x12\x6f\xaf\xc6\xbf\x40\x71\x22\x69\x36\xfe\xfb\xd3\xe0\x6a\x00\xd5\xdb\x39\x1a\x9d\xba\x26\xc5\xfb\xe7\xbd\x5c\xb4\x9d\xda\xc2\x4f\xf6\xc6\x2d\xcf\x3b\xce\x4c\x95\x09\x0b\x61\x6b\xa3\x3d\xd5\x59\xd8\xed\xce\x2f\xcd\x06\x65\xcb\xd9\x39\x44\xb3\xe0\x3f\x24\x74\x25\xd7\xed\x66\xa3\x51\x28\x6d\x36\xbe\xec\xd8\x63\x9e\xed\xba\xc9\xe4\x36\x2b\xd7\x69\x36\xf8\x1c\xec\x25\xa3\x92\xeb\xe0\x3a\x64\xa2\x5d\x5c\x74\xe6\x79\xe7\x5f\x80\xfb\x98\xb4\xc2\xe7\xe7\xd4\x9b\x07\x03\xa5\x46\xf2\x4a\xae\xb5\xff\x56\x22\x4d\xf0\xb8\x0b\x87\xee\x68\xac\x58\xde\x7c\x28\x8a\x04\xda\xe6\x81\x33\x1d\xf9\x26\xef\x92\xd0\x77\x41\xed\x50\x68\x54\x86\x70\xcb\xed\x13\x30\x10\xb8\xb6\xd8\xb5\xcd\x08\x45\xad\x66\x8e\x1f\x16\x0b\x3f\xea\x84\x2a\x77\x3c\x16\x99\xde\xd8\xc3\xd8\x7c\x44\xfd\x87\xf1\x79\xa4\xa8\xcc\x39\xc6\x91\x06\x26\xe8\x80\x86\x29\x53\xf6\xb4\x93\x94\x47\x5b\x9f\xb9\xb7\x61\x17\x6e\x79\x17\x6e\x57\x1e\xaf\x85\x15\xd7\x31\x0f\xb1\x7d\xa8\x1a\x75\xba\xf0\xcf\xce\x0e\xad\xde\xcd\x5f\x87\xd6\xe1\xe8\x7a\x70\x35\x81\xe1\x68\x32\x2e\x11\x0a\xed\x29\xfc\xe8\xdb\x06\x1d\xfc\x2c\xb9\x68\x93\x95\xad\x2e\xb4\x3a\xf0\x23\x4c\x3b\xcd\xc6\xaf\x17\xef\x6f\x06\xd7\x87\x04\xf9\xbe\xe0\xd5\x60\x72\x73\x35\x1a\x8e\xde\x55\x09\x01\xe0\x38\xd8\x6f\x57\x41\x10\x7c\x13\xc8\x1f\x68\xfa\x6b\xd0\xfc\x3b\x22\xea\x26\x8d\x98\x41\x42\x54\x66\x9f\x80\x09\xc0\x7b\xae\x0d\xb5\x75\x0e\x57\xdf\x03\x55\x37\x7e\x71\x8f\xaa\xaf\xae\x86\x7e\x3b\x5f\xac\x87\x7f\x09\x84\x1e\x6d\x67\xe7\x07\xfb\x37\x9f\x4f\x91\x14\x2f\x4d\xe1\x44\x7b\xbd\xe4\x18\x9f\xc0\xa2\x9f\x2e\xb4\x44\xf3\x11\xc6\x68\xb0\xed\x96\xea\xc2\x5e\x47\xe5\x9a\xba\x57\x7b\xa5\xb4\x02\x7b\xd0\x84\x66\xfd\x45\xb8\x17\xba\xb7\x5b\x88\x51\x1c\x36\xa4\x02\x7d\x0f\x8c\x0a\xa2\x6f\x2e\xfb\x17\x93\xc1\x0e\xca\xd7\x83\x89\x45\x29\x55\xbe\xe3\x80\x86\xf3\xc3\x42\x0f\xc0\x7c\xa4\x72\x1f\x04\xf9\xd4\x5b\x89\x26\x4b\xab\x20\x5e\xb1\x38\x43\x1b\xa8\x0f\xd5\xa6\x78\x9b\x7f\xc9\xff\x7e\xe2\x39\xb0\x34\x45\x11\xb5\xdd\x7b\x17\x0e\x97\x68\xdf\x64\xfb\x70\x34\x8e\x4d\x2e\x38\xe2\x08\x19\x39\xb1\xe7\x22\xa4\x8a\xb6\xba\xfa\x85\xbf\x75\xbb\x70\x7a\x8c\xe0\xfa\x0e\x58\x9d\x33\x70\x10\x03\x66\x69\x2d\xd3\x44\x70\xc4\x2f\x55\x9c\x3e\x3f\xc1\x9d\x56\x48\xae\x5f\x18\xf0\x8d\x24\xe7\xb7\xf4\x27\x9a\xfe\xf2\x26\x63\x1f\xd3\xa1\x14\xda\x80\x47\xb6\x2d\xd5\xfd\xc1\xfb\xc1\x64\x00\x35\x35\xd3\x7e\x59\x3e\x87\xdb\xae\x4b\xcd\x68\x16\x0c\xee\x31\x3c\x32\xf3\xeb\x92\xf4\x4f\xe5\xe7\x83\xd4\x74\x99\xf8\x47\x00\x00\x00\xff\xff\x21\x49\x77\xcb\x66\x22\x00\x00")

func templatesModelManyToManyGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelManyToManyGoTpl,
		"templates/model-many-to-many.go.tpl",
	)
}

func templatesModelManyToManyGoTpl() (*asset, error) {
	bytes, err := templatesModelManyToManyGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model-many-to-many.go.tpl", size: 8806, mode: os.FileMode(420), modTime: time.Unix(1504066276, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\x5f\x73\xdb\xb6\xb2\x7f\x26\x3f\xc5\x5e\x8d\x9b\x48\xae\x42\xb7\xaf\xbe\xe3\x87\xc4\x56\x52\x77\x52\x29\xd7\x96\xdb\x7b\x26\xed\x58\x10\x09\x49\x68\x48\x80\x01\x40\xd9\x3a\x8a\xbe\xfb\x19\xfc\x21\x09\x4a\xa4\x62\x3b\xa6\x93\x9e\x89\x5f\x6a\x93\x8b\xc5\x62\xb1\xfb\xc3\xee\x0f\x6c\xd6\xeb\xa3\xc3\xc7\xfa\x39\xda\x6c\x7c\xa5\x0f\x7e\x47\x9c\xa0\x69\x8c\x05\x14\xcf\x1e\x73\x0e\x7f\xbd\x86\x83\xf4\xc3\x1c\x8e\x4f\x20\xb8\xc4\x52\x12\x3a\x17\xc1\x3b\x14\x7e\x40\x73\x0c\x7a\x42\x38\x90\xea\xad\x54\x56\x50\x94\x60\x38\x08\x2e\xc3\x05\x4e\x10\x04\x63\xf5\xac\x90\xa2\x5a\x89\x7e\x16\x0c\x95\xa0\x7d\x11\xaa\xe7\xea\xf5\x27\x08\x51\x4a\x24\x8a\xc9\xbf\xcb\x97\x4b\xfd\x36\x84\x4f\x10\xb3\x1b\xcc\xf3\xe7\x49\x39\x48\x10\x3a\xcf\x62\x54\xbe\x32\x43\x92\xed\x21\xa9\x7a\x9c\x72\x92\x20\xbe\xca\xed\x38\x65\x71\x96\x50\x51\x88\xe8\xa5\x84\x0c\xf3\x10\xa3\x30\xc4\x42\x30\x5e\xae\xe7\x20\x0d\xce\x90\x44\xe3\x55\x5a\x9a\xc7\xcc\x80\x58\xad\x5c\x34\x68\x25\xd1\xad\x50\x62\x84\x46\xf8\xb6\x94\x3a\xb7\x7f\x16\xaa\x66\x4a\x28\x41\xa9\x56\xdb\x4d\x52\x4e\xa8\x9c\x41\xe7\xcf\xce\x0f\xe2\xcf\x4e\xa7\x07\x9f\xe0\x6f\x46\x28\x74\xfa\xd0\x29\x07\xcd\xdd\x41\x89\xe3\x40\xa5\x00\xcf\xc8\x2d\x74\x9e\x85\x2c\x16\xc1\xae\x82\x47\x8f\x16\x1d\x91\xa3\x8c\x43\x1e\x20\xed\xc4\x64\x6a\xb5\xdb\xf8\x68\x6d\x25\xef\xd8\x9c\x41\x82\xf8\x07\xcc\x5b\x5a\xc9\xd1\x11\xbc\x19\x0c\x07\x17\x2f\xc7\x83\x33\x78\xf5\x2f\x78\x37\x7a\x33\x0a\xe0\x6c\x04\xc3\xd1\x18\x06\x67\xe7\xe3\xa0\xa5\xa5\x0d\x38\x67\xbc\x2d\xcc\x38\x3a\x52\xfa\x4d\x96\x6e\x36\x43\x26\x5f\xb3\x8c\x46\xc0\xb1\xcc\x38\xc5\x11\x90\x19\xc8\x85\xd9\xbe\x44\x6d\x1f\x10\x01\x94\x49\x98\x29\x31\x7f\x89\x78\xed\xf0\x13\xc0\xda\xe8\x60\x88\x6f\xba\x9d\x72\x70\x31\xb2\xd3\x6b\xc9\x59\x2f\xe3\x58\x1b\x1c\xda\xb4\x26\x14\x58\xc6\x0d\xe2\xb5\xe7\x42\x67\xb6\x89\x41\xd9\xcd\x66\xe2\x4b\x05\x3e\xf9\x2b\x21\x79\x16\x4a\x58\xfb\xa0\x9c\xc9\x11\x9d\xe3\x5d\x08\x2a\x10\xda\xc0\x9a\x03\xcf\x2e\x98\x69\x0d\x06\x96\xb7\x60\x18\x0e\xf3\xd9\x61\xf2\xb7\x60\xf4\xb8\x53\x48\x6e\x36\x7d\x96\x10\x89\x93\x54\xae\x3a\x13\xa5\x81\xcc\x20\x38\x65\x49\x82\xa9\x1a\x70\x74\xa4\xb5\x96\x0f\xd6\x6b\xc0\x34\x72\x7f\xf1\xdb\x4a\xde\xf1\x82\x08\x08\x19\x95\x88\x50\xa1\xf7\x6b\x16\x67\xca\x8a\x14\x71\x94\x60\x89\x79\xfe\xb6\xcd\xec\xce\xa3\x38\x9f\xfc\xe5\xbb\x73\xb3\x85\xc5\x8b\x62\x0f\xbd\x7c\x57\x0f\xed\x2f\xad\xb9\xe6\x17\x1c\xa7\x98\x83\x64\x10\x72\x8c\x24\xd6\xc1\x5d\x1a\xd8\x9e\x37\x86\xf8\xc6\x89\x65\xed\x8c\x59\x46\x43\xf5\xbc\xdb\x33\x71\xa6\x7d\xb2\xf6\x3d\x03\x16\xf0\x2c\x7f\xb6\x7e\x66\xbd\xb2\x6e\x31\x66\xde\x60\x8a\xb9\x72\x08\x46\xe1\x02\xd8\xcc\x75\x4c\x82\xe5\x82\x45\x02\x66\x8c\xbb\x8f\xcb\x68\x52\x9e\xd3\x3f\x5b\x31\x48\x04\x2c\x31\x5f\x41\x82\x85\x58\x01\x27\xf3\x85\x04\xca\x6e\x60\x8a\x43\x94\x09\x0c\x37\x18\x16\x68\x89\x41\xb0\x04\x43\x98\x09\xc9\x12\xc8\x6b\x0f\x51\xd5\xa7\xe6\xce\x32\x12\x05\xf0\x25\x3f\xa5\xbe\xc7\xf9\x29\xf5\x0d\x47\xe3\xc1\xb1\x59\xf5\x0d\xcb\xe2\x08\x52\xce\xa6\x68\x1a\xaf\x60\x8a\x61\x8a\xa5\x72\x93\x60\xf1\x12\x47\x80\x24\xa4\xf3\x5b\x88\xf1\x12\xc7\x7d\x98\x66\x12\xce\x41\xa4\xca\xa3\xee\x7a\x91\x8a\x52\x06\x31\xa3\x73\x90\x7c\x45\xd4\x7f\x18\xcc\xb1\x04\xb9\x40\x12\x6e\x18\xff\xa0\x9e\xdd\x10\xb9\x00\x11\x22\x4a\xd5\x5f\x94\xc4\x70\xa8\xdd\x74\x75\x75\x7e\xe6\xea\x7b\xcd\xb8\xcc\x28\x92\x38\x5e\xf5\x41\x9a\xcd\xa1\xcf\x25\x20\x98\x92\x39\x44\x18\x29\x53\xec\xb6\xa8\x3d\x56\x5b\x1a\x22\x0a\x1c\x27\x88\x50\x10\x6d\x22\x7e\x33\x80\xfb\xeb\xf5\x0b\x38\xa0\x99\x2e\x9f\x77\x11\xfa\x45\x21\x11\x56\x25\x12\xac\xdf\x7f\x82\x04\xad\xa6\x98\x9b\xe2\xbc\x90\x8e\xf6\x96\xba\xe5\xd9\xa0\x06\x58\x20\xa3\x99\x06\x2c\x2c\x85\xf6\xce\xc4\x39\x07\x26\x26\x91\xbb\xe5\xb1\x5c\x64\x73\xaf\x1c\xab\x5f\xd3\x50\xa7\xf8\x5a\x9b\xa0\x5e\x57\xf2\xbe\x50\x10\xd8\x7c\x0f\xca\x99\x4f\xd4\xa8\x08\x87\x2c\xc2\xa6\x29\x51\xba\x8c\x96\x02\x30\x8a\xf1\xbe\x2d\xaf\xb0\x2c\x15\x18\x99\x1a\xeb\xd5\xb9\x25\xb0\xdc\xb7\x08\x57\x51\xb7\x07\xce\x52\x0e\x9d\xb5\xac\x5d\x43\x30\x75\x4c\x4d\x96\x7a\xb0\x35\x57\x57\xef\xf6\x04\x6c\x07\xcb\xce\x93\x34\xc6\xfa\xd8\x55\xab\xfd\x0d\x71\xb1\x40\x31\xe6\xf0\x0c\xae\x68\x52\xfc\x45\xa8\xc4\x7c\x86\xc2\xd6\xfa\xc7\xa3\xa3\x7c\xee\x5f\x2f\x47\x43\xb0\x33\x97\x5b\x60\x1c\x3d\x51\x86\x30\x50\x22\xfb\xf6\xc0\xd1\xa4\xb6\xe0\xfd\x5f\xd3\x95\xc4\x7d\x53\x17\xba\xbe\x57\x65\x4a\x60\x85\xbb\x3b\x11\xd5\xb3\xa1\x51\xf8\x41\x5b\x96\xd1\xc2\x36\x35\x5c\xe1\x0c\x72\x2d\xdc\x67\x57\x45\x53\x37\x42\x12\x81\xb1\xad\x67\x6c\xdb\x36\xad\x90\xd7\xb2\x7d\xa8\x37\xf1\x09\xc2\xe2\x52\x72\x42\xe7\x6e\x1c\xb4\x14\x06\x7b\x9c\x67\x6c\xe8\xf6\x54\x25\xa4\xe0\xbb\xf4\x95\x2d\xf2\x37\x1b\x18\x8f\xce\x46\x9d\xd6\x7c\xf2\x8e\x93\xa5\x3a\xf5\x17\x45\x5d\xa4\x4e\x18\x64\xab\x7e\xca\xe8\x0b\x75\xa4\x3c\x6d\xf5\xbf\xc7\x02\xe3\xcc\x39\x96\xf6\x88\xa8\x77\x6b\x82\xd2\xf7\xc6\xa3\x7f\x15\x9b\xbb\xde\xe8\x5e\x21\x5f\x89\x26\x0e\x3e\xe0\x6e\xbd\x68\xef\xb3\x5d\x45\xc8\xe2\x86\x33\x49\x37\x14\x64\xb6\x1b\xd8\x41\x3e\x6e\xb3\x81\xff\x39\xd1\x47\xb5\xb2\xa8\xb0\xe9\xbd\xdb\x5c\x74\xfe\x82\x13\xbb\xa4\x06\x1d\x3e\x80\xd3\x4a\x00\xf8\x60\x31\x1e\x5a\xaa\xa1\x0f\x2b\x71\x93\x4d\x63\x12\xc2\xcd\x02\xf3\x22\x78\x54\x89\x86\x20\x64\x59\x1a\xe3\xbc\x82\xcc\x4b\xc7\x47\x0f\x96\x43\x27\x60\xfe\x50\x56\x9c\xc6\xba\x76\x21\x02\x50\xde\x58\x48\x06\x0b\x44\xa3\x18\x5b\x3b\x43\x2d\x22\x4c\x17\xe2\x0e\x72\x1b\x11\x1a\x11\x49\x18\xb5\x29\xe9\x7b\xba\xca\xd5\xc5\xe8\x7b\x37\x44\x7c\x67\x6a\x55\xbd\x85\x64\x46\xb0\xb0\xbd\xb2\xd5\x61\xc3\x55\xcb\x74\xb7\x35\xf7\xc1\x6a\x0e\x82\xc0\x0d\x3d\x38\x74\x2d\x73\xda\x01\xe7\xf1\xda\xf7\x4a\x4b\x8f\xcb\x09\xfb\xbe\x67\xed\x3d\x56\x06\x9b\x5f\xfb\xbe\xd7\x5e\xdb\x90\xb2\x39\x0b\x0e\xc6\x2f\x5f\xbd\x1d\x04\xaf\x09\x8d\xba\xbd\x63\x98\x11\x1a\x01\xa3\x18\xb8\x2a\xf5\x57\x40\xe4\x73\x51\x90\x8f\x1f\xf0\xaa\xbd\x2a\x92\xcc\xe0\x20\x05\x53\xb5\x29\x6b\x00\x39\x4c\xcb\x74\x65\x50\x35\x2d\x72\xcc\x6c\x8f\x36\x3b\x9a\x42\x4e\xf7\x6e\x36\xc1\xd9\x2b\x73\x30\x15\xa2\x60\x19\x52\x85\x2e\xdd\x02\x69\xdc\xe3\xf7\xba\x2a\x7f\xec\x16\x6c\xbb\xec\x71\x2e\x69\x74\xfa\xbe\x77\x74\x04\xe2\x63\x0c\x02\xc7\x38\x94\xf0\x31\xc3\x7c\xd5\xaf\xf8\x2c\xe5\x6c\x49\x22\x1c\xa9\x65\x08\xfc\x31\xc3\x34\xc4\xbe\x27\x3e\xc6\x42\x72\x35\xdb\xc4\xf7\x2e\x07\x6f\x07\xa7\x63\xc8\x09\x55\x55\x19\xbe\xbe\x18\xfd\x06\x79\xd7\xe9\x7b\x7f\xfc\x32\xb8\x18\x6c\x7b\x01\x4e\xe0\xe0\x67\xdf\x9b\xa8\x02\x54\x39\x60\xb3\x09\xde\xb2\x79\xd7\xa8\xee\x43\x75\x61\x3d\x5f\x37\xeb\x1a\x40\xcb\xb6\xd4\xf7\xd4\x56\x1f\x9f\x40\x34\x0d\xfe\x4f\xd9\x7e\xc1\x6e\x1a\x15\x68\x74\xc4\x4a\x9a\xb3\x9b\xe0\x32\x44\xb4\x9b\xd3\xb9\x9b\x4d\xef\x7f\x01\x57\xd1\x51\x0b\x9f\x9c\xa8\x96\x29\x18\x70\x3e\x64\x17\xec\x46\xd8\x77\x05\xe4\x51\x12\xf7\xa1\x8e\x3a\xd3\x62\x1b\x7f\x5b\x14\x2b\xf4\xf4\x6b\x5a\x6d\xb5\xb6\x4d\x5f\x09\x3d\x41\x9d\xba\x9d\x3c\xaf\x56\x41\x10\x14\x19\x84\xca\xfc\x11\x90\x51\xf2\x31\x33\xc7\x61\x1e\x15\x39\xa5\xde\x72\x4f\x76\x40\xa2\x5b\x7d\xa9\xa0\xa9\xfc\x82\x7b\x37\x21\x40\xa2\xdb\xe2\x02\x40\x0b\x96\xb4\xbf\x41\x7e\x87\xa1\x8f\x45\x85\xa3\xcf\x09\xf9\x97\x34\xea\x38\xc3\x2c\x28\x1a\xdd\xf6\x8f\xf2\x16\xc2\x9d\x42\x2d\x7f\x89\xb8\xd8\x99\xa2\x68\xfe\x2a\x8c\xbf\x85\x84\x57\xab\xaa\x7d\x9b\x4d\xee\xed\x0a\x52\x14\x8b\xcc\xb5\x4c\x00\xd1\x08\x26\x1d\xf8\x04\xf9\xe5\xc4\xe4\x07\x31\xe9\x6c\x36\x25\x8a\xec\xea\x6e\xc0\x95\x72\x69\xcd\x80\xf2\x94\x88\xa0\xa0\x33\xba\x35\x87\x64\xee\x63\x03\x08\x85\xe9\x2e\x24\x54\xdd\xff\x20\x50\xd8\x55\xe1\x61\xce\x9b\x40\xc1\xf7\x14\x0a\x70\x5e\x22\x83\x97\x3f\xa9\x41\x06\xcf\xf3\x3e\x0b\x0b\x9e\xb7\xf1\xab\x62\x98\x73\x75\x50\x7e\x6b\x98\xf0\x1b\xa2\xab\x02\x12\x12\x44\x57\xca\x41\x42\xed\x39\x2a\xcf\xfd\xf6\x6a\xf1\xdc\x04\x67\x7e\xa7\x31\xb4\x76\xcc\xc9\x12\xd3\xd2\x9a\x32\x21\xb4\xf1\xbb\x29\x60\x02\xcd\xad\x73\x74\x47\x5b\x9b\x06\x4b\xc4\xe1\x9a\x81\xf3\xd6\xf7\x9e\x36\x39\x26\xf0\xa3\xb1\x38\x28\x57\xd8\x94\x19\x46\xce\xe4\x76\x10\x04\x3d\x5f\x55\xe5\xec\x46\xe8\x15\xb9\xb9\xd0\x3c\xc2\x9c\x78\x6e\xac\x3b\x87\xd7\x35\x33\x81\x6a\xce\xb4\x08\xcf\x30\xd7\xfa\x83\xd3\x98\x09\xdc\xd5\xf3\xa9\x32\x5c\x3f\x1b\xe2\x5b\xd9\xd5\x4e\xac\xcb\xce\xe2\x6c\x35\x39\x27\xf6\x9f\xc4\x9e\x49\xb8\x86\x74\xf3\x1c\xf3\xea\xb3\x4d\xa7\x9b\xb7\xb5\x0a\xf5\x54\x99\x71\xcd\xe0\x04\x50\x9a\x62\x1a\x75\xd5\xbb\xad\xd4\xeb\xd9\xe5\x92\x99\x31\x74\xc0\x79\xb7\xd7\xe8\x9e\x52\xc4\x9e\xf1\x47\x47\x80\xa9\xc8\xb8\xa6\x9b\xad\x20\xa2\xa0\x6f\x6e\x00\x71\x8e\x56\x5a\x86\x23\xb9\x50\x1d\xf0\x02\x69\x40\x50\x1b\x43\xd5\x08\x4b\x57\x68\x08\x8a\x31\xed\x5e\xb3\x9e\xf2\xc2\x4f\x7a\xe5\x56\x9d\x6e\x25\x2b\x01\xfc\x53\xcf\x00\x86\x42\x94\x8a\x79\x06\x45\x9e\x06\x3b\x46\x14\x17\xd0\x81\x6f\x51\x28\xe3\x95\x5b\x97\x3f\x19\x80\x8c\x28\x2e\x9b\x82\xca\x31\x8b\xea\x50\x43\x99\x7d\x47\xd0\xf8\xea\x27\xe7\x97\x81\x43\x7d\x5e\xee\x39\x36\x1b\xd0\xe2\x4e\xc5\x74\x73\x06\xdf\xab\x94\xde\x3a\x35\xab\x11\xde\x70\x68\xb6\x1f\xee\xe7\x54\x60\x2e\x55\xb4\x13\xfd\x1b\x20\xa0\xf8\x46\xbb\x52\xd3\xab\xaa\x2f\x6f\x99\xb6\x3a\xcf\x27\xde\xe1\x76\x0b\xc2\xd7\xdc\xfd\x69\x3b\x02\x13\xef\xd6\xee\xfa\x32\x71\x87\xd8\x6a\x8c\xf7\x7d\xa4\x9d\xaa\x5b\x53\x8e\x53\xc4\xf5\xcd\x4e\x52\x5c\xe3\xe9\xcc\xf0\xbd\xeb\xb0\x0f\xd7\xa4\x0f\xd7\x4b\xdb\xb5\xe6\x66\x5c\xc6\x24\xc4\xdd\x3a\xb2\xad\xa7\x00\xae\xec\x5a\xad\xcb\x1f\x96\x69\xe7\xc3\xcb\xc1\xc5\x18\xce\x87\xe3\x51\x91\x5d\xd0\x55\x79\x65\x78\x12\x11\xfc\xca\x08\xed\x2a\x2b\x55\x29\xdf\x83\x1f\x61\xd2\xf3\xbd\xdf\x5f\xbe\xbd\x1a\x5c\xd6\x09\x92\xaa\xe0\xc5\x60\x7c\x75\x31\x3c\x1f\xbe\xa9\x24\x73\x73\x71\x7b\xbd\x6c\xce\xcd\xbd\x6d\xae\x19\xe7\xdd\xab\xb9\xbd\x7f\x4f\xda\x7e\x2a\x5d\xa5\x11\x92\xfa\xe0\xc8\xf4\x6f\xfa\xb0\xbc\x25\x42\x12\x3a\xb7\x09\xf5\x14\xe9\x74\x65\x27\xaf\x1e\x18\xaa\x17\x9e\x54\x08\x05\x7b\x3b\x61\xad\xbe\x33\x8f\x73\xaf\x0c\xfb\x22\x72\xc7\x9b\x11\x1c\x47\x3a\x94\x6a\x73\xc9\xe4\x51\xc4\xe8\x73\x99\x7b\x5c\xb9\xd7\x49\x23\xdf\x8b\x70\x8c\x25\xee\x1a\x4d\xfd\x6d\x06\xc7\xaa\x70\x92\x1c\x84\xca\x5d\xf1\xd9\xe4\xce\x15\xfe\xec\x64\xb3\x85\x05\x27\x49\xaf\xde\x9d\xbd\x1c\x0f\xca\xec\xbc\x1c\x8c\x75\xe2\xf9\x9e\xb7\x27\x47\xe1\xa4\x5e\x68\x2b\x3f\xf7\x92\x52\xb5\xd9\x3b\xb1\xb6\x62\x99\xa5\xb9\xb5\x4b\x14\x67\x58\xfb\xd8\xd6\x91\x15\xb2\x76\xbd\x45\x42\xc1\xa6\xcc\xd7\x06\x18\x30\x0a\x2d\x14\xa8\xf2\x30\xa3\x2e\x68\xde\x13\x1c\x1c\x6d\x77\x07\x88\x47\x3a\xb0\xbf\x01\x9c\x39\xdc\x8f\x35\x05\xef\x95\x03\xce\xd7\x62\xbe\x0e\xff\x11\xec\x57\x01\x8e\x9f\xe1\xb2\x20\xe7\xa6\x9a\xa4\xef\xc0\x4e\xdd\x0b\x26\x1f\x06\x74\x1f\xf0\x4a\xe8\x34\x2c\x3d\x5e\x5c\xb6\xbd\x50\xf8\x59\x03\x7e\x0e\xf4\x79\x0e\x23\xf3\x85\x28\xb8\x5e\xab\x0e\xcf\xee\x56\x61\xf0\x93\x63\x22\x18\x89\x49\x23\x37\x97\x0b\x7c\x16\x1c\x1d\xc0\x2a\x01\xb2\x8a\x8c\x1b\xc7\xf5\xce\x1d\xa7\x15\x2f\xe0\xd4\xfc\xdd\xaf\x7e\x29\x69\x89\x56\x4d\xd0\x95\xbb\xe0\x35\x8d\xfd\xef\x42\xdc\xfb\x75\x48\x5f\x87\x55\x3c\xdc\x8f\xbb\x39\xb7\x68\x93\xb1\xc2\x2e\x2a\xcf\x6f\xf1\x7a\xed\x5e\xe2\x96\x26\x19\x1b\x2a\xdf\xfe\xee\xe1\x19\x9d\xa5\xdc\x85\x34\x68\x02\xb4\xfb\xd2\x8f\x0f\x80\x99\x86\x4e\x2a\xc6\xb4\xeb\xf6\xf5\xbd\x6f\x03\x77\x6a\x98\x0d\x25\xf5\x00\xec\x01\x68\x06\x9f\xe2\xdd\x0e\x5a\xd4\x50\x1d\x8f\x08\x2c\xb9\x65\xfb\xc9\x59\x67\x64\x0b\xb4\xac\xfd\xf6\xe3\xab\x13\xb3\x15\x6c\x2b\x97\x92\xd7\x8e\xdf\xd9\xd9\x47\xc1\xb8\x1d\x0c\x3e\x33\x65\x4d\xef\x18\x4c\x81\x63\xcb\xde\x4c\xa8\x3e\x5b\x55\xbe\x95\x72\xb7\x5d\xf0\x3d\xcb\x2d\x70\xb9\xab\x19\x67\x49\x2d\x77\x65\x80\xd7\xda\x7f\x8f\x2f\x27\x8a\x0f\x02\x1f\xe7\x63\x89\x5d\x70\x3c\x1b\xbc\x1d\x8c\x07\x50\x61\x6a\xa1\xb9\xbf\xdc\x43\x02\xed\x7c\xf4\x50\xc1\x0d\x15\x6d\xd7\x7d\x93\xa2\xd1\x34\x18\xdc\xe2\xb0\x69\xe8\xc3\xbe\x67\xb8\x53\x37\xb7\xd5\xc8\x3d\x7d\xec\x16\x7d\x5b\x25\x80\xbf\xf7\x6d\x8f\xfb\xd5\x42\xee\xeb\xbb\xf5\x7a\x4d\xd2\x77\xfa\x12\xa1\x48\x50\x9b\x61\x76\x5f\xef\x95\x68\x35\xfd\xca\xfd\xbe\x24\xd8\x93\x5b\x3b\xe2\x4f\x9d\x5d\x4f\x5d\xa7\x9b\xdd\xcc\xeb\x74\xbb\x1d\x5f\xb7\x4e\x2f\x4d\xaa\xd8\xe3\x1c\x1c\xcf\x9b\x0c\x73\x23\xf4\x1e\x9f\x06\x6c\x47\xe5\x17\x5c\xec\xed\x89\xdb\x2f\xbd\xe6\xdf\x13\xb6\xdb\xe2\x4d\xd7\x00\x5b\x97\x69\x4f\x4b\xc4\xe5\xf7\x67\x59\x6a\xaf\xb1\x1c\x2c\x6f\xf5\xe3\xcd\xc3\x4a\x13\xa8\x27\xdf\xfe\x3f\x24\xea\x89\xff\x20\x6f\x00\xbf\xf6\x15\x1a\xc0\x97\xdf\xa1\xe5\x9a\x9c\x60\x7d\xd0\xcd\x98\xe9\xcf\x26\x77\xbc\x1e\xd3\xd2\x00\x93\xd1\x10\x4e\x47\xc3\xd7\x6f\xcf\x4f\xc7\xd0\xdd\xbe\x5d\xc8\x85\xce\x46\x60\xbb\xcf\xbc\xe9\xdc\x6b\xc8\x09\x74\x61\xf0\xff\xa7\x6f\xaf\xce\x06\x67\x41\x93\x70\x21\xb0\x65\x50\x7d\x7b\x09\xf0\xb9\x4b\xbb\x6a\x99\xd6\xf6\x15\xde\x03\x98\x9e\xa7\x4c\x67\x87\x57\xdf\xcd\x69\x15\xe3\xb6\x46\xfb\x5e\x97\x15\xb2\x31\x11\xb2\x3a\xcb\xe7\xff\x31\x8a\x02\xb7\xee\xce\xc7\xd7\x4b\xff\x53\x31\x0c\xe0\xdb\x03\xb1\x9d\x4d\x55\x8e\xfb\x0e\x64\xb5\x40\xf6\xec\x99\xf9\x7d\x97\x40\x7a\x38\x91\xfd\x9f\x00\x00\x00\xff\xff\xa9\x7a\x60\x29\xf2\x47\x00\x00")

func templatesModelGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGoTpl,
		"templates/model.go.tpl",
	)
}

func templatesModelGoTpl() (*asset, error) {
	bytes, err := templatesModelGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.go.tpl", size: 18418, mode: os.FileMode(420), modTime: time.Unix(1508741688, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModel_testGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x55\xdd\x6e\xa3\x46\x14\xbe\x86\xa7\x38\x45\xee\x0a\x2c\x6b\x50\xbd\x77\x5b\xe5\x62\x13\xbb\x2b\xdf\xd8\xd6\xae\xb7\x52\xa5\x95\xa2\x09\x1c\xc8\xd4\x30\xd0\x99\x21\x71\x4a\x78\xf7\x6a\x06\x0c\x38\x8e\x1b\x57\x35\x6a\x55\xd5\x37\x16\xe7\xf7\xfb\xce\xdf\x94\xa5\x3f\xbe\xd4\xcf\xaf\x2a\x5b\xc7\x83\x9f\xa9\x60\xf4\x2e\x41\x09\xad\xec\x92\x39\xec\xb2\x84\x51\xbe\x8d\xe1\xc3\x15\x90\x2f\xa8\x14\xe3\xb1\x24\x6b\x1a\x6c\x69\x8c\x60\x12\xc2\x48\x69\xad\xd2\x28\x38\x4d\x11\x46\xe4\x4b\x70\x8f\x29\x05\xb2\xd1\xb2\xd6\x8a\x9b\x20\x46\x46\x96\xda\xb0\x51\x04\x5a\xae\xd5\xcf\x10\xd0\x9c\x29\x9a\xb0\xdf\x3b\xe5\x83\xd1\x06\xf0\x0c\x49\xf6\x88\x62\x2f\x4f\x3b\x27\xc9\x78\x5c\x24\xb4\x53\xd5\x2e\xe9\x91\xcb\x83\xa1\x91\x0b\xc6\x15\x38\xef\x1c\x63\xe9\x10\x67\xaf\xcf\x1b\x6d\x4a\xc5\xd3\x1e\xe7\x4d\x96\x14\x29\x97\xad\x89\xa1\x1a\x64\x28\x82\x1e\xcf\x51\x4e\x66\x54\xd1\xcd\x53\xde\xc1\xce\x6a\xc3\x44\x57\x44\x9e\x88\xc6\xc2\x9d\xd4\x66\x8c\x87\xb8\xeb\xac\x16\xcd\x67\x1b\x2a\xd2\x46\x29\xcd\x4d\x58\x37\x35\x04\x22\x70\xbe\x39\xdf\xcb\x6f\x8e\xe3\xc1\x33\xfc\x9a\x31\x0e\xce\x04\x9c\xce\x29\xee\x3b\xa5\xbd\xc2\xea\x00\x18\xb1\x9d\x29\xc8\x91\xf3\xc5\x27\xc8\x4c\xe9\xaa\x10\xb0\x1f\x9a\x61\xe6\x34\x6f\xa2\xef\xe7\xb5\xaa\x6e\x15\x4a\x35\x10\x9f\x75\x16\x67\x90\x52\xb1\x45\x31\x10\x1f\xdf\x87\x4f\xf3\xe5\xfc\xf3\xc7\xcd\x7c\x06\xd7\xbf\xc0\x7a\xf5\x69\x45\x60\xb6\x82\xe5\x6a\x03\xf3\xd9\x62\x43\x06\xa2\x76\x93\x30\xe4\x0a\x22\x1a\xa8\x4c\x3c\x0d\xc4\x2e\x2a\x78\x00\xcd\x51\xa8\xaa\xd9\xb5\xab\x60\xac\xdb\xc5\x78\x4c\x36\x5e\xaf\x89\x64\x76\x0d\xa5\x6d\x05\x19\x8f\x58\x3c\x01\x14\xc2\x2c\x69\xbc\x23\x6b\x2a\x24\x7e\xfd\xbc\x70\x9d\xb2\xec\x9d\xa6\x8f\x61\x28\x50\xea\xe5\x71\x3c\xdb\x62\x91\x71\xf9\xee\x0a\x38\x4b\x74\x20\x4b\x91\x9f\xa8\xa2\x89\x8b\x42\x78\xb6\x55\xd9\xb6\x15\xde\x1d\xc4\xbd\xc9\x38\xc7\x40\xb9\x75\xca\x33\x63\x08\x54\x85\xe0\x10\xde\xd9\x43\x6d\xd0\x06\xa5\x82\x05\x97\x28\xd4\x90\x3d\xd1\x69\xea\x9b\x5c\x55\x75\xb6\x97\xad\xb1\x2d\xdf\x07\x89\xaa\xc8\x41\xdd\x23\xa4\x59\x88\x89\x6d\x99\x3f\x5d\xc2\x5e\xeb\x96\xf8\xe8\x1e\xf4\xd8\xf3\x6c\xe3\x2d\x28\x0f\xb3\x14\x1e\x68\x52\xa0\xb4\xad\xb2\xd4\x92\x18\x8f\xaf\xe4\xad\x6e\xad\x79\x2a\x0e\x9e\x86\xee\xae\x37\x19\x23\xba\x35\xe7\xb8\x19\x82\xde\x0b\x64\x9c\x0f\xae\xb3\x4e\x87\x3c\x34\xb7\xce\x50\x51\xa2\x08\x94\x11\xeb\xf7\xa0\xaa\x7e\x78\x41\xa3\x7e\x6d\xaa\x4a\x77\xfe\x34\xd4\xd7\x91\x56\xd5\x07\x78\xf7\x26\x8b\x89\x0d\x00\xd0\xe1\x32\x23\xd5\xe2\x99\xb6\xe3\x69\x8a\xdc\xe2\x21\x4d\x7f\x3a\xe0\x67\x0e\xab\xef\x03\x95\xda\x95\x65\x5c\xda\x26\xf1\x09\x52\xb5\x19\x99\xff\x56\xd0\xc4\x55\x13\x78\x9b\x09\x8c\x3b\xdc\xe4\x54\x4d\x3c\xbb\xcf\xd6\x00\x0a\x12\xa4\xbc\xc8\x6b\x02\xaf\x70\x9d\x61\x82\x0a\x5d\x53\xcb\x51\xfe\xa7\x18\xbc\x1f\x01\x5f\x2d\x80\xa1\x3f\xe8\x7e\x7e\xcd\x43\xaa\x86\x7a\xe1\x8e\xf6\xb3\xce\xf6\xff\x7e\xfe\xc7\xf6\x13\xe0\xa2\x2d\x98\xfe\xcd\x1e\xfc\x35\x38\x67\x6c\x3f\x5c\x9d\x51\xf2\xe9\x0b\x0c\x6d\xdc\xf7\xa7\xaa\xdd\x6c\xc3\xb8\xdf\x97\xb3\xce\xc5\x3f\x7e\x34\xa7\xfd\xab\xf9\xfe\x5f\x7a\x35\xff\x08\x00\x00\xff\xff\xc7\xda\xfb\x66\xbd\x0e\x00\x00")

func templatesModel_testGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModel_testGoTpl,
		"templates/model_test.go.tpl",
	)
}

func templatesModel_testGoTpl() (*asset, error) {
	bytes, err := templatesModel_testGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model_test.go.tpl", size: 3773, mode: os.FileMode(420), modTime: time.Unix(1502036180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPogoGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x55\x4d\x6f\xe3\x36\x14\x3c\x8b\xbf\x62\x60\x14\xad\xbd\x36\x24\xf4\xba\x40\x0e\x9b\xca\x48\x03\x2c\x6c\x6f\xe2\x14\x28\x82\x00\xa6\xa9\x27\x99\x88\xc4\xa7\x90\x94\x9c\xd4\xf0\x7f\x2f\x28\x7f\x6c\xb2\x45\xba\x97\xc8\x27\x81\x7c\x33\x9c\x37\x9c\x47\xef\x76\xc9\xa7\x8f\xfa\x25\xfb\xbd\x08\x7c\xf8\x4b\x5a\x2d\xd7\x25\x39\x9c\xd7\x3e\xf2\x0c\x21\x3e\x9c\xb2\x93\x3d\x6f\x2c\x16\x52\x3d\xca\x82\x7a\x12\x5e\x1f\xd9\x77\x3b\xc4\xb7\xe4\xbd\x36\x85\x8b\x4f\x47\x86\x82\x5e\xfa\x5a\x70\xc1\xa8\xa4\x7d\x24\xdb\x53\x5f\x49\x82\xab\xe9\x6c\x7a\xf3\x65\x39\x4d\x71\xf9\x37\x16\xf3\xab\x79\x8c\x74\x8e\xd9\x7c\x89\x69\x7a\xbd\x8c\x7b\x6a\x2d\x95\x5e\xae\xa5\x23\x68\xe3\xc9\xe6\x52\x11\xdc\x86\x9b\x32\xc3\x96\xed\x23\xb6\xda\x6f\x90\x1d\x6b\x12\xf7\x54\xc6\xe9\x25\x7e\x7d\xbb\xb2\x7c\xee\xcf\x94\xf4\x12\xda\xc1\x6f\x08\x8a\xab\x8a\xcd\x2b\x99\x39\xdb\xb3\x0e\x70\x4d\x56\x7a\xcd\x26\x14\x4b\x0f\x25\x0d\xd6\x84\xc6\x51\xd6\xf5\x10\xb8\xfc\x4b\x4d\x0e\xb9\xe5\x0a\x4e\x6d\xa8\x92\x58\x75\x31\xea\xbe\xe3\x99\xac\x42\x82\x56\xb1\x48\x92\x50\xbd\xdc\x68\xf7\x73\x2b\xa4\xc9\x7e\x34\x23\x16\xe1\xa0\x4e\xf9\x59\xeb\x4e\x44\xd3\x67\x52\x43\xe7\xad\x36\xc5\x04\x71\x1c\x9f\x37\x77\xfb\x11\x86\x75\xf1\x1c\xff\xc1\x55\x25\x4d\xb6\x94\xc5\x04\x64\x2d\xdb\x91\x88\xbe\x35\x64\x5f\xde\x87\x7d\x0a\xb8\x1b\xde\xba\x1f\x10\x37\xbc\x7d\x17\x74\xc2\x88\xde\xa6\xa5\x59\x97\x5a\x41\x35\xce\x73\xa5\xff\x09\xef\x18\x4a\x2e\x0a\x6d\x8a\x57\x96\xf4\x16\x99\xaf\x5c\xa0\xb6\xdc\xea\x8c\x0e\xc9\x29\xb9\x40\xde\x18\x75\x48\xc3\xfa\x05\x05\x99\x90\x16\xca\xf0\xd4\x90\xd5\xe4\x62\xd1\x4a\xdb\x01\x2f\xba\xca\x77\xbd\xdb\xf5\xec\x19\xd7\x87\x0c\x87\x6c\x37\xb5\x23\xeb\x1d\x86\xcb\x79\x3a\xff\x8c\x4a\x3e\x12\x7c\x08\xa5\x34\x20\xd3\x54\xa3\x9e\x2c\x54\x6c\x9c\xc7\x50\x00\x49\x82\xbb\x4e\x44\xca\x33\xf6\x9b\x70\x7f\x29\xc3\x1c\x3f\x75\x1e\xdc\xb5\xf4\x9b\x83\x84\x62\x93\x97\x5a\x79\x81\xff\x40\x2e\x30\x38\xbc\x63\x7f\x5e\xcf\xae\x06\x6f\x69\xef\xea\x4c\x7a\xc2\x82\x6c\xce\xb6\x0a\x9d\x35\x87\x95\xed\x86\xcc\xff\xd3\x1f\xa1\x07\xf6\xbb\x45\xfa\x65\x39\x1d\x88\x51\xbf\xd7\xb3\xa1\xb2\x26\xdb\x45\x24\xdc\x13\x3c\xc3\x95\x5a\x11\xb8\xb1\xc8\x35\x95\x99\x0b\x09\x67\xdc\x7e\xfb\x8a\xdc\x6a\x32\x59\xf9\x02\x6d\xea\xc6\xf7\xf5\x4f\x9e\x24\xb8\xed\x24\x28\x36\x6d\x97\x97\xa0\x45\x71\xd9\x54\xe6\x28\xc6\x71\x45\x87\xab\x08\xd3\xe0\x9e\x4a\x64\x56\xb7\x64\xbb\x47\xb2\x31\x19\x59\xe7\xa5\xc9\x44\x37\x23\x1d\xd9\xf0\x84\xaf\x64\x7d\x7f\x98\x85\x87\x57\x73\x30\x01\xe7\xb9\x23\x1f\xe8\x47\x18\x2a\xdc\x3f\x9c\x06\x46\xbf\xfa\x6e\x71\xff\xf0\x76\x7a\x44\x64\xf0\xf9\xe2\x84\x1e\xe3\x77\x11\x85\xa4\x2b\x2e\x27\x68\x65\x19\xf6\xac\x34\x05\x9d\xf5\xef\x44\x14\x29\x5c\x40\xd6\x35\x99\x6c\xa8\x26\x58\x0d\x56\x63\xc5\xe5\x78\x35\x58\x8d\x44\x14\xe9\xef\x9b\x7a\x82\xc1\x2f\x83\xb1\xf3\x36\x58\x11\x5f\x7b\x96\x43\x33\x0a\x45\xed\xf7\xa2\xb6\x3b\x28\x2c\x9a\xf1\x58\x44\x7b\x11\x59\xf2\x8d\x35\x50\x13\xe8\x09\x5a\xb1\x17\xff\x06\x00\x00\xff\xff\x69\xd0\xc1\x1a\xd1\x09\x00\x00")

func templatesPogoGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPogoGoTpl,
		"templates/pogo.go.tpl",
	)
}

func templatesPogoGoTpl() (*asset, error) {
	bytes, err := templatesPogoGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/pogo.go.tpl", size: 2513, mode: os.FileMode(420), modTime: time.Unix(1503978090, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/codec.go.tpl": templatesCodecGoTpl,
	"templates/enum.go.tpl": templatesEnumGoTpl,
	"templates/model-many-to-many.go.tpl": templatesModelManyToManyGoTpl,
	"templates/model.go.tpl": templatesModelGoTpl,
	"templates/model_test.go.tpl": templatesModel_testGoTpl,
	"templates/pogo.go.tpl": templatesPogoGoTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"codec.go.tpl": &bintree{templatesCodecGoTpl, map[string]*bintree{}},
		"enum.go.tpl": &bintree{templatesEnumGoTpl, map[string]*bintree{}},
		"model-many-to-many.go.tpl": &bintree{templatesModelManyToManyGoTpl, map[string]*bintree{}},
		"model.go.tpl": &bintree{templatesModelGoTpl, map[string]*bintree{}},
		"model_test.go.tpl": &bintree{templatesModel_testGoTpl, map[string]*bintree{}},
		"pogo.go.tpl": &bintree{templatesPogoGoTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

