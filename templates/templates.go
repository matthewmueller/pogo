// Code generated by go-bindata.
// sources:
// templates/enum.go.tpl
// templates/model-many-to-many.go.tpl
// templates/model.go.tpl
// templates/pogo.go.tpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesEnumGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x96\x51\x6f\xe2\x38\x14\x85\x9f\xe3\x5f\x71\x17\x55\x6a\x82\xba\x8e\xfa\xb2\x0f\x95\x78\xd8\x6e\x51\xb5\x52\x17\x50\x61\xab\x5d\xad\x56\xc2\x84\x9b\x60\x91\x38\xd4\x76\x52\x98\x34\xff\x7d\xe4\x24\x04\x33\xed\x94\x99\x51\x53\x69\xfa\x18\xdb\xe7\x1e\x9f\xfb\xf9\x96\xa2\xf0\xfb\xef\xf5\xe7\x97\x25\x31\x7a\xf0\xc0\x24\x67\x8b\x18\x15\xb4\xdf\xde\xb3\x06\x29\x0a\x38\x43\x01\x57\x03\xa0\x43\x91\x25\x74\xc4\x12\x84\xaa\x10\x9c\x25\xe6\xb3\x59\x7d\x06\xc5\x45\x94\xc5\x4c\xb6\x4b\xf9\x2b\x6b\xcf\x10\xa7\x4f\x58\xed\x79\x77\xa3\x55\x18\xe3\x4c\xc2\x84\x05\x6b\x16\x61\x47\x71\x6c\x1a\xf5\xa2\x00\x3a\x45\xad\xb9\x88\x14\xdd\x97\xec\xec\x5e\x93\x34\x4a\x21\x61\x72\x8d\xb2\xa3\x7b\xf9\x3e\xdc\x0e\x47\xc3\xfb\xdf\x67\xc3\x1b\xb8\xfe\x17\x26\xe3\xdb\x31\x85\x9b\x31\x8c\xc6\x33\x18\xde\xfc\x39\xa3\x1d\xb6\x0c\x45\x96\x80\xde\x6d\xba\x6a\x9a\xef\x43\x8d\x6b\x59\x02\x57\xa0\x57\x08\xf3\x86\xeb\xb2\x9c\x5b\xe5\x43\x99\x26\xd5\x12\x9d\x06\x2b\x4c\xd8\x9e\xf6\x39\x25\xd5\x7a\xab\x92\x71\xa1\x2f\x7f\xfb\x89\x23\x09\x52\xa1\x34\xb8\x04\xcc\x9d\x24\x13\x11\x36\xef\xfb\x81\xc5\x19\x2a\x83\xb2\x63\xc5\x66\x22\xb9\x63\x0b\x8c\xe1\x19\x02\xb6\xe1\x9a\xc5\xfc\x13\x5a\x79\x9e\x1f\x76\x94\xe5\x79\x7b\x8e\x12\xe7\xb4\xc4\xa0\xdd\xee\x9a\x4d\x63\xb9\xac\x66\x84\x57\x9b\x43\xb1\x34\x6e\xbc\x8e\xc2\x9e\x32\xcd\x55\xb8\xab\x2e\xa1\xb4\xe4\x22\x42\x09\x5c\x68\x94\x21\x0b\x3a\x04\x72\x5a\xd5\x02\x89\x3a\x93\x42\x59\xe5\x21\x37\x1d\x80\x34\x3c\x70\x6a\xa2\x99\x93\x30\x13\x01\xb8\xcd\x70\x2d\xcb\x36\x34\xaf\xd1\x72\xbd\xbd\x42\x41\x9c\x9c\xd5\x0c\x3d\xb0\xb8\xf9\x4a\x88\xa3\x9e\xb8\x0e\x56\x60\x49\xbc\xd5\x7f\x80\x80\x29\x3c\x8d\xc0\x15\x01\x80\xb6\xd8\x00\x7a\x36\x0a\xbd\xa3\x26\x3a\x25\x21\x4e\x7d\xe5\xfd\x01\xd2\xd5\xcc\xb4\x1b\x9b\x30\xa9\x56\x2c\xfe\x98\xce\xfe\x55\x17\x9b\xe1\x56\xef\x0b\x2b\x6b\xfe\x08\x9d\x82\xc6\xad\xa6\x6f\x34\xd4\x92\x70\x3d\x70\xff\xfb\x7f\xb1\xd3\x78\x01\x28\x65\x2a\x3d\xd3\xde\x26\xc3\x7a\xe1\x20\x41\xf7\x24\x78\x17\x20\x78\x95\xad\xef\xc3\xdf\x22\xb1\x2c\x65\xe2\xa5\xa9\x6a\xee\xbd\x6e\xaa\x7f\x70\x75\xa4\xe3\x9a\xed\x8d\x01\xaf\x76\x66\x8c\x35\x88\xd5\xc8\x55\x7b\xbc\x6f\xa2\xec\x18\x9a\x1a\xa9\xfe\xc1\xc5\xe0\x34\x86\xc7\xa0\x2d\x31\x64\x59\xac\xaf\x88\xd3\xf2\x66\x2c\x2a\x3a\xc2\x27\xb7\xc7\x45\xce\x62\xbe\x6c\x45\x7b\xde\x11\x9a\x4d\x74\xdd\xcf\x9b\xc7\xd8\x5f\x4a\x9e\xa3\xac\x03\xf9\x10\x3c\xab\x4a\xa0\x2a\x1b\x1c\xd5\x49\x23\xa1\x69\x6c\x3b\xce\xbf\xce\x6c\x75\xd0\xd0\x6a\x0b\xbd\xc2\xec\x4b\x58\x6d\x56\xa7\x01\x13\x5f\x98\x5b\x32\xcd\x16\x4c\xa1\xaf\x1e\x63\x6a\xd6\xc5\x77\xf8\xb3\xf0\x35\x47\x5d\x25\x83\xc3\xd9\xa2\xb4\xc8\x5d\x64\xe1\x05\xa4\x6b\xf3\xb3\x55\xc9\x80\x36\x8f\xce\x23\x0e\x0f\xe1\x97\x74\x6d\xb6\xfc\x00\x4a\x87\xdb\x1e\xbf\x9e\x45\x16\x7a\x9d\x31\xf6\x47\xa6\x74\x9a\x80\x6a\xb2\x32\x09\x6d\xa2\x6d\x87\xff\xcb\x02\x26\x26\xd1\xb6\x9e\x6d\x93\xdb\x7f\x4e\x75\x61\x12\x6d\xdd\x5c\x42\x7f\x13\x6d\x6b\x4c\xee\x91\x2d\x51\x5a\xcd\xe0\x21\xe4\x92\xde\xa1\x70\x3d\x18\x0c\xe0\xd7\x4b\x3b\x7e\x43\x8b\x53\x9e\x8c\x38\x97\xd4\xe8\x5e\xef\x34\x2a\x77\xaf\xe6\x99\xd4\x3f\x07\x00\x00\xff\xff\xec\x11\xd0\x6b\x89\x0d\x00\x00")

func templatesEnumGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesEnumGoTpl,
		"templates/enum.go.tpl",
	)
}

func templatesEnumGoTpl() (*asset, error) {
	bytes, err := templatesEnumGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/enum.go.tpl", size: 3465, mode: os.FileMode(420), modTime: time.Unix(1502015339, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelManyToManyGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x5d\x73\xdb\xb8\x15\x7d\x16\x7f\xc5\x2d\xc7\x9b\x88\x5e\x96\xee\xb3\x3b\x7a\x48\x22\x26\x75\xeb\xca\xae\x2c\x6f\xa7\x93\xdd\x31\x61\xf2\x52\xc2\x9a\x04\x18\x00\x92\xec\xd2\xfc\xef\x1d\x00\xfc\x92\x2d\x79\xdd\x8c\xb9\xeb\x27\x1a\xbc\xb8\xb8\xb8\x38\xe7\xe0\x50\x65\x79\x72\xfc\x56\x7f\x27\x55\xe5\xe8\x7c\xf0\x13\x11\x94\xdc\x66\x28\xa1\x1d\x7b\xcb\x35\x9c\xb2\x84\x23\x05\xa7\x13\x50\x7a\x15\x46\x72\x84\xe0\x2a\x5e\x61\x4e\x20\x58\xe8\x21\x30\xab\xc2\x91\x62\x3a\xca\x8e\x05\x33\x1d\x57\xbf\x88\xf5\x78\x4e\x0a\x18\xcb\x22\xa3\x0a\xdc\x1b\x57\x47\x7b\x90\xc7\xa4\xa0\x8a\x64\xf4\xbf\x08\x8f\xf0\x2b\xa7\x0c\x5c\xb7\x9d\xb5\xd1\xd3\x8e\x62\x78\x84\x8c\x6f\x51\x34\xe3\xf9\xc1\x6c\x92\xb2\xe5\x3a\x23\xe2\x79\xae\xdc\xe6\xca\x9f\xe6\x8a\xb9\x1e\x8f\x79\xa6\xb7\x25\x9b\xda\x3f\xf1\x6c\x9d\x33\xd9\x04\xd1\xe4\x5e\xea\x30\x9a\xdc\xef\x84\x9d\xb1\x04\xef\x51\x76\xb9\xd2\xa6\x32\x9d\x77\x9c\x17\x82\x32\x95\x82\xfb\xb3\xfb\x83\xfc\xd9\x75\xbd\xb6\x2c\x1f\x7a\x85\x2d\xf5\x24\x13\x0a\xee\x3b\xd7\x94\xea\x06\x5d\x13\xf8\xb2\x9f\xb4\xdf\x30\xbd\x00\xa6\xf4\xde\x24\xd9\x9b\x3c\xbd\x2b\x88\x20\xb9\x29\xbe\x7d\xde\x7f\x76\xe9\xdd\x76\x85\x02\x6d\xa4\x7d\xac\x77\xf9\x99\x0b\xa4\x4b\xf6\x0f\x7c\x90\x5d\x70\x9d\x72\xa7\x1d\x7b\x03\x33\x2a\x55\xbb\x01\x3d\x2f\x8f\x49\x8e\x3b\x07\x5e\x17\xfc\xe6\xc0\x35\xe4\xb8\x58\x0b\xb8\x24\xf1\x1d\x59\xe2\x40\xf4\x28\xea\xec\x65\x09\xc1\x15\x2a\x45\xd9\x52\x06\xcd\x92\x83\xed\xeb\x92\x2f\x39\xe4\x44\xdc\xa1\x18\x68\x5f\x27\x27\xf0\x25\x9c\x85\xf3\x0f\x8b\x70\x0a\x1f\xff\x03\x97\x17\x5f\x2e\x02\x98\x5e\xc0\xec\x62\x01\xe1\xf4\x6c\x11\x0c\xb4\xb5\x50\x08\x2e\x86\x12\xb3\x93\x13\x9d\xdf\xca\x48\x55\xcd\xb8\xfa\xcc\xd7\x2c\x01\x81\x6a\x2d\x18\x26\x40\x53\x50\x2b\x73\x98\x9a\x88\x55\x05\x54\x02\xe3\x0a\x52\x1d\xe6\x6c\x88\xd8\x3b\x7d\x02\x68\x8a\x0e\x66\xb8\x1d\xbb\xdd\xe4\x76\xa6\xeb\x0d\xd4\xac\xc5\x0a\xad\x2e\xc3\x16\xdf\x67\x19\x10\xa5\x48\xbc\x02\xbe\x16\xf0\x69\x7e\x3d\x85\x1c\xd5\x8a\x27\x12\x38\x53\x7c\xb8\x96\x5a\x91\xaf\x2a\x88\x33\x22\xa5\xa3\x1e\x0a\xec\xc6\xa4\x12\xeb\x58\x41\xe9\x00\x24\xb7\x30\xfd\xe8\x0c\xc5\x09\xdd\x8b\x9c\x27\x98\x81\x5a\x11\x05\x31\x67\x8a\x50\x26\x81\x64\x99\x69\x48\x42\x14\xb9\x25\x12\x21\xa5\x98\x25\x03\x22\xac\xc1\x87\xad\xa6\x6b\x47\xfe\xa4\x1d\x65\x09\x82\xb0\x25\x3e\xbf\x77\xda\x3b\x37\xe6\x28\x62\x84\xa3\x56\xb5\xa7\x44\x91\x85\x4e\x58\x55\x36\x83\xbd\x69\x1f\xa1\x77\x33\x54\x15\xd8\x04\x55\x05\xd1\xaf\x92\xb3\x53\xb7\x0d\xac\x2a\x9f\xe7\x54\x61\x5e\xa8\x07\x37\xd2\x71\x34\x85\xe0\x13\xcf\x73\x64\x7a\x82\x2d\xbf\x37\x50\x96\x80\x2c\xe9\x3f\x0c\x76\x80\x97\x82\x6e\x88\x42\x8b\x22\x7d\x7e\xb6\x57\x5c\xf8\x40\xe2\x18\xa5\xc4\x04\x36\x94\x40\xc1\x97\x3c\x38\x5a\x7c\xf8\x78\x1e\x0e\x7c\x88\x86\xc5\xbd\x42\x9c\x74\xcd\xe2\xee\xd5\xd8\x00\xda\x83\xe3\x16\xec\xfa\x58\xad\x98\xc0\xbb\x66\xb0\x4c\x6e\x87\xef\xd9\x0a\xb3\x02\x05\x28\x0e\x4b\x54\x06\xf2\x5a\xc7\x18\x67\x7f\x66\x34\x6b\x10\xcf\x99\x21\x82\x25\xc9\x60\x9d\x3b\x5c\x80\x6d\x9f\x7d\x1e\x77\x0d\x3e\x6e\xc8\xe1\x69\x9f\xf0\x55\x2a\x41\xd9\xf2\x17\xca\x14\x8a\x94\xc4\x58\xda\xb6\xd6\x7b\x30\x66\xe2\x0e\xc7\xfb\x23\xbd\xdf\xa4\x95\x49\x63\x8c\xea\x3e\xe2\x38\xa0\xf9\xd0\x96\x16\x74\x33\xaa\x0a\xfe\x34\x01\xbd\x17\x5d\x4c\x53\xce\xd7\x3e\xb3\xdc\x5f\x60\x72\x60\xae\x03\xd0\x23\x10\x40\x07\x93\xba\x33\x43\xe1\xa3\xc7\x95\xe0\x33\x65\xc9\xd8\x3b\x85\x94\xb2\x04\x38\x43\x10\x7c\x0b\xb7\x0f\x40\xd5\x7b\xa9\x2d\x68\x4e\xc4\x03\xdc\xe1\xc3\x70\xd0\xd0\x15\x00\x81\xa8\x6d\x52\x64\xd7\x97\xd0\xf8\xca\xc6\x15\x46\x3e\x44\x2e\x3c\x42\x63\xa2\xa3\x1f\x64\xe4\x56\x95\x45\xd0\xb8\xfe\x3e\x68\xb0\x13\x1b\xec\x98\xed\xed\xf8\x5e\x3d\xba\x0f\x67\xbe\xbe\xaf\xed\x9d\xed\x41\xe9\x8c\x4e\x4e\x40\x7e\xcb\x40\x62\x86\xb1\x82\x6f\x6b\x14\x0f\xfe\x4e\x43\x0a\xc1\x37\x34\xc1\x44\x57\x2b\xf1\xdb\x1a\x59\x8c\xce\x48\x7e\xcb\xa4\x12\x1a\x4b\x91\x33\xba\x0a\xcf\xc3\x4f\x0b\x68\xbe\x04\xaa\xca\x19\x7d\x9e\x5f\xfc\xb3\x55\x62\x67\xf4\xef\xbf\x85\xf3\x10\xfa\x6e\x5b\x8f\x46\x8e\x33\x3a\xe7\xcb\xb1\x4d\xe6\x43\xcf\x37\x57\x95\xe7\x8c\xf4\x19\x9d\x5a\x58\x99\x1d\x07\xc9\x6d\xf0\x2f\x5d\xe1\x9c\x6f\x0f\x4e\xa2\x29\x18\x2f\x2f\xf8\x36\xb8\x8a\x09\x1b\x37\xdf\x12\x55\xe5\xfd\x15\x70\x17\xc9\x26\x78\x32\x81\x62\x79\x1f\x84\x42\xcc\xf8\x9c\x6f\x65\xfd\xae\x85\x29\xa3\x99\x0f\xfb\xcc\x8f\x09\xab\x9c\xa7\xa1\xa8\x11\xef\x38\xa3\x7a\xac\x3d\x04\x5f\xbf\xfe\x5d\xd0\x7e\xc6\x24\x0a\xa5\xf1\x4e\xcd\x13\x10\x60\xb8\x35\x98\xa7\xda\x0d\xa9\xd6\x3a\x0d\x06\xf7\xb3\x66\xe1\x3e\xe0\xcd\xe2\x51\x03\x8b\xe8\x25\x44\xd7\x5b\xe8\x10\xdc\x09\xe5\x78\x17\xcc\x1d\x90\x5f\x90\x7f\xc2\x12\x28\x04\x16\x44\xa0\x7e\x9d\x43\xca\x85\x89\x33\x88\x77\x46\x37\xb1\x0f\x37\xd4\x87\x1b\xf3\xb5\x2c\x33\x1a\xe3\xb8\x16\xeb\x77\x6d\x0d\x9e\x0f\x7f\xf1\x9c\x96\x33\x75\x6f\xbf\x8f\x33\x67\xb3\xab\x70\xbe\x80\xb3\xd9\xe2\xa2\x73\x2c\xe3\x08\x7e\x04\xab\xec\x32\xf8\x3b\xa7\x6c\xac\xeb\xd2\x9f\x89\x1e\xfc\x08\x91\xe7\x8c\x7e\xfa\x70\x7e\x1d\x5e\xed\x0b\xa4\xbb\x81\xf3\x70\x71\x3d\x9f\x9d\xcd\xbe\xf4\x69\x09\xf0\x94\x72\x37\x9b\x20\x08\x5e\x4b\xb5\x26\xf8\xff\xa2\xd8\x0b\xcc\x78\xf7\x07\x50\xe3\xba\x48\x88\x42\x4d\x8d\xb5\x79\x02\xc2\x00\xef\xa9\xd4\x1f\xaf\x35\x41\x7e\x0f\x7a\x5c\xd7\x8b\xd7\xf4\x78\xe3\xeb\xa0\xde\xe4\x93\x0b\xc1\x87\xd7\xb3\xc9\x62\x1f\x8d\x11\x7f\xce\x03\xcb\x81\x94\x0a\xa9\x20\x5e\x61\x7c\xa7\x85\x74\x8b\xb0\x22\x1b\x43\x2f\xcd\x2e\xa4\x4b\xa6\xc9\x20\xf7\xd8\x92\xdd\xdf\x4b\xac\xeb\xe8\x3c\x49\xfd\x23\x49\x55\x69\x65\x3e\x00\xa4\xee\x9b\x33\x72\xf7\x4f\x76\x21\x5f\x4b\x05\xb7\xad\x14\x44\x9e\x63\xd5\xba\x33\x23\x66\x1b\x09\x67\xef\x55\x83\x86\x67\xc5\x8f\x5e\xae\x3d\xc1\x0c\x55\x23\x15\xa8\x7c\xd8\x31\x45\xde\xf3\xd5\x7a\x22\x64\x65\x46\xbe\x24\x3e\x3a\x63\x59\x42\x86\x6c\xff\xf2\x3d\x35\xaa\x85\xac\x27\x32\xd7\x97\xd3\x0f\x8b\xb0\x53\x97\xab\x70\x61\x84\xc3\x19\x8d\x5e\xd0\x18\x98\xec\x0f\x7a\xa2\x2f\x07\xae\xf4\xbd\xba\x13\xd9\x2a\xc5\x9a\x35\x55\x6e\x48\xb6\x46\x63\x68\xbf\xf6\x2d\x6c\x59\xfd\x56\xbf\xeb\x89\x13\x20\x45\x81\x2c\x19\xdb\xff\xfd\x03\x00\xda\xed\xff\xe8\xd0\xe4\x46\xd7\xfa\xc2\x68\xdf\x99\xf1\x57\xaa\x63\x6f\xc6\x50\x26\xe4\xbb\x3d\xc8\xc0\x4a\x7b\x7c\x48\x6d\xa7\x96\x1e\xde\x29\x58\xa2\x00\x31\x1a\xbb\x96\x5a\x6d\xb5\xd8\xf5\xb9\xf6\xf6\x6a\x7b\xdc\x53\xdc\x69\x53\xc0\x20\x8a\x5b\x6f\xf4\x99\x05\x37\x42\xd5\xf3\xd9\x35\xfe\xcd\x77\x35\xd4\x5c\x35\x7e\x60\x1a\x9e\x87\x8b\x10\x5e\xed\x9b\x77\xf9\xf4\x92\x8b\xa6\x29\xdc\xf8\x16\x8e\x3b\x00\x0e\xef\x31\x3e\x30\xe9\xfb\x20\xfa\x2a\x74\x3e\x01\xa6\x05\xe3\xff\x02\x00\x00\xff\xff\xcc\xd2\x5f\xf4\x1d\x1a\x00\x00")

func templatesModelManyToManyGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelManyToManyGoTpl,
		"templates/model-many-to-many.go.tpl",
	)
}

func templatesModelManyToManyGoTpl() (*asset, error) {
	bytes, err := templatesModelManyToManyGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model-many-to-many.go.tpl", size: 6685, mode: os.FileMode(420), modTime: time.Unix(1502015360, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5b\x5f\x73\x1a\x39\x12\x7f\x9e\xf9\x14\x7d\x94\xd7\x01\x2f\x37\xec\xbe\xe6\x8a\x07\xc7\x90\x9c\xaf\x1c\xc8\xd9\x78\xef\xae\xb2\x29\x23\xcf\x08\xd0\x7a\x46\x22\x1a\x01\xe6\xc8\x7c\xf7\x2b\xfd\x99\xbf\xcc\x60\x48\x3c\xc4\x5b\x97\x7d\xf2\x8e\x5a\x52\x77\xab\x7f\x3f\x75\xb7\xc8\x66\xd3\x39\x7b\xae\xff\x3a\x51\x64\xcb\xf5\xe0\x37\xc4\x09\xba\xf7\x71\x08\xc9\xb7\xe7\xdc\xc3\xde\x6c\xe0\x44\xc0\xeb\x2e\x08\xb9\x0b\x45\x01\x86\x13\xe7\xc6\x9d\xe1\x00\x81\x33\x92\xdf\x40\x6d\x0b\x27\x82\x4a\x31\xfd\xcd\x19\x48\x41\x33\xe0\xca\xef\x72\xf8\x0b\xb8\x68\x4e\x04\xf2\xc9\x7f\xd3\xc1\xa5\x1a\x75\xe1\x0b\xf8\x6c\x85\x79\xfc\x3d\x48\x27\x85\x84\x4e\x17\x3e\x4a\x87\xf4\x94\x60\x6b\xca\x72\x2a\x07\xe6\x9c\x50\x01\x8d\xd3\x86\x92\x6c\x38\x8d\x78\x7c\x6e\x46\x03\xc4\xd7\xb1\x9e\x17\xcc\x5f\x04\x34\x4c\x44\x94\xa9\x2e\xc3\xdc\xcd\xd8\x79\x32\x77\x7a\x48\xa0\xd1\x7a\x9e\xaa\xcd\xb4\xa0\x2f\x3d\x12\x56\xac\x46\xbc\xc7\x50\x8a\x11\xef\x31\x27\x76\x49\x3d\xfc\x88\xc3\x74\xad\x89\x94\x0a\xd0\x5c\xad\xdb\x0c\x94\x05\x13\x68\xfc\xde\xf8\x29\xfc\xbd\xd1\x68\xc1\x17\xf8\x83\x11\x0a\x8d\x36\x34\xd2\x49\xd3\xec\xa4\x20\xe3\x59\xb9\x00\x9e\x90\x47\xe5\x91\xad\xc9\xcf\x1e\x22\x2a\x0c\x87\x0b\x0e\x1f\x90\xfb\x80\xa6\xb8\xa6\x40\x9c\x9b\xd5\x37\x1b\x70\x6e\xb0\x10\x84\x4e\x43\x27\xde\xb2\x36\xbb\x3e\xb0\x29\x83\x00\xf1\x07\xcc\x6b\xb2\xab\xd3\x81\x77\xfd\x41\xff\xfa\x7c\xd4\xef\xc1\x9b\xff\xc0\x87\xe1\xbb\xa1\x03\xbd\x21\x0c\x86\x23\xe8\xf7\x2e\x47\x4e\x4d\xa6\xf5\x39\x67\xbc\x2e\xda\xe8\x74\xe4\xfa\x1a\xc8\x51\x34\x60\xe2\x2d\x5b\x50\x0f\x38\x16\x0b\x4e\xb1\x07\x64\x02\x62\xa6\x0e\x53\x82\x34\x8a\x80\x84\x40\x99\x80\x89\x14\xb3\x97\x88\x97\x4e\xef\x02\x56\x4a\x3b\x03\xbc\x6a\x36\xd2\xc9\xc9\xcc\x46\xab\x26\x67\x8d\x66\x58\x33\x20\xac\xf0\x2b\xdf\x07\x24\x04\x72\x67\xc0\x16\x1c\x2e\xae\x6f\x7b\x10\x60\x31\x63\x5e\x08\x8c\x0a\x56\x9f\x4b\x35\x9b\x46\x11\xb8\x3e\x0a\x43\x5b\x48\x42\x4a\xbe\x85\x82\x2f\x5c\x01\x1b\x1b\xc0\xbb\x87\xde\x1b\xbb\x2e\x4c\x48\x5f\x04\xcc\xc3\x3e\x88\x19\x12\xe0\x32\x2a\x10\xa1\x21\x20\xdf\x57\x0e\xf1\x90\x40\xf7\x28\xc4\x30\x21\xd8\xf7\x6a\x8c\xb0\x38\x3e\xb4\x36\xa9\x3b\x82\x82\x3b\x36\x1b\xe0\x88\x4e\xf1\x36\x4d\x27\xb7\x5b\x91\xf2\x73\x84\xaf\x56\xd0\x57\x5a\xe1\x0a\x03\xbd\x40\x14\xc1\xf8\x8f\x90\xd1\xd7\x8d\x44\x30\x8a\xda\x2c\x20\x02\x07\x73\xb1\x6e\x8c\xa5\x1c\x99\x80\x73\xc1\x82\x00\x53\x39\x41\xab\x9f\xf9\xb0\xd9\x00\xa6\x5e\xf6\x8f\xda\x0e\xf0\x03\x27\x4b\x24\xb0\x8e\x22\x79\x7e\xda\x57\x8c\xb7\x01\xb9\x2e\x0e\x43\xec\xc1\x92\x20\x98\xb3\x29\x73\x4e\x46\xe7\x6f\xae\xfa\x35\x1f\xa2\x42\x71\x46\x11\x7b\xb2\xa0\x6e\x3a\xd4\x54\x01\xdd\x82\xb3\x24\xd8\xe5\xb1\x6a\x32\x81\xd3\xf8\xe3\xc6\xbb\xaf\xdf\x67\x33\xec\xcf\x31\x07\xc1\x60\x8a\x85\x0a\x79\xc9\x63\x94\xd1\xbf\x52\xe2\xc7\x11\xcf\xa8\x02\x82\x06\x49\x6d\x9e\xab\x56\x40\xbb\xaf\x69\xf2\xab\x28\x4a\x1d\xd7\x32\x12\xcd\xd4\xed\x67\x31\x64\x5a\x32\x9b\xf8\x18\x0a\x4e\xe8\xf4\x13\xa1\x02\xf3\x09\x72\xf1\x46\x3b\xdb\x58\xa6\x52\x8e\x07\xdc\x2c\x97\x6c\x3d\x09\x36\xb5\x8c\xca\x13\xcb\xe0\x64\x83\x44\x49\xa2\x9a\x93\xce\x88\x22\xf8\x4b\x17\xa4\x85\x52\x99\x58\x9d\x8f\x59\xbc\x35\x3e\x41\xb7\x62\xae\x0d\x90\x81\x15\x40\x1a\x3c\xc6\x5f\x75\x45\x4d\x06\x41\xce\x5b\x42\xbd\x66\xeb\x35\x4c\x08\xf5\x80\x51\x0c\x9c\xad\xe0\x7e\x0d\x44\xbc\x0a\x93\xb4\xf4\x01\xaf\xeb\x4b\xe4\xc9\x44\x26\xc1\x51\x24\x83\x47\x6a\x03\x28\x83\xbe\xfb\x35\xa8\x1b\x75\x9e\xf8\x73\x57\x14\x29\x63\x72\xe2\x60\xf2\x67\x39\x5a\x16\x5d\x6d\x79\x77\xeb\xfb\xbb\x05\x1b\xdb\xea\x74\x20\xfc\xec\x43\x88\x7d\xec\x0a\xf8\xbc\xc0\x7c\xdd\xce\xb9\x61\xce\xd9\x92\x78\xd8\x93\x9a\x85\xf8\xf3\x02\x53\x17\xdb\x56\xf8\xd9\x0f\x05\x97\x11\x34\xb6\xad\x9b\xfe\x55\xff\x62\x04\x71\x12\x1d\x45\xb6\xf5\xf6\x7a\xf8\x3e\x61\x65\xdb\xfa\xd7\xdf\xfb\xd7\xfd\xa2\x61\xd0\x85\x93\x5f\x6d\x6b\x6c\xdb\xd6\x15\x9b\x36\xf5\x92\x6d\xc8\x09\xb5\x6c\x4b\x9e\xcf\x6b\x1d\x52\xca\x7e\xc7\xbb\x77\xfe\x29\xf5\xbc\x66\xab\xaa\x49\x2a\x80\xb1\x9c\xc6\xd9\xca\xb9\x71\x11\x6d\xc6\xd9\x7a\x14\xb5\xfe\x06\x38\x1f\xc6\x4a\xb8\xdb\x85\xf9\xf4\xd1\xe9\x73\x3e\x60\xd7\x6c\x15\x9a\xb1\x24\x46\x29\xf1\xdb\x50\x96\x0f\x29\xb1\xc8\x2e\x8a\x62\x19\xee\xb6\x6d\x99\x6f\xc9\x59\xb4\xe5\xb0\xad\xca\x07\x83\x84\xe3\x04\xfd\x9b\xb5\xe3\x38\x49\xe4\xa3\x34\xee\x43\x58\x50\xf2\x79\xa1\xd9\x2b\x3e\x7a\x62\x8a\xa3\xda\x50\xa0\xd9\x49\x16\x67\x99\x7a\x75\xab\x24\xf3\xe3\xca\x2d\xa9\xf1\xd4\x8c\xb4\xb2\xd3\x19\x5f\xa6\x06\xf3\xc3\x5c\x15\x16\x97\x5d\xe7\xd4\x6b\x64\xa6\xcd\x11\x47\x41\xbc\xb6\xf9\x9f\xb4\xd0\xcc\x6e\x21\x35\x5a\x22\x1e\x6e\x6d\x11\xe0\xdc\x06\xa6\xae\x33\x98\x7e\xb3\xce\xeb\x17\x45\xb1\xdb\x73\x50\x4f\x8c\x8c\x57\x19\x03\xa2\x1e\x8c\x1b\xf0\x05\xe2\xf2\x73\xfc\x53\x38\x6e\x44\xd1\x53\x34\xb0\xbd\x63\x33\x6f\xeb\x4b\x64\x04\xc9\x86\xde\xe3\x6a\x86\x39\x4e\xbc\x5e\x4a\x08\xe9\x31\x1c\xc6\x09\x85\x79\xd2\xd2\x72\x4e\xb0\x2d\x49\x02\x9c\xa7\xc4\x60\xc5\x5f\x4a\x88\xc1\xb2\x4a\x60\x5d\xca\x0d\x96\x15\xd9\x65\xc2\x98\x73\xdb\x7a\x49\xf4\xf0\x1e\xd1\x75\xc2\x0e\x01\xa2\x6b\xe9\xa6\x50\x9e\x31\x92\x29\xa1\x47\x04\x61\xb4\xbe\x2c\x2a\x56\x21\xb3\xff\x38\xf1\xc9\xd8\xe8\x31\x25\x4b\x4c\x53\x6d\x9e\x82\x84\x32\x29\xd5\x5d\x27\x4a\x6d\xd0\x78\x70\x1c\x07\xb2\x39\x13\x34\x3f\x7e\xca\x63\xc2\xe0\x41\x56\xc1\x77\x0c\x32\xa3\xb6\x75\x5c\x94\x8c\xe1\xe7\x8c\xd1\x79\x70\x24\xc6\xc8\x4b\x4f\x9e\x98\x86\x73\x29\x38\xca\x27\x15\xe3\x3e\x73\x8f\xdd\x31\x1d\xa8\xfa\x7a\xf3\xf0\x04\x73\xb5\x87\x73\xe1\xb3\x10\x37\x5b\xb6\xcc\x48\x99\xf9\x36\xc0\x8f\xa2\xa9\x3c\xa6\x5c\x56\xc2\x34\xe9\x5d\xab\x2f\xe6\x70\xf7\xcd\x6c\x69\x04\x56\xe0\xcf\xca\xe8\x58\x0e\x3c\x85\x3c\xab\x60\x8a\xfc\x2a\xd5\xb8\x63\xd0\x05\x34\x9f\x63\xea\x35\xe5\x58\xa2\x6e\xcb\x58\x4b\x26\x5a\xc5\x3e\xe7\xcd\x56\xa5\x77\x52\x11\x73\xdb\x77\x3a\x80\x69\xb8\xe0\x18\x56\x38\x16\x44\x14\x54\x01\x0a\x88\x73\xb4\x56\x32\x1c\x89\x99\xac\x5f\x66\x48\x65\x0b\xb0\x9a\x61\x2a\x67\x04\x88\x87\x33\xe4\x2b\x36\xf2\x31\x6d\xde\xb1\x96\xb4\xff\x17\x65\xb3\x59\x4e\x65\xfe\xb9\x60\xfd\xa5\xa5\x59\x43\x12\x4a\x4e\x3d\x4d\x25\xc7\x21\x90\x21\xc5\x09\x7f\xe0\x47\xe4\x0a\x7f\x9d\xcd\xaf\x8f\xc6\x22\x43\x8a\xd3\xe4\x3e\x77\xdb\xa2\xfd\xa9\x43\x1a\xb3\x3f\x73\xbc\xb0\x5b\xf5\x10\xbe\x78\xfa\x1a\xdd\x22\x8b\xbd\xd2\xea\x6a\xec\x1e\x94\x54\x27\x41\x6f\x52\xea\x5c\x84\x6f\xdd\x99\xf5\x07\xfa\x25\x0d\x31\x17\x32\xce\x89\xfa\x0b\x10\x50\xbc\x52\x8e\x24\x54\x30\xd5\x04\xd0\x0d\xca\xda\x62\xfc\x32\xde\x38\x73\x3f\xa6\x9b\x8f\xe3\x60\x18\x6b\x3d\x9c\x5d\x91\x6e\xac\x49\xc3\x37\xed\x41\x34\x4b\xef\xc2\x9d\xed\x0e\x95\xba\xce\x39\x9e\x23\x8e\xe5\x70\xa0\xee\x06\x29\xa7\xc2\xdd\xb6\xee\xdc\x36\xdc\x91\x36\xdc\xa9\x97\xa3\xd0\x27\x2e\x4e\xf5\x72\x4c\x47\xe4\x34\x65\x62\x49\x6c\x76\x02\x1d\xe3\xf0\xaf\x83\xce\xe5\xe0\xa6\x7f\x3d\x82\xcb\xc1\x68\x98\x36\x0b\x9b\x12\x28\x1a\xdb\xa1\xf3\x0f\x46\x68\x53\x6a\x28\x33\xf9\x16\xfc\x0c\xe3\x96\x6d\xfd\x76\x7e\x75\xdb\xbf\x29\x13\x24\x79\xc1\xeb\xfe\xe8\xf6\x7a\x70\x39\x78\x97\x43\x67\x31\x93\xbd\x5b\x2a\x18\xed\x97\xbe\xc6\xc2\x07\x55\xb2\x3b\x0a\xd0\xd3\xef\x00\x97\xdb\xb9\x87\x84\xba\x16\x16\xea\x2f\x75\x15\x3e\x92\x50\x10\x3a\x35\xa0\x39\x06\x64\x6e\xcd\xe6\xf9\xeb\x40\x56\xbe\xe3\x5c\xe3\x60\xbc\x0b\x2c\xc6\x96\x6d\xb0\x14\xba\x0f\xb9\x0e\x4c\x29\x8a\x74\xa4\x63\x91\x8f\x81\xed\xf8\xd7\xb1\x3f\x21\x3c\x14\xe0\xce\xb0\xfb\x20\xe9\x77\x85\x61\x86\x96\x0a\x60\x59\x10\xa8\x38\xc9\xeb\xd1\x4d\xb9\x38\x17\x16\xe9\xdb\xcd\x38\x8b\xa2\x62\x77\x26\x58\x84\x02\xee\x13\x90\xcb\x28\x37\x09\x8e\xc7\xe8\x2b\x11\x9f\xe8\x96\x1e\x1e\xf6\xb1\xc0\xcd\xd8\xc8\x76\x71\x61\x63\x56\x86\x28\x34\x15\x84\xe5\x04\x91\xae\xf3\x6b\x86\x0c\x0c\xa3\x64\x30\x7e\xfb\xa1\x77\x3e\xea\xa7\xe0\xbe\xe9\x8f\x14\x6e\x6d\xcb\xda\x01\x71\xe8\x96\x0b\x15\xe0\xbd\xb3\x81\x55\x0a\xfe\xb1\xd6\x95\x2f\x68\xac\xeb\x12\xf9\x0b\xac\xda\x08\x26\xed\xfc\x98\xed\xd9\x6e\x0a\x87\x17\xa5\x04\x90\x65\x10\xbd\x88\xfa\xbe\x27\x8d\x64\x66\xec\x4f\x25\xcf\x74\x7b\x7f\x5f\x46\x3a\xdb\xcd\x4a\x49\x3f\x2c\xa6\xa6\xef\xd5\x11\x3b\xfb\x73\x75\xc5\x12\x3e\x7d\xa2\xc7\x05\xbb\x7b\x56\x55\x6b\x54\x12\x6c\xa1\x93\x55\x1f\xb3\xc6\xd9\xcd\x03\x5e\x87\xf2\x23\xc5\xd8\xb3\xad\xdc\xe1\x64\x9e\x53\x34\xed\xa6\xef\x28\xa6\x2d\xb8\x1f\xff\x56\xcc\x2c\xa5\x5e\x2b\xd3\x11\x2a\x65\x61\xa9\x6f\xb5\x9e\xa5\xb4\x5c\xb2\x79\xa3\xb5\xb5\xd3\xe1\x54\xbd\xd9\xc8\xea\xd5\x04\x5e\xe2\xef\xa3\x13\x37\x68\x89\x71\x65\xb3\x31\x16\x38\x94\xc1\xf3\xd4\x1d\x65\xbc\x9e\xf1\xb8\x11\x4f\xf8\x5e\xff\x7f\xbb\x22\x5c\x72\x6e\xb7\xaa\xe6\xfe\x49\xee\x84\xc3\x0a\xba\xea\xfb\xa0\xa6\x26\xe8\xd9\xee\x9b\x21\x6e\x85\x1a\x6c\xe5\x9a\xa1\x12\x03\x85\x36\x64\x8d\x37\x42\xc2\xb5\xef\x13\x1d\x08\xcd\xd6\x78\x87\xb6\x45\x33\x06\x96\x36\x2d\xea\xeb\x96\xca\xba\xb1\xe4\x89\x7c\x37\x65\x17\x19\xfb\x70\x26\xf2\x31\x6d\x6a\x13\x5a\x2f\x83\x85\x72\xcd\x19\x39\xfe\x04\x07\x01\x54\xd3\x4e\x32\xb6\xc5\x13\xb9\xa6\xcd\x13\x64\x52\xa4\xb9\x0a\x6e\xd9\xbf\xbd\x9c\x9b\xf4\xec\xed\x65\xb9\xc0\x8b\x69\x30\xe7\xa8\x2f\xb5\x27\x4e\x7e\x7f\x74\x99\xbf\x91\x01\xb7\x18\xba\xa7\xd3\x98\xd6\x6b\xd0\x09\x8d\x49\xdb\x17\x21\xa1\x53\x95\xb9\xe7\xd2\xf5\x7a\xa9\xb9\x17\x6b\x90\xed\xc4\x4d\x38\x0b\x4a\x3b\x71\xbb\x68\xd9\x58\x55\xd9\x47\x50\xfc\x9a\x69\x23\x6f\xf3\x57\xaf\x7f\xd5\x1f\xf5\x21\xd7\x0f\x86\xea\xaa\x75\x3b\xb9\xd9\xf5\x13\x0c\x32\x81\xbb\xb6\x46\x55\x0e\xf6\xfd\x47\xec\x56\x4c\xfa\xba\xdf\x58\xec\x55\x4a\x16\xaa\xc8\xe3\x47\x5f\x52\x39\xe6\x42\xf0\x47\xe5\x58\xd3\xef\x29\x62\xa7\x7f\x4b\xb5\x59\xb5\x46\xc9\x6f\x24\x8a\x58\x33\x87\x7c\x10\xe4\x4a\x4a\x8d\x3d\x7e\xd5\xb0\x37\xcc\x72\xf3\x8e\x8d\xb4\x63\xe7\xe4\xfa\xe8\xe2\x9c\xdc\x9c\xc6\xf7\xcd\xc9\x53\x95\x72\xfa\x64\xae\x81\x57\x55\x8a\x3d\x1d\xa4\x87\xfd\x6a\xa1\x18\xad\xdf\xf0\xc0\xb8\x23\x9e\xf7\x7e\x51\xdc\x2b\x84\xd3\x19\x55\xef\x17\x85\x87\xbe\xe3\x36\x07\xe3\x17\xbe\xc5\xdc\x3c\xb4\x65\xd8\xbd\xd6\x1f\x88\x9e\xe5\xca\x3e\xb5\x79\x92\x48\x98\xec\xa2\xfc\xd9\x62\xe7\x23\x9f\x31\xa8\xac\xad\x86\xdc\x4c\x88\x3d\x4f\x4f\xed\xf0\x0a\xed\x17\x95\xe7\x77\x3a\xe0\x61\x81\x79\x40\x28\x06\xa6\x00\x33\xf1\x89\x2b\x8c\x8e\xb6\xce\xf9\xf5\x91\x9c\x67\xd5\xd6\x41\x67\x2c\xe9\x76\x8d\xb9\x3d\x66\xde\x7c\x74\x58\xe5\xe6\xc9\x50\x1f\x82\x29\xf8\xe2\x3a\x6f\xd7\x3b\xa0\xac\xf2\xa0\xff\xef\x8b\xab\xdb\x5e\xbf\xe7\x54\x09\x27\x02\x66\xd6\x58\x92\x27\x60\x3f\xc4\xe5\x0a\x0e\x98\x98\xc9\xa4\xb5\x54\xc3\x82\x50\xba\x54\xc9\x33\x5f\xe6\xdf\xe2\x10\xba\x44\x3e\xf1\x92\xd0\x55\xcb\x35\x32\x55\x43\x9a\x3c\x02\x64\xa0\xff\x55\xcf\xa3\xba\x70\x1d\xef\xf9\x46\xaa\xa4\x01\xc6\xc3\x01\x5c\x0c\x07\x6f\xaf\x2e\x2f\x46\xd0\x2c\x3e\x0d\x19\xa1\x9c\x33\xe2\x12\x19\x60\xbf\x36\x1d\xc0\xb1\x9e\x5c\x4f\x4f\xf5\xdf\xdb\xc5\xe3\x21\x3d\xae\x63\xd2\x5a\xe6\xcd\x63\x9b\xdb\x64\xca\x6a\xb2\xd7\x1f\x19\x6b\x6e\x0b\x35\xec\x93\x50\xe4\x77\x79\xfa\x9f\x88\x26\x44\xfe\xad\x6f\x25\xe5\x6b\x7c\x3d\xa9\x7f\xd3\x0f\x39\x00\xbe\xee\x97\x1c\x3f\x58\xfe\x08\x2c\xaf\x9c\xfc\xc2\x68\x7e\x0b\x46\x32\xa8\xff\x0f\xa9\x3e\x2d\x9d\xfe\x17\x00\x00\xff\xff\xce\x10\xa4\x09\x85\x40\x00\x00")

func templatesModelGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGoTpl,
		"templates/model.go.tpl",
	)
}

func templatesModelGoTpl() (*asset, error) {
	bytes, err := templatesModelGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.go.tpl", size: 16517, mode: os.FileMode(420), modTime: time.Unix(1502015128, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPogoGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\xdf\x6b\xe3\x38\x10\x7e\x8e\xfe\x8a\x0f\x73\xec\x39\x4d\xb0\xb9\x7b\x2c\xf4\x61\x5b\x87\x5e\x61\x49\xb2\xdd\xf4\xe0\x28\xe5\xa2\xc8\xb2\xa3\xab\x2c\x79\x25\x39\x69\xd6\xcd\xff\x7e\xc8\x76\xd2\x76\x4b\xaf\x1c\xd4\x79\x08\x62\x34\x3f\xbe\x99\xf9\x66\xe4\xba\x8e\x4f\x3e\xea\x17\xef\xf7\xc4\xfb\xc3\x9f\xd4\x08\xba\x92\xdc\xe2\x28\xfb\xc8\x18\x84\x7c\xb8\xcb\x06\xf6\xac\x32\x98\x53\x76\x4f\x73\xde\x13\xf0\xb2\xf3\x5e\xd7\x88\xbe\x71\xe7\x84\xca\x6d\x74\x08\xe9\x15\x7a\xc9\x6b\xae\x73\x8d\x82\x9a\x7b\x6e\x7a\xca\x2b\x8e\x71\x39\x99\x4e\xae\x3f\x2f\x26\x09\xce\xff\xc2\x7c\x76\x39\x8b\x90\xcc\x30\x9d\x2d\x30\x49\xae\x16\x51\x4f\xa9\x25\xd4\xd1\x15\xb5\x1c\x42\x39\x6e\x32\xca\x38\xec\x5a\x57\x32\xc5\x56\x9b\x7b\x6c\x85\x5b\x23\xed\x74\x62\xfb\x5d\x46\xc9\x39\x3e\xbd\x94\x2c\x1e\xfa\x2b\x4a\x72\x0e\x61\xe1\xd6\x1c\x4c\x17\x85\x56\xcf\x60\x66\xda\x1c\x71\x40\x97\xdc\x50\x27\xb4\xf2\xca\xd4\x81\x51\x85\x15\x47\x65\x79\xda\xe4\xe0\x7d\xb9\x5d\xc9\x2d\x32\xa3\x0b\x58\xb6\xe6\x05\xc5\xb2\xa1\x51\x73\x8e\xa6\xb4\xf0\x0c\x5a\x46\x24\x8e\xbd\xf6\x62\x2d\xec\xfb\xa5\xa0\x2a\xfd\xb9\x18\x11\xf1\x81\x1a\xe4\x47\xac\x35\x19\x4c\x1e\x38\x0b\xad\x33\x42\xe5\x63\x44\x51\x74\xbc\xac\xf7\x43\x84\x65\xfe\x10\x5d\xe8\xa2\xa0\x2a\x5d\xd0\x7c\x0c\x6e\x8c\x36\x43\x32\xf8\x5a\x71\xb3\x7b\xdb\xec\xc4\xdb\x5d\xeb\xad\xfd\xc9\xe2\x5a\x6f\xdf\x34\x3a\xd8\x90\xbe\xa6\xc5\x6f\x81\xb2\x5a\x49\xc1\xc0\xa4\xe0\xca\xc1\x3a\x53\x31\xd7\x1f\x4b\x2e\xda\x30\x1d\x53\xba\x68\x4c\x2b\x47\x85\x12\x2a\x07\x95\x12\xba\x32\x28\x74\xca\xa5\x6d\xfb\x73\xf1\x02\x5a\x4d\xe0\x77\x8a\xa1\x2a\xe7\x47\x4a\x2c\xda\x15\xbc\xdf\xd7\x35\x44\x86\x82\xaa\xdd\xef\xfe\x0f\x51\x2b\x2b\x68\x89\xd0\x96\x52\x38\x04\x7f\x07\x68\x28\x34\x44\x61\x85\xca\x2b\x49\x0d\x1e\xf1\x8f\x16\x0a\x41\x80\xfd\x1e\x27\x9e\x6b\x0d\xc9\x1e\xc1\x68\x29\x1c\x95\xe2\x07\x6f\x1d\x71\x69\xbb\xd3\x41\xe3\xe8\xe3\x3d\x4b\x95\xfa\xb5\xd7\x80\xef\xce\x7d\xb5\x75\xb2\xe1\x66\xe7\xd6\xbe\x9e\xd6\x51\xe3\x2c\xd6\xdc\xf4\xb5\xe7\xe3\x18\x53\xbe\x7d\x9a\xef\x96\x48\x24\xab\x14\xf3\x17\x61\xba\x42\x72\x3e\xc4\x49\xd7\x45\xdf\x3e\xc3\x5d\x65\x14\x3e\xb5\x22\x2f\xe9\xb9\xa5\xa7\xf8\x5f\x06\x8f\x90\x7a\xcb\x7d\x47\xc3\x74\x35\x7c\xaf\xeb\x8d\xf3\x57\xf2\xd7\x3e\x9a\x9e\x8f\x0f\xc9\x1e\xe9\xd0\x1f\x0d\xe6\xdd\x64\x57\xd6\xe9\x42\xfc\xf0\xf5\x84\xd4\x79\xee\x79\xf1\xb4\xf0\x7a\x63\xc5\x17\x9d\xa3\x34\x7a\x23\x52\xde\x4e\xbb\xd4\x39\x1a\x5a\x34\xbb\x7e\xb5\x43\xce\x95\x7f\x0b\x78\x8a\xef\x15\x37\x82\xdb\x88\x6c\xa8\x69\x0c\xcf\x1a\xcd\x37\x37\x63\xdd\x73\xcd\x74\xd9\xbe\x50\xfe\xe5\xaa\x4a\xcb\xfd\x0c\x85\x8b\x59\x32\x3b\x45\x41\xef\x39\x9c\x7f\x72\xa8\x02\x57\x55\x31\xec\xa9\x84\x4c\x2b\xeb\x10\x12\x20\x8e\x71\xd3\x80\x48\xf4\x54\xb7\x73\x9d\x68\xa8\xee\x28\x32\x5f\x5d\xc3\x7f\xb5\xa0\x7e\x95\x66\x52\x30\x47\xf0\xca\xe4\x0c\x41\xfb\x95\xf2\xc7\xd5\xf4\x32\x78\xe9\xf6\xa6\x4c\xa9\xe3\x98\x73\x93\x69\x53\xf8\xcc\xaa\x56\xb2\x5d\x73\xf5\xdf\xee\x3b\xd3\xd6\xfb\xcd\x3c\xf9\xbc\x98\x04\x64\xd8\x57\x7b\x8c\xd8\xf8\x68\x9e\x1c\xbe\x43\x70\x1a\x56\x0a\xc6\x9b\x47\x23\x13\x5c\xa6\xd6\x73\x5b\xe3\xdb\xd7\x2f\xc8\x8c\xe0\x2a\x95\x3b\x08\x55\x56\xae\xaf\x2f\xf4\x86\xd2\x0d\x88\xb0\x03\x50\xd0\xf2\xb6\x65\xee\xdd\x33\xd6\x8e\xa1\xb3\xcc\x72\xe7\xf1\x0d\x11\x32\xdc\xde\x1d\xe8\x2d\x9e\x9d\x37\xb8\xbd\x7b\xc9\x75\x32\x50\x38\x3d\x3b\x58\x8f\xf0\x1b\x19\x78\x5e\x32\x2d\xc7\xd8\x50\xe9\xef\xda\xd5\xd9\x85\xaf\xc9\x60\xc0\x70\x06\x5a\x96\x5c\xa5\x21\x1b\x63\x19\x2c\x47\x4c\xcb\xd1\x32\x58\x0e\xc9\x60\x20\x9e\x2e\xc5\x18\xc1\x2f\xc1\xc8\x3a\xc3\xb4\xda\x44\x57\x4e\xd3\x50\x0d\xbd\xd2\xe6\x49\x69\xd3\xc4\xf1\x42\x35\x1a\x91\xc1\x9e\x0c\xba\x0d\xce\xc6\x10\x63\x6c\xc8\x9e\xfc\x1b\x00\x00\xff\xff\xdc\x4a\x46\x12\x5c\x0d\x00\x00")

func templatesPogoGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPogoGoTpl,
		"templates/pogo.go.tpl",
	)
}

func templatesPogoGoTpl() (*asset, error) {
	bytes, err := templatesPogoGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/pogo.go.tpl", size: 3420, mode: os.FileMode(420), modTime: time.Unix(1502013765, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/enum.go.tpl": templatesEnumGoTpl,
	"templates/model-many-to-many.go.tpl": templatesModelManyToManyGoTpl,
	"templates/model.go.tpl": templatesModelGoTpl,
	"templates/pogo.go.tpl": templatesPogoGoTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"enum.go.tpl": &bintree{templatesEnumGoTpl, map[string]*bintree{}},
		"model-many-to-many.go.tpl": &bintree{templatesModelManyToManyGoTpl, map[string]*bintree{}},
		"model.go.tpl": &bintree{templatesModelGoTpl, map[string]*bintree{}},
		"pogo.go.tpl": &bintree{templatesPogoGoTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

