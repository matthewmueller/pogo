// Code generated by go-bindata.
// sources:
// templates/enum.go.tpl
// templates/model-many-to-many.go.tpl
// templates/model.go.tpl
// templates/pogo.go.tpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesEnumGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x96\x5f\x4f\xdb\x48\x14\xc5\x9f\xed\x4f\x71\x37\x42\xc2\x8e\xd8\xb1\x78\xd9\x07\xa4\x3c\x2c\x4b\x84\x56\x62\x93\x88\x64\x51\xab\xaa\x12\x13\xe7\xda\x19\xc5\x1e\x87\x99\xb1\x49\x6a\xfc\xdd\xab\x19\xff\x4d\xa1\xa4\xad\x30\x52\x79\x9c\x3f\xe7\x9e\x39\xf7\xe7\x4b\xf2\xdc\x1b\xbe\xd5\x9f\x57\x14\xb6\xd6\x83\x3b\x2a\x18\x5d\x46\x28\xa1\x59\x7b\xcb\x1a\x76\x9e\xc3\x09\x72\xb8\x18\x01\x19\xf3\x34\x26\x13\x1a\x23\x98\x42\x70\x12\xeb\x65\xbd\xfb\x04\x92\xf1\x30\x8d\xa8\x68\xb6\xb2\x17\xf6\x9e\x20\x4a\x1e\xd1\x9c\x79\x73\xa3\x26\x8c\x69\x2a\x60\x46\xfd\x0d\x0d\xb1\xa7\x38\xb6\x95\x7a\x9e\x03\x99\xa3\x52\x8c\x87\x92\xd4\x25\x7b\x7b\xd7\x2c\x09\x13\x88\xa9\xd8\xa0\xe8\xe9\x5d\x9e\x07\xd7\xe3\xc9\xf8\xf6\xef\xc5\xf8\x0a\x2e\x3f\xc2\x6c\x7a\x3d\x25\x70\x35\x85\xc9\x74\x01\xe3\xab\x7f\x17\xa4\xc7\x96\x21\x4f\x63\x50\xfb\x6d\x5f\x4d\xf3\x3c\xb8\x2f\x79\x2d\x8a\x7b\x60\x12\xd4\x1a\xcb\x15\xe4\x66\xa9\x35\x10\x88\x24\x36\x5b\x64\xee\xaf\x31\xa6\x35\xef\xf7\xc4\x36\xfb\xb5\x0c\xa4\x8c\xab\xf3\xbf\x7e\xe3\x50\xfc\x84\x4b\x05\x8e\x0d\xfa\x4d\x82\xf2\x10\xab\x2f\xfc\x8e\x46\x29\x4a\x0d\xb3\xe5\x79\xcd\x83\x75\x24\x37\x74\x89\x11\x3c\x81\x4f\xb7\x4c\xd1\x88\x7d\xd1\xc9\xd4\x79\x9e\xb6\x27\x8a\xe2\xb4\xb9\x47\x6c\xeb\xb8\xc4\xa8\x39\xee\xe8\x43\x53\xb1\x32\x53\xc2\x2d\xcd\x21\x5f\x69\x37\x6e\x4f\x61\xcf\xa9\x62\x32\xd8\x9b\x47\x48\x25\x18\x0f\x51\x00\xe3\x0a\x45\x40\xfd\x1e\x91\x9c\x9b\x5a\x20\x50\xa5\x82\xcb\x4e\x79\xc8\x74\x07\x20\x09\x5a\x4e\x0d\xb9\x76\x90\x72\x1f\x9c\x6a\xbc\x16\x45\x13\x9a\x5b\x69\x39\x6e\xad\x90\xdb\x56\x46\x4b\x86\xee\x68\x54\xad\xda\xb6\x25\x1f\x99\xf2\xd7\xd0\x91\x78\xad\xff\x00\x3e\x95\x78\x1c\x81\x0b\x1b\x00\x9a\x62\x23\x18\x74\x51\x18\x1c\x34\xd1\x2a\x6c\xdb\x2a\x9f\x5c\x5f\xb0\xfb\x9a\x9a\xdd\xc6\xc6\x54\xc8\x35\x8d\xde\xa7\xb3\xff\x95\xc5\x16\xb8\x53\x75\x61\xd9\x4e\x0e\xc6\x55\x02\x0a\x77\x8a\xbc\xd2\xd0\x8e\x84\xe3\x82\xf3\xe9\xf3\x72\xaf\xf0\x0c\x50\x88\x44\xb8\xba\xbd\x55\x86\xe5\x46\x2b\x41\x6a\x12\xdc\x33\xe0\xcc\x64\xeb\x79\xf0\x3f\x8f\x3b\x96\x52\xfe\xdc\x94\x99\x7b\x2f\x9b\x1a\xb6\xae\x0e\x74\x1c\x7d\xbc\x32\xe0\x96\xce\xb4\xb1\x0a\xb1\x12\x39\x73\xc6\xfd\x21\xca\x0e\xa1\x29\x91\x1a\xb6\x2e\x46\xc7\x31\x3c\x04\x6d\x85\x01\x4d\x23\x75\x61\x5b\x0d\x6f\xda\xa2\x24\x13\x7c\x74\x06\x8c\x67\x34\x62\xab\x46\x74\xe0\x1e\xa0\x59\x45\xd7\xff\xbc\x79\x88\xbc\x95\x60\x19\x8a\x32\x90\x77\xc1\xd3\x54\x02\x69\x6c\x30\x94\x47\x8d\x04\xba\xb1\xcd\x38\xff\x3e\xb3\xe6\xa2\xa6\xb5\x2b\xf4\x02\xb3\xcf\x61\xed\xb2\x3a\xf7\x29\xff\xc6\xdc\x8a\x2a\xba\xa4\x12\x3d\xf9\x10\x11\xbd\xcf\x7f\xc2\x5f\x07\x5f\x7d\xd5\x91\xc2\x6f\xef\xe6\x45\x87\xdc\x65\x1a\x9c\x41\xb2\xd1\x3f\x5c\xa5\xf0\x49\xf5\xd1\xb9\xb6\xc5\x02\xf8\x23\xd9\xe8\x23\xbf\x80\x52\xfb\xda\xc3\xaf\x67\x99\x06\x6e\x6f\x8c\xfd\x93\x4a\x95\xc4\x20\xab\xac\x74\x42\xdb\x70\xd7\xe3\xff\x32\x9f\xf2\x59\xb8\x2b\x67\xdb\xec\xfa\xc3\xb1\x2e\xcc\xc2\x9d\x93\x09\x18\x6e\xc3\x5d\x89\xc9\x2d\xd2\x15\x8a\x4e\x33\x58\x00\x99\x20\x37\xc8\x1d\x17\x46\x23\xf8\xf3\xbc\x1b\xbf\xa6\xc5\x2a\x8e\x46\x9c\x09\xa2\x75\x2f\xf7\x0a\xa5\x53\xab\xb9\x3a\xf5\xaf\x01\x00\x00\xff\xff\x2e\xc4\x9e\x4b\x8b\x0d\x00\x00")

func templatesEnumGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesEnumGoTpl,
		"templates/enum.go.tpl",
	)
}

func templatesEnumGoTpl() (*asset, error) {
	bytes, err := templatesEnumGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/enum.go.tpl", size: 3467, mode: os.FileMode(420), modTime: time.Unix(1502003507, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelManyToManyGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\x4d\x73\xe3\xb8\x11\x3d\x8b\xbf\xa2\xc3\xf2\xee\x88\x5e\x86\xce\xd9\x29\x1f\x66\x2c\xce\xc4\x89\x23\x3b\xb2\xbc\xa9\xd4\xec\x96\x09\x91\x4d\x09\x6b\x12\xe0\x00\x90\x64\x87\xc3\xff\x9e\x02\xc0\x2f\xc9\x92\x77\x92\x32\x37\xeb\x13\x0d\x76\x37\x1a\xcd\xf7\x1e\x1f\x55\x96\x67\xa7\x6f\xf5\x77\x56\x55\x8e\xae\x07\x3f\x12\x41\xc9\x22\x43\x09\xed\xda\x5b\xee\xe1\x94\x25\x9c\x28\x38\xbf\x00\xa5\x77\x61\x24\x47\x08\xee\xe2\x15\xe6\x04\x82\xb9\x5e\x02\xb3\x2b\x9c\x28\xa6\xa3\xec\x5a\x30\xd5\x71\xf5\x8d\x58\xaf\xe7\xa4\x80\xb1\x2c\x32\xaa\xc0\x7d\x70\x75\xb4\x07\x79\x4c\x0a\xaa\x48\x46\xff\x8d\xf0\x15\x7e\xe1\x94\x81\xeb\xb6\x59\x1b\x9d\x76\x12\xc3\x57\xc8\xf8\x16\x45\xb3\x9e\x1f\xad\x26\x29\x5b\xae\x33\x22\x5e\xd6\xca\x6d\xad\x7c\xbf\x56\xcc\xf5\x7a\xcc\x33\x7d\x2c\xd9\xf4\x7e\xc9\xb3\x75\xce\x64\x13\x44\x93\x27\xa9\xc3\x68\xf2\xb4\x13\x76\xc5\x12\x7c\x42\xd9\xd5\x4a\x9b\xce\x74\xdd\x71\x5e\x08\xca\x54\x0a\xee\x4f\xee\x77\xf2\x27\xd7\xf5\xda\xb6\x7c\xe8\x35\xb6\xd4\x49\x26\x14\xdc\xef\x5d\xd3\xaa\x1b\x74\x43\xe0\xcb\x7e\xd1\xfe\xc0\xf4\x06\x98\xd2\x27\x53\xe4\x60\xf1\xf4\xb1\x20\x82\xe4\xa6\xf9\xf6\xfa\xf0\xb3\x4b\x1f\xb7\x2b\x14\x68\x23\xed\x65\x7d\xca\x8f\x5c\x20\x5d\xb2\xbf\xe1\xb3\xec\x82\xeb\x92\x3b\xe3\x38\x18\x98\x51\xa9\xda\x03\xe8\xbc\x3c\x26\x39\xee\x3c\xf0\xba\xe1\x37\x07\xae\x21\xc7\xcd\x5a\xc0\x2d\x89\x1f\xc9\x12\x07\xa2\x47\x51\x57\x2f\x4b\x08\xee\x50\x29\xca\x96\x32\x68\xb6\x1c\xec\x5c\xb7\x7c\xc9\x21\x27\xe2\x11\xc5\x40\xe7\x3a\x3b\x83\x4f\xe1\x34\x9c\xbd\x9f\x87\x13\xf8\xf0\x2f\xb8\xbd\xf9\x74\x13\xc0\xe4\x06\xa6\x37\x73\x08\x27\x57\xf3\x60\xa0\xa3\x85\x42\x70\x31\x94\x98\x9d\x9d\xe9\xfa\x56\x46\xaa\x6a\xca\xd5\x47\xbe\x66\x09\x08\x54\x6b\xc1\x30\x01\x9a\x82\x5a\x99\x87\xa9\x89\x58\x55\x40\x25\x30\xae\x20\xd5\x61\xce\x86\x88\x83\xe9\x17\x80\xa6\xe9\x60\x8a\xdb\xb1\xdb\x25\xb7\x99\xae\x37\xd0\xb0\xe6\x2b\xb4\xba\x0c\x5b\x7c\x97\x65\x40\x94\x22\xf1\x0a\xf8\x5a\xc0\xe5\xec\x7e\x02\x39\xaa\x15\x4f\x24\x70\xa6\xf8\x70\x23\xb5\x22\x5f\x55\x10\x67\x44\x4a\x47\x3d\x17\xd8\xad\x49\x25\xd6\xb1\x82\xd2\x01\x48\x16\x30\xf9\xe0\x0c\xc5\x09\x3d\x8b\x9c\x27\x98\x81\x5a\x11\x05\x31\x67\x8a\x50\x26\x81\x64\x99\x19\x48\x42\x14\x59\x10\x89\x90\x52\xcc\x92\x01\x11\xd6\xe0\xc3\x76\xd3\x8d\x23\xdf\x1b\x47\x59\x82\x20\x6c\x89\x2f\xdf\x3b\xed\x3b\x37\xe6\x28\x62\x84\x93\x56\xb5\x27\x44\x91\xb9\x2e\x58\x55\xb6\x82\x7d\xd3\x7e\x85\xde\x9b\xa1\xaa\xc0\x16\xa8\x2a\x88\x7e\x91\x9c\x9d\xbb\x6d\x60\x55\xf9\x3c\xa7\x0a\xf3\x42\x3d\xbb\x91\x8e\xa3\x29\x04\x97\x3c\xcf\x91\xe9\x04\xdb\x7e\x6f\xa1\x2c\x01\x59\xd2\xbf\x18\xec\x01\xde\x0a\xba\x21\x0a\x2d\x8a\xf4\xf3\xb3\xb3\xe2\xc2\x07\x12\xc7\x28\x25\x26\xb0\xa1\x04\x0a\xbe\xe4\xc1\xc9\xfc\xfd\x87\xeb\x70\xe0\x87\x68\x58\xdc\x6b\xc4\x49\xd7\x2c\xee\x6e\x8d\x93\x05\x9c\x16\xcb\xa7\xe0\x92\x33\xe6\xc1\x69\x8b\x79\xfd\x74\xad\xa6\xc0\xf7\xcd\x62\x99\x2c\x86\x1f\xdd\x0a\xb3\x02\x05\x28\x0e\x4b\x54\x06\xf9\x5a\xce\x18\x67\x7f\x64\x34\x6b\x80\xcf\x99\xe1\x83\xe5\xca\x60\x03\x3c\xde\x80\x9d\xa2\xbd\x1e\x77\x73\x3e\x6d\x38\xe2\x69\xbb\xf0\x59\x2a\x41\xd9\xf2\x67\xca\x14\x8a\x94\xc4\x58\xda\xb1\xd6\x67\x30\x9e\xe2\x11\xc7\x87\x23\xbd\x5f\x65\x97\x29\x63\xfc\xea\x21\xfe\x38\xa0\x69\xd1\xb6\x16\x74\x19\x55\x05\x7f\xb8\x00\x7d\x16\xdd\x4c\xd3\xce\xe7\x3e\xc1\xdc\x9f\xe1\xe2\x48\xae\x03\xd0\xe3\x11\x40\x07\x93\x7a\x32\x43\xe1\xa3\x47\x99\xe0\x23\x65\xc9\xd8\x3b\x87\x94\xb2\x04\x38\x43\x10\x7c\x0b\x8b\x67\xa0\xea\x9d\xd4\x4e\x34\x27\xe2\x19\x1e\xf1\x79\x38\x68\xe8\x0e\x80\x40\xd4\x0e\x29\xb2\xfb\x4b\x68\xec\x65\x63\x0e\x23\x1f\x22\x17\xbe\x42\xe3\xa5\xa3\xef\x64\xe4\x56\x95\x45\xd0\xb8\xfe\x4c\x68\xb0\x13\x1b\xec\x98\xe3\xed\xd8\x5f\xbd\x3a\x6e\xd1\xe5\xdb\x97\xb5\x07\xa5\x33\x3a\x3b\x03\xf9\x25\x03\x89\x19\xc6\x0a\xbe\xac\x51\x3c\xfb\x3b\x23\x28\x04\xdf\xd0\x04\x13\xdd\x9f\xc4\x2f\x6b\x64\x31\x3a\x23\xf9\x25\x93\x4a\x68\xf4\x44\xce\xe8\x2e\xbc\x0e\x2f\xe7\xd0\x7c\x02\x54\x95\x33\xfa\x38\xbb\xf9\x7b\x2b\xc1\xce\xe8\x9f\x7f\x09\x67\x21\xf4\x6d\xb6\x5e\x8d\x1c\x67\x74\xcd\x97\x63\x5b\xcc\x87\x9e\x61\xae\x2a\xcf\x19\xe9\xa7\x72\x6e\x81\x64\xce\x18\x24\x8b\xe0\x1f\xba\xc3\x19\xdf\x1e\x4d\xa2\x29\x18\x13\x2f\xf8\x36\xb8\x8b\x09\x1b\x37\x1f\x11\x55\xe5\xfd\x19\x70\x17\xbb\x26\xf8\xe2\x02\xb4\x82\x85\x42\x4c\xf9\x8c\x6f\x65\x7d\xaf\x05\x26\xa3\x99\x0f\x87\x5c\x8f\x09\xab\x9c\xfd\x50\xd4\x18\x77\x9c\x51\x23\x7f\xd0\x51\xc1\xd7\x11\xbf\x09\xc4\xaf\x98\x44\xa1\x34\xc8\xa9\xb9\x02\x02\x0c\xb7\x06\xe8\x54\x3b\x21\xd5\xda\xa6\xc1\x30\x7e\xd5\x6c\xdc\x47\xb9\xd9\x3c\x6a\x90\x11\xbd\x06\xe3\xfa\x08\x9d\x3c\x76\xea\x78\x14\xcb\xaf\x68\x3e\x61\x09\x14\x02\x0b\x22\x50\xdf\xce\x21\xe5\xc2\xc4\x19\xd0\x3b\xa3\x87\xd8\x87\x07\xea\xc3\x83\xf9\x52\x96\x19\x8d\x71\xbc\xaf\xd0\x9e\x0f\x7f\xf2\x9c\x96\x35\xf5\x68\xff\x37\xd6\x5c\x4d\xef\xc2\xd9\x1c\xae\xa6\xf3\x9b\xce\xac\x8c\x23\xf8\x01\xac\x9a\xcb\xe0\xaf\x9c\xb2\xb1\x6e\x4b\x7f\x21\x7a\xf0\x03\x44\x9e\x33\xfa\xf1\xfd\xf5\x7d\x78\x77\x28\x90\xee\x06\xce\xc2\xf9\xfd\x6c\x7a\x35\xfd\xd4\x27\x26\xc0\x3e\xe9\x1e\x36\x41\x10\x1c\x22\xdb\xe4\xc3\x4b\xb2\x35\xc1\xff\x15\xc9\x5e\xe3\xc6\xff\x81\x19\xf7\x45\x42\x14\x6a\x66\xac\xcd\x15\x10\x06\xf8\x44\xa5\xfe\x6e\xad\xf9\xf1\x5b\xb0\xe3\xbe\xde\xbc\x66\xc7\x1b\xbf\x02\xea\x43\xee\xbd\x04\x7c\xf8\x76\x32\x59\xe8\xa3\xf1\xe0\x2f\x68\x60\x29\x90\x52\x21\x15\xc4\x2b\x8c\x1f\xb5\x92\x6e\x11\x56\x64\x63\xc8\xa5\xb9\x85\x74\xc9\x34\x17\xe4\x01\x27\xb2\xfb\x4b\x89\x35\x1a\x9d\x0d\xa9\x7f\x1e\xa9\x2a\x2d\xcd\x47\x70\xd4\x7d\x6d\x46\xee\xe1\x64\x17\xf2\xb5\x54\xb0\x68\x85\x20\xf2\x1c\x2b\xd7\x9d\xff\x30\xc7\x48\x38\x7b\xa7\x1a\x30\xbc\x68\x7e\xf4\x7a\xef\x09\x66\xa8\x1a\xa1\x40\xe5\xc3\x8e\x0f\xf2\x5e\xee\xd6\x93\x20\x2b\x32\xf2\x35\xe9\xd1\x15\xcb\x12\x32\x64\x87\xb7\xef\x89\x51\x2d\x63\x3d\x8d\xb9\xbf\x9d\xbc\x9f\x87\x9d\xb8\xdc\x85\x73\xa3\x1b\xce\x68\xf4\x8a\xc4\xc0\xc5\xe1\xa0\x3d\x79\x39\xf2\x4e\x3f\x28\x3b\x91\xed\x52\xac\x59\xd3\xe5\x86\x64\x6b\x34\x1e\xf6\x73\xdf\xb5\x96\xd5\xaf\xcd\xbb\x4e\xbc\x00\x52\x14\xc8\x92\xb1\xfd\xdf\x3f\x02\xa0\xdd\xf9\x8f\x8e\x25\x37\xb2\xd6\xd7\x45\x7b\xcf\xac\x7f\xa3\x13\xe9\x65\xfc\x0e\x5d\xc8\xb0\x4a\x7b\x7a\x4c\x6d\x27\x96\x1f\xde\x39\x58\xa6\x00\x31\x1a\xbb\x96\x5a\x6d\xb5\xd8\xf5\xc9\xf6\xf6\x6a\x7b\xda\x53\xdc\x49\xd3\xc0\x20\x8a\x5b\x1f\xf4\x85\xed\x36\x4a\xd5\x73\xda\x35\x01\xcc\x27\x35\xd4\x64\x35\x7e\x60\x12\x5e\x87\xf3\x10\xbe\xd9\x39\xef\x12\xea\x35\x1f\x4d\x53\x78\xf0\x2d\x1e\x77\x10\x1c\x3e\x61\x7c\x24\x69\x70\x8c\xee\xc1\xd3\x42\xf2\x3f\x01\x00\x00\xff\xff\x69\xe3\xb3\xd0\x1e\x1a\x00\x00")

func templatesModelManyToManyGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelManyToManyGoTpl,
		"templates/model-many-to-many.go.tpl",
	)
}

func templatesModelManyToManyGoTpl() (*asset, error) {
	bytes, err := templatesModelManyToManyGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model-many-to-many.go.tpl", size: 6686, mode: os.FileMode(420), modTime: time.Unix(1502008278, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x5d\x73\xdb\xb8\xd5\xbe\x26\x7f\xc5\x79\x39\xde\x44\x72\xf4\xd2\xbb\xb7\xe9\xe8\xc2\xb6\x98\xd4\x1d\x57\x4e\x6d\x79\xdb\x4e\x76\x27\x84\x49\x48\xc2\x9a\x04\x18\x00\x92\xad\x2a\xfc\xef\x1d\x7c\xf0\x4b\xa2\x14\x39\x09\x9d\xee\x4c\x7c\x25\x03\x07\xc0\xc1\xc1\x79\x1e\x3c\x38\xd2\x7a\x7d\x72\xfc\xad\xfe\x4e\xf2\xdc\x55\xf3\xc1\xaf\x88\x13\x74\x97\x60\x01\x65\xdb\xb7\x5c\xc3\x5d\xaf\xe1\x48\xc2\xeb\x21\x48\xb5\x0a\x45\x29\x86\x23\xff\x26\x9a\xe3\x14\x81\x3f\x51\x6d\xa0\x97\x85\x23\x49\x95\x99\x69\xf3\xc7\xca\xd0\x76\x44\xaa\x5d\x75\x7f\x82\x08\x65\x44\xa2\x84\xfc\xa7\xea\x5c\xea\xde\x08\x3e\x41\xc2\x1e\x30\x2f\xda\xd3\x6a\x90\x20\x74\xb6\x48\x50\xd5\x65\x86\xa4\x5b\x43\x96\x33\xd5\x91\x71\x42\x25\x78\x2f\x3c\x6d\xe9\xf9\x5e\xd1\x9f\xd9\xde\x14\xf1\x55\xe1\xe7\x39\x4b\x16\x29\x15\xa5\x89\xde\x6a\xc4\x30\x8f\x6a\xfb\x3c\xca\xfc\x11\x92\x68\xb2\xca\x2a\xb7\x99\x31\x4c\x54\x44\xc4\x8e\xd9\x48\xfc\x28\x94\x19\x89\x1f\x1b\x66\x17\x34\xc6\x8f\x58\x54\x73\x4d\x95\x55\x8a\x32\x3d\x6f\x2f\xd5\x3b\x98\x82\xf7\x9b\xf7\x93\xf8\xcd\xf3\xfa\xf0\x09\xfe\x60\x84\x82\x37\x00\xaf\x1a\x34\xab\x0f\x4a\x6b\x91\x55\x13\xe0\x29\x79\xd4\x11\xd9\x1a\xfc\xcd\x53\x44\xa7\xe1\xd5\x82\xc3\x3b\x14\xdd\xa3\x19\xee\x28\x11\x33\x3b\xfb\x7a\x0d\xfe\x0d\x96\x92\xd0\x99\xf0\x8b\x25\x3b\xdb\xd7\x3b\x36\x63\x90\x22\x7e\x8f\x79\x47\xfb\x3a\x39\x81\xb7\xc1\x38\xb8\x3e\x9d\x04\x23\x38\xfb\x37\xbc\xbb\x7a\x7b\xe5\xc3\xe8\x0a\xc6\x57\x13\x08\x46\x17\x13\xbf\xa3\xad\x05\x9c\x33\xde\x15\x6d\x9c\x9c\xa8\xf9\x0d\x90\xf3\x7c\xcc\xe4\x1b\xb6\xa0\x31\x70\x2c\x17\x9c\xe2\x18\xc8\x14\xe4\x5c\x1f\xa6\x02\x69\x9e\x03\x11\x40\x99\x84\xa9\x32\x73\x97\x88\xb7\x0e\x1f\x02\xd6\x4e\xfb\x63\xfc\xd0\xf3\xaa\xc1\xe5\x48\xaf\xdf\x51\xb0\x26\x73\x6c\x18\x10\x1e\xf0\xcb\x24\x01\x24\x25\x8a\xe6\xc0\x16\x1c\xce\xaf\x6f\x47\x90\x62\x39\x67\xb1\x00\x46\x25\xeb\x2e\xa4\x86\x4d\xf3\x1c\xa2\x04\x09\xe1\x4a\x45\x48\x65\x9b\x90\x7c\x11\x49\x58\xbb\x00\xf1\x1d\x8c\xce\xdc\xae\x30\xa1\x62\x91\xb2\x18\x27\x20\xe7\x48\x42\xc4\xa8\x44\x84\x0a\x40\x49\xa2\x03\x12\x23\x89\xee\x90\xc0\x30\x25\x38\x89\x3b\xcc\xb0\x22\x3f\x8c\x37\x55\x38\xd2\x8d\x70\xac\xd7\xc0\x11\x9d\xe1\x6d\x9a\x2e\x6f\xb7\x4d\xca\x6f\x10\xbe\x9e\xc1\x5c\x69\x1b\x57\x18\x98\x09\xf2\x1c\xc2\x3f\x04\xa3\xaf\xbd\xd2\x30\xcf\x07\x2c\x25\x12\xa7\x99\x5c\x79\xa1\xb2\x23\x53\xf0\xcf\x59\x9a\x62\xaa\x06\x18\xf7\x6b\x0d\xeb\x35\x60\x1a\xd7\x3f\x74\x76\x80\xef\x38\x59\x22\x89\x4d\x16\xa9\xf3\x33\xb1\x62\x7c\x00\x28\x8a\xb0\x10\x38\x86\x25\x41\x90\xb1\x19\xf3\x8f\x26\xa7\x67\x97\x41\xc7\x87\xa8\x51\x5c\x73\xc4\x9d\x2e\x68\x54\x75\xf5\xe2\x3b\x38\xce\x66\x8f\xfe\x39\xa3\xb4\x0f\xc7\x65\xce\xab\xd3\x35\x9c\x02\x2f\x8a\xc6\x75\x7c\xd7\x7d\xe8\xe6\x38\xc9\x30\x07\xc9\x60\x86\xa5\xce\x7c\x45\x67\x94\xd1\xff\xa7\x24\x29\x12\x9f\x51\x8d\x07\x83\x95\xce\x02\xb8\xdb\x01\x13\x45\xf3\xb9\x57\xc5\xf9\xb8\xc0\x48\x5f\xc9\x87\xf7\x42\x72\x42\x67\xbf\x13\x2a\x31\x9f\xa2\x08\xaf\x4d\x58\xed\x1e\xb4\xc6\xb8\xc7\xbd\x76\xcb\xfe\x67\xd1\xa5\xa7\xd1\xc2\xb0\x0d\x3f\x2e\x28\x58\x94\xae\xf9\xd5\x88\x3c\x87\xff\x1b\x82\xda\x8b\x72\xa6\x70\xe7\x7d\x1d\x60\xde\xef\x30\xdc\x31\xd6\x05\xa8\xe1\x08\xa0\x4a\x13\x1b\x99\xae\xf2\xa3\x06\x19\xff\x0d\xa1\x71\xaf\xff\x1a\xa6\x84\xc6\xc0\x28\x06\xce\x1e\xe0\x6e\x05\x44\xbe\x14\xa5\x0e\xbd\xc7\xab\xee\x94\x3b\x99\x2a\xd5\x9b\xe7\x2a\x4d\x94\x37\x80\x6a\x70\xbb\x5b\x81\xbe\x42\xb3\x32\x9e\x26\x5f\x7a\x56\x96\x17\x99\x12\xe9\x4c\xd1\x9b\x69\x98\x83\x15\xcc\xaa\xb7\x57\xe6\xd4\xc0\x5c\xd1\x7d\x58\xbb\xce\xc9\x09\x88\x8f\x09\x08\x9c\xe0\x48\xc2\xc7\x05\xe6\xab\x41\x63\xe3\x19\x67\x4b\x12\xe3\x58\xf9\x22\xf0\xc7\x05\xa6\x11\x76\x1d\xf1\x31\x11\x92\xab\x9c\x09\x5d\xe7\x26\xb8\x0c\xce\x27\x50\xe8\xe4\x3c\x77\x9d\x37\xd7\x57\x7f\x2f\x89\xd7\x75\xfe\xf9\xd7\xe0\x3a\xd8\xdc\x0a\x0c\xe1\xe8\x17\xd7\x09\x5d\xd7\xb9\x64\xb3\x9e\x99\x72\x00\x0d\xa3\xbe\xeb\xa8\x13\x79\x6d\x92\x48\xef\xd8\x8f\xef\xfc\x7f\x28\x3f\xaf\xd9\xc3\xae\x41\x3a\x65\xb1\x1a\xc6\xd9\x83\x7f\x13\x21\xda\x2b\x04\x79\x9e\xf7\xff\x02\xb8\x99\xb8\xda\x78\x38\x04\x45\x5f\x01\xe7\x63\x76\xcd\x1e\x84\xed\x2b\xb3\x92\x92\x64\x00\x6d\x92\x47\x9b\xe5\xee\xa6\x29\x56\x09\xee\xba\x4e\x9d\xfb\xf4\xa9\x0e\x54\xbf\xab\x9f\x08\x36\xf9\x9f\x27\xcf\xcf\x56\xbe\xef\x97\xc9\x8e\xaa\x54\x17\xb0\xa0\xe4\xe3\xc2\x50\x53\x71\xf6\xc4\x3e\x80\x3a\x4b\x7c\x43\x48\xea\x01\x56\x7b\x93\x6e\x3d\xbb\x92\xe2\x75\x56\xbe\xe3\xf4\x88\xea\xf5\x66\x54\x5d\xed\x9d\x95\x88\xc6\x4b\xab\x78\x5a\x9d\xd2\xd8\xab\x0d\xcb\x10\x47\x69\x31\xb7\xfd\xa7\x7a\x4c\xd6\x97\x50\x1e\x2d\x11\x17\x5b\x4b\xa4\xb8\xb1\x80\x7d\xbb\x59\x18\x9f\xad\x9a\xfe\xe5\x79\x11\xf6\x06\xba\xcb\x4d\x16\xb3\x84\x80\x68\x0c\xa1\x07\x9f\xa0\x78\x62\x86\x3f\x89\xd0\xcb\xf3\xcf\x21\x7f\x7b\xc5\x5e\x73\xaf\x9a\x04\xaa\xd5\x1b\x6c\xf0\x9d\x18\x41\xf1\x5f\xfc\xf8\x30\xc7\x1c\x97\x41\x6f\x25\x84\xea\x14\x9e\xc6\x09\x1b\xe3\xd4\x4e\xdb\x39\xc1\x75\x14\x09\x70\x5e\x11\x83\x53\xb4\xb4\x10\x83\xe3\x14\xb0\xae\xa1\xba\x95\x1b\x1c\x27\x77\xdb\x8c\x31\xe7\xae\x53\xa3\x87\xef\xca\x0e\x17\x54\x60\x2e\x15\x35\x10\xfd\x09\x10\x50\xfc\xa0\x09\x82\xa8\xc7\x92\x2c\x5f\x56\x9d\x29\xa4\x8b\x62\xe1\xb0\x8c\x44\x58\x2d\x1e\x16\x89\x13\x1a\x3f\xfc\x7d\x60\xb0\xbb\xd9\xce\xf4\x3d\x77\xe0\x1e\x85\xa8\xf0\x98\x71\x9c\x21\x8e\x55\x77\x0a\x53\xc6\xb5\x9d\x86\x86\xeb\x7c\x88\x06\xf0\x81\x0c\xe0\x83\x2e\x79\x89\x84\x44\xb8\xb7\xa9\xe7\xfa\x03\xf8\xb9\xef\x96\xd8\xb2\x51\xfe\x32\x6c\x5d\x8c\x6f\x82\xeb\x09\x5c\x8c\x27\x57\xd5\xd3\xa6\x17\xc2\x2b\x30\xda\x4f\xf8\x7f\x63\x84\xf6\x94\x5b\x8a\x93\xfa\xf0\x0a\xc2\xbe\xeb\xfc\x7a\x7a\x79\x1b\xdc\xb4\x19\x92\xa6\xe1\x75\x30\xb9\xbd\x1e\x5f\x8c\xdf\x36\xe0\xbb\x09\xca\x0f\x4b\xdf\xf7\x0f\x45\x62\x61\xfc\xa4\x4b\xf9\x49\x77\x69\xf7\x18\xb9\xcd\x62\x24\xb1\xc2\xc8\x42\x7f\x02\x44\x01\x3f\x12\x21\x09\x9d\x59\xa4\x3c\x07\x4e\x6e\xed\xe2\xcd\x6b\x44\xdd\xe1\x61\x43\x03\x85\xfb\x10\x62\xf7\xd2\x76\x17\x3c\x51\x3e\x9a\x44\xc7\xfa\x7d\xbe\x95\xf4\x26\xe1\xa7\x84\x0b\x09\xd1\x1c\x47\xf7\x4a\x68\x3d\x60\x98\xa3\xa5\x86\x52\x3d\xf3\x75\x72\x34\x17\x1f\x56\x4c\xdc\xc8\x85\xaa\xbc\x14\xd6\xa1\xb3\xa9\x2e\xd3\x85\x90\x70\x57\xc2\x59\xa5\x76\x6e\x3c\x8a\x19\x7d\x29\x8b\x63\xdc\xf2\x23\xc6\x09\x96\x05\x84\xb1\x1c\x6c\x4e\x6c\xb7\x55\xa3\x04\x03\x7a\xb1\x8f\x0a\xd4\x3c\xbf\xd4\x18\xc0\x72\x47\x0d\xd8\xb7\xef\x46\xa7\x93\xa0\x42\xf4\x4d\x30\xd1\x60\x75\x1d\x67\x0f\xae\x61\xd8\x6e\xb4\x81\xe9\xbd\x02\xbc\x15\xf1\xa1\xf1\x95\x2f\x68\xe1\xeb\x12\x25\x0b\xac\x55\x10\xca\x32\x4c\xe3\xde\xfb\xfa\x2b\x73\xbd\x71\x78\x79\x85\xfa\x3a\x6d\x98\x49\x74\xfb\x81\xdc\x51\x1b\x71\x38\x7f\x98\xbb\xbb\x6b\x49\xdf\x2d\x0b\x1d\xef\x67\xa2\x52\xcd\x17\x74\xf4\xbd\xf4\xfc\xf1\x9f\x4b\xd3\x97\x1c\xfa\x19\x85\x0e\xfb\x15\xf7\xae\x39\x76\x92\xea\x86\x0e\xff\xc6\x6c\x5a\x68\x97\x7b\xbc\x12\xaa\x91\x62\x1c\xbb\x4e\xe3\x44\x6a\x45\x1f\x43\xb5\x55\xb5\xc7\xbe\x64\x0e\xe3\xdc\x1d\x23\x5b\xe9\xd6\xa9\xa9\xd8\x56\xe6\x55\xfe\xee\xf6\xb3\x95\x8a\x5b\x16\xf7\xfa\x5b\x2b\x3d\x9d\x9e\xd7\x6b\x48\x30\xb5\xd9\x56\xc6\xfb\xd9\xc9\x1a\x8c\x45\xb8\xf3\x81\x54\x18\x3c\x95\xb5\x9b\x74\x9d\xd7\xa2\x5e\x8b\xb8\x35\x2f\x39\xde\xfc\x3f\xd8\x91\x2e\x8d\xb0\x3b\xbb\xc6\x3e\xfd\x1e\x18\x9d\x7d\x87\x7b\x60\xf7\x35\xb0\x81\x85\xef\xf2\x6e\x3b\xde\x75\x1b\x8c\x0c\x46\xfa\xaf\xc1\xa0\xc5\x5e\x04\x0b\xa1\x74\xa9\xba\x0b\x1a\x17\x40\x87\xf4\x7f\x72\x02\xa3\xc2\x83\xfa\x23\x6e\xca\x59\xda\xfa\x88\xdb\x47\xaf\x76\x57\x3b\xd5\xa8\x26\xa4\x5a\xb5\x62\x1b\xa2\xa3\xe0\x32\x98\x04\xd0\x28\x3b\xc0\x6e\x19\xb4\x8d\x9c\x7d\x35\x49\x32\x85\x0f\x03\x93\x83\x0d\xf5\x12\x3c\xe2\x68\xc7\xa0\x2f\x2b\x3a\x1e\xa4\x4d\x36\x64\xc9\x73\x6a\x11\x73\x4e\xa5\x16\x69\xa4\xe0\x0f\x2d\xd2\x51\x7d\xb1\x08\xfa\xd7\xe8\x97\x5d\x73\xb4\xd4\x0c\x37\xb1\x66\x0f\xf9\x49\x90\x6b\xb9\xc7\x0e\x28\xf3\x59\x98\x71\xbe\x75\x3d\x6c\x01\xad\x31\xf2\xb9\xb1\xf6\xdc\x9c\x7f\x9b\x15\xf5\xba\x45\x66\xcb\x66\x35\xc0\x75\xfa\xb5\xd5\x71\xa3\x16\xa1\x17\x2f\xb9\xdd\x12\x7e\x7b\x3d\x62\x6f\xc9\xce\x6e\xa8\x4d\x3b\xa3\x48\x12\x46\x6d\xc9\xea\x2b\x84\xf3\xe7\x05\xa1\x4e\xe8\x1b\xdd\x55\x93\x85\x3f\xf7\x5d\x17\x40\x69\x57\x2c\x31\x4f\x09\xc5\xc0\x28\x44\x8c\x4e\x13\x12\x49\xeb\x9e\x0b\xb0\x44\xdc\x9e\xc6\x69\xdd\x63\xf3\x55\x94\xdd\xc4\x70\x68\x77\x3a\x62\xb6\x8e\x63\x52\xb0\x31\x4e\x01\xe9\x0a\xac\xc2\x2c\x84\xe5\xbe\xda\x9e\x92\x95\x10\xfc\xeb\xfc\xf2\x76\x14\x8c\xfc\x5d\xc6\xa5\x81\x1d\x15\xaa\x44\x06\x9c\x08\xdc\xee\xe0\x98\xc9\xb9\x92\x10\xad\x1e\x6e\x18\x55\x53\x35\x4a\x77\xcd\x72\x77\xf9\x9b\x20\x42\x97\x28\x21\x71\x99\xbb\x7a\x52\xaf\x6f\x81\xd5\xb8\xd0\x01\x6a\xf4\xf2\x45\x85\x4f\xa3\x96\xc3\x03\xab\x9f\xda\x1a\x20\xbc\x1a\xc3\xf9\xd5\xf8\xcd\xe5\xc5\xf9\x04\x7a\x9b\xf5\x1f\x6b\xd4\x08\xc9\x2b\x08\x8b\xb1\x07\xe9\x72\x80\xd1\xd9\x41\xe5\xd4\x36\x29\x5c\x18\x1f\xfe\x6d\xc6\x8b\x17\xc5\x7f\x5b\xdf\x64\xec\x38\xad\xfd\x22\xf7\x39\x69\xae\x56\xe8\xd8\xe6\x3a\xa5\x2a\xac\xc0\xf8\x21\x2a\x1a\x4b\xe8\xee\x84\x08\xd9\x5c\xe5\xf3\xbf\x5c\x2d\x89\xfd\x6b\x0b\x24\xed\x73\xb4\xfd\xc8\x65\x9b\xe5\x5b\x48\xbe\xf8\x7d\xc9\x0f\x96\xff\xf3\xb3\xbc\x0e\xf5\xff\x18\xcd\x6f\xe1\x46\x65\xf1\x0f\xaa\xaf\xb4\xed\x7f\x03\x00\x00\xff\xff\xbb\x7d\xeb\x13\x1c\x31\x00\x00")

func templatesModelGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGoTpl,
		"templates/model.go.tpl",
	)
}

func templatesModelGoTpl() (*asset, error) {
	bytes, err := templatesModelGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.go.tpl", size: 12572, mode: os.FileMode(420), modTime: time.Unix(1502008333, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPogoGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\x4d\x6f\xab\x46\x14\x5d\x33\xbf\xe2\x08\x55\x0d\xc4\x08\xd4\xed\x93\xbc\x78\x2e\x56\x1a\xa9\xb2\xdd\x94\x2c\xaa\x34\x8b\xf1\x70\x81\x69\x60\x86\x37\x33\x60\x47\x16\xff\xbd\x1a\x6c\xe7\x25\xad\xf2\x56\x5c\xee\x9c\x73\xee\x77\xcf\xc5\x0b\xaf\x09\xa7\x13\xd2\xdd\xc5\x9e\x26\xc6\x64\xd7\x6b\xe3\x10\xb1\x20\xb4\xce\x08\xad\xc6\x90\xb1\x20\xac\xa5\x6b\x86\x7d\x2a\x74\x97\xfd\xc3\xc5\x8b\xc8\xfa\xfa\x18\xb2\x98\xb1\x2c\xc3\xdd\x7a\xb3\x7e\xf8\x5a\xac\x73\xac\xfe\xc2\x6e\x7b\xb7\x4d\x91\x6f\xb1\xd9\x16\x58\xe7\xf7\x45\x3a\x63\xf2\x15\xa4\x85\x6b\x08\x42\x77\x9d\x56\x90\xca\x91\xa9\xb8\x20\x54\xda\xa0\xe4\x8e\xef\xb9\x25\xe8\x9e\x0c\x77\x52\x2b\x0f\xe6\x0e\x82\x2b\xec\x09\x83\xa5\x12\x07\xe9\x1a\xaf\xe5\x5e\x7b\xb2\xa8\x8c\xee\x60\x45\x43\x1d\xc7\x8d\xaf\xe2\xcf\xb3\x3d\x4d\x37\x29\xcb\x32\x0f\x2c\x1a\x69\x61\x1b\x3d\xb4\x25\x0e\xda\xbc\xcc\x0a\x6f\xb1\x32\xfb\xad\x4d\xf3\x15\xb8\x2a\x3f\xfa\x8a\x63\xca\x7c\x8c\x39\xe9\xb7\x34\x4f\x2c\x58\x1f\x49\x44\xd6\x19\xa9\xea\x04\x69\x9a\xbe\x3d\x9e\xa6\x18\x51\x5f\x1f\xd3\x5f\x75\xd7\x71\x55\x16\xbc\x4e\x40\xc6\x68\x13\xb3\xe0\x8f\x81\xcc\xeb\xe7\xb4\x5b\xcf\x7b\xd0\x07\xfb\x1f\xc6\x83\x3e\x7c\x4a\xba\x72\xd8\xc4\xce\x99\xee\x74\xad\x61\x9d\x19\x84\xc3\x89\x01\x05\xf1\xee\x0b\x6e\xfd\x27\xf1\xa0\x6a\x50\x02\x1b\x3a\x44\xe5\x1e\xf9\x2a\xc6\xed\x4c\xf0\x48\x43\x6e\x30\x0a\x3f\x7b\x87\xff\xbf\x72\x1d\xf1\x2e\x2a\xf7\x71\xc2\x80\xc9\x4b\x64\x19\x7e\xd7\x35\x7a\xa3\x47\x59\xd2\x79\x96\xad\xae\x31\x4b\xcf\xf3\xd9\xbf\xa2\x26\xe5\xe7\x47\x25\xbe\x0d\x64\x24\xd9\x94\x8d\xdc\xcc\xc4\xe5\x8c\xfc\xb4\xa4\xd3\xc4\x98\xd0\xca\xfa\xd5\x03\xb2\x0c\x8f\xbd\x25\xe3\x72\xbd\xd1\xae\x91\xaa\x46\xae\xa1\x2e\xa6\xac\x7c\x74\x43\x37\x16\x1c\x42\xab\xaa\x95\xc2\x31\xfc\x8f\xb2\x44\x78\x5e\xc4\xdf\xee\x37\x77\xe1\x47\xd9\xc7\xbe\xe4\x8e\xb0\x23\x53\x69\xd3\x81\x2b\x0c\x67\xcf\xa1\x21\xf5\x63\xf9\x0b\xf5\xac\xfe\xb8\xcb\xbf\x16\xeb\xf9\x14\xe6\x4e\xd8\x56\x0a\x8a\x2a\x49\x6d\x69\xd1\xf1\xfe\xe9\x5c\xf0\xf3\xbb\x62\x13\xe8\xaa\xb2\xe4\xfc\x72\xc5\x88\x04\x9e\x9e\xaf\x5d\x91\xef\xec\x11\x4f\xcf\x1f\x5b\xc4\x02\x85\x2f\xcb\x2b\x7b\x81\x5f\x58\xe0\x8f\x47\xe8\x36\xc1\xc8\x5b\xff\x66\xb8\xaa\x09\x97\xf0\x27\x16\x04\x02\x4b\xf0\xbe\x27\x55\x46\x22\x41\xf8\x77\x18\x2e\x84\x6e\x17\xde\x88\x59\x10\xc8\xef\xcf\x32\x41\xf8\x53\xb8\xb8\x5c\x7d\x7a\xef\x34\x8f\x54\xec\x41\xe3\x77\xd0\x38\x47\xf2\x4e\xb5\x58\xb0\x60\x62\xc1\x65\x81\x44\x02\x99\x60\x64\x13\xfb\x37\x00\x00\xff\xff\x15\x6a\x43\x63\x5a\x04\x00\x00")

func templatesPogoGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPogoGoTpl,
		"templates/pogo.go.tpl",
	)
}

func templatesPogoGoTpl() (*asset, error) {
	bytes, err := templatesPogoGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/pogo.go.tpl", size: 1114, mode: os.FileMode(420), modTime: time.Unix(1502007850, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/enum.go.tpl": templatesEnumGoTpl,
	"templates/model-many-to-many.go.tpl": templatesModelManyToManyGoTpl,
	"templates/model.go.tpl": templatesModelGoTpl,
	"templates/pogo.go.tpl": templatesPogoGoTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"enum.go.tpl": &bintree{templatesEnumGoTpl, map[string]*bintree{}},
		"model-many-to-many.go.tpl": &bintree{templatesModelManyToManyGoTpl, map[string]*bintree{}},
		"model.go.tpl": &bintree{templatesModelGoTpl, map[string]*bintree{}},
		"pogo.go.tpl": &bintree{templatesPogoGoTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

