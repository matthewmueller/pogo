// Code generated by go-bindata.
// sources:
// templates/enum.go.tpl
// templates/model-many-to-many.go.tpl
// templates/model.go.tpl
// templates/model_test.go.tpl
// templates/pogo.go.tpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesEnumGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x96\xd1\x6f\xda\x3a\x14\xc6\x9f\xe3\xbf\xe2\x5c\x54\xa9\x09\xea\x4d\xd4\x97\xfb\x50\x89\x87\xdb\x15\x55\x93\x3a\x40\x85\x55\x9b\xa6\x49\x98\x70\x12\x2c\x12\x87\xda\x4e\x0a\xa3\xf9\xdf\x27\x3b\x21\x98\xb5\x2b\xdb\xd4\x54\x5a\x1f\x63\xfb\x3b\x9f\xbf\xf3\xf3\x29\xdb\x6d\xd0\x7d\xad\xbf\xa0\x2c\x89\xd6\x83\x3b\x2a\x18\x9d\x25\x28\xa1\xf9\xf6\x9a\x35\xc8\x76\x0b\x27\xc8\xe1\xa2\x07\x7e\x9f\xe7\xa9\x3f\xa0\x29\x82\x29\x04\x27\xa9\xfe\xac\x57\x1f\x41\x32\x1e\xe7\x09\x15\xcd\x52\xf1\xcc\xda\x23\x24\xd9\x03\x9a\x3d\xaf\x6e\xd4\x84\x31\xcc\x05\x8c\x68\xb8\xa4\x31\xb6\x14\xc7\xaa\x56\x47\x9e\xa7\x2d\x5d\x62\x94\xc5\x19\xa4\x54\x2c\x51\xb4\x74\x89\x20\x80\xeb\xfe\xa0\x7f\xfb\xff\xa4\x7f\x05\x97\x9f\x61\x34\xbc\x1e\xfa\x70\x35\x84\xc1\x70\x02\xfd\xab\xf7\x13\xbf\xc5\xfe\xe8\xe4\x40\x6d\x56\x6d\x75\x28\x08\xa0\x62\xb3\x2c\x81\x49\x50\x0b\x84\x69\x0d\x71\x59\x4e\xad\xf2\x91\xc8\x52\xb3\xe4\x8f\xc3\x05\xa6\x74\x87\xf6\xd4\x27\x66\xbd\x51\xc9\x19\x57\xe7\xff\xfd\xc5\x91\x84\x19\x97\x0a\x5c\x02\xfa\x4e\x82\xf2\x18\xeb\xc7\x7c\x47\x93\x1c\xa5\x7e\x8f\x8e\x15\x9b\x8e\xe4\x86\xce\x30\x81\x47\x08\xe9\x8a\x29\x9a\xb0\x6f\x68\xe5\x79\xba\xdf\x51\x96\xa7\xcd\x39\x9f\x38\xc7\x25\x7a\xcd\x76\x57\x6f\x1a\x8a\xb9\x19\x08\x5e\x65\x0e\xf9\x5c\xbb\xf1\x5a\x0a\x7b\x4c\x15\x93\xd1\xc6\x5c\x42\x2a\xc1\x78\x8c\x02\x18\x57\x28\x22\x1a\xb6\x08\xe4\xd8\xd4\x02\x81\x2a\x17\x5c\x5a\xe5\xa1\xd0\x1d\x80\x2c\xda\x73\xaa\xa3\x99\x92\x28\xe7\x21\xb8\xf5\x24\x2d\xcb\x26\x34\xaf\xd6\x72\xbd\x9d\xc2\x96\x38\x05\xad\x18\xba\xa3\x49\xfd\x95\x10\x47\x3e\x30\x15\x2e\xc0\x92\x78\xa9\xff\x00\x21\x95\x78\x1c\x81\x0b\x02\x00\x4d\xb1\x1e\x74\x6c\x14\x3a\x07\x4d\x74\x4a\x42\x9c\xea\xca\xbb\x03\xa4\xad\xc1\x6f\x37\x36\xa5\x42\x2e\x68\xf2\x36\x9d\xfd\x50\x15\x9b\xe0\x5a\xed\x0a\x4b\x6b\xfe\x70\x95\x81\xc2\xb5\xf2\x5f\x68\xa8\x25\xe1\x7a\xe0\x7e\xf9\x3a\xdb\x28\x3c\x03\x14\x22\x13\x9e\x6e\x6f\x9d\x61\xb5\xb0\x97\xf0\x77\x24\x78\x67\xc0\x99\xc9\x36\x08\xe0\x23\x4f\x2d\x4b\x39\x7f\x6a\xca\xcc\xbd\xe7\x4d\x75\xf7\xae\x0e\x74\x5c\xbd\xbd\x36\xe0\x55\xce\xb4\xb1\x1a\xb1\x0a\x39\xb3\xc7\xfb\x25\xca\x0e\xa1\xa9\x90\xea\xee\x5d\xf4\x8e\x63\x78\x08\xda\x1c\x23\x9a\x27\xea\x82\x38\x0d\x6f\xda\xa2\xf4\x07\xf8\xe0\x76\x18\x2f\x68\xc2\xe6\x8d\x68\xc7\x3b\x40\xb3\x8e\xae\xfd\x79\x73\x9f\x04\x73\xc1\x0a\x14\x55\x20\x6f\x82\xa7\xa9\x04\xd2\xd8\x60\x28\x8f\x1a\x89\x74\x63\x9b\x71\xfe\x73\x66\xcd\x41\x4d\xab\x2d\xf4\x0c\xb3\x4f\x61\xb5\x59\x1d\x87\x94\xff\x60\x6e\x4e\x15\x9d\x51\x89\x81\xbc\x4f\x7c\xbd\xce\x7f\xc3\x9f\x85\xaf\x3e\xea\x4a\x11\xee\xcf\x6e\x4b\x8b\xdc\x59\x1e\x9d\x41\xb6\xd4\xbf\x51\xa5\x08\xfd\xfa\xd1\x79\xc4\x61\x11\xfc\x93\x2d\xf5\x96\x3f\x40\x69\x7f\xdb\xc3\xd7\x33\xcb\x23\xaf\x35\xc6\xde\xe5\x52\x65\x29\xc8\x3a\x2b\x9d\xd0\x2a\x5e\xb7\xf8\xbf\x2c\xa4\x7c\x14\xaf\xab\xd9\x36\xba\xfe\x74\xac\x0b\xa3\x78\xed\x16\x02\xba\xab\x78\x5d\x61\x72\x8b\x74\x8e\xc2\x6a\x06\x8b\xa0\x10\xfe\x0d\x72\xd7\x83\x5e\x0f\xfe\x3d\xb7\xe3\xd7\xb4\x38\xe5\xd1\x88\x0b\xe1\x6b\xdd\xcb\x8d\x42\xe9\xee\xd4\x3c\x9d\xfa\xf7\x00\x00\x00\xff\xff\xb3\x5b\x01\xb0\x76\x0d\x00\x00")

func templatesEnumGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesEnumGoTpl,
		"templates/enum.go.tpl",
	)
}

func templatesEnumGoTpl() (*asset, error) {
	bytes, err := templatesEnumGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/enum.go.tpl", size: 3446, mode: os.FileMode(420), modTime: time.Unix(1503978090, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelManyToManyGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\xdf\x73\xdb\x36\x12\x7e\x16\xff\x8a\x3d\x8e\x9b\x92\xae\x8e\xba\x67\xdf\xe8\xc1\x89\x98\xd4\x3d\x57\xf2\x59\x72\x6f\x6e\xd2\x8c\x05\x93\x2b\x09\x35\x09\x30\x00\x64\xd9\xa7\xf0\x7f\xbf\xc1\x0f\x52\x94\x4d\xd9\x6d\x6a\x66\xea\x27\x19\x5c\x2c\x3e\xec\x7e\xfb\x61\x81\xed\x76\x70\xfc\x5a\x7f\x83\xb2\xf4\xb4\x3f\xf8\x85\x08\x4a\x6e\x32\x94\x50\x8f\xbd\xe6\x1a\xde\x76\x0b\x47\xc5\xed\x12\x4e\x86\x10\x4d\x51\x29\xca\x96\x32\xba\x20\xc9\x2d\x59\x22\x98\x05\xe1\x48\xe9\xaf\x4a\xa3\x60\x24\x47\x88\xa6\xc9\x0a\x73\x02\xd1\x4c\x0f\xd5\x46\xcc\xf8\x30\x63\xd1\x58\xdb\xb9\x0f\x89\x1e\xcf\x49\x01\x81\x2c\x32\xaa\xc0\xbf\xf6\xb5\x75\x08\x79\x42\x0a\xaa\x48\x46\xff\x87\xf0\x05\x7e\xe3\x94\x81\xef\xd7\xb3\xee\xf4\xb4\xa3\x04\xbe\x40\xc6\x37\x28\xaa\xf1\xfc\xa0\x37\x49\xd9\x72\x9d\x11\xf1\xd4\x57\x6e\x7d\xe5\x8f\x7d\x25\x5c\x8f\x27\x3c\xd3\xdb\x92\x15\xf6\x77\x3c\x5b\xe7\x4c\x56\x46\x34\xbd\x97\xda\x8c\xb2\x14\xef\x77\x56\x67\xee\xdf\xda\xd5\xa2\x02\xa6\xdd\x06\x79\x21\x28\x53\x0b\xf0\x7f\xf5\xbf\x93\xbf\xfa\x7e\x58\xa3\xea\xc3\x6e\x8f\x7c\xd9\x9c\xd4\x8c\x87\x76\x80\x0b\x7a\x0f\x7e\xc2\x33\x19\xb5\xcf\x5f\xdc\x16\x44\x90\xdc\xc0\xab\x7f\xb7\x67\x67\x71\xbb\x59\xa1\x40\x6b\x69\x7f\xba\x8d\xbc\xe7\x02\xe9\x92\xfd\x0b\x1f\xe4\xce\xd8\xb9\xdc\x8b\x4b\xab\x61\x46\xa5\xaa\xf7\xa0\xe7\xe5\x09\xc9\x71\x2f\xa5\x0e\xf0\xab\x53\xd7\x94\xc7\x64\x2d\xa0\x62\x6b\x37\x05\x52\x38\xef\x8e\x94\x9d\xed\xe4\x82\x2f\x39\xe4\x44\xdc\xa2\xe8\x68\x27\x83\x01\x7c\x88\xc7\xf1\xe5\xe9\x2c\x1e\xc1\xdb\xff\xc2\xc5\xe4\xc3\x24\x82\xd1\x04\xc6\x93\x19\xc4\xa3\xb3\x59\xd4\xd1\xd6\x62\x21\xb8\xe8\x4a\xc0\x06\x03\xed\xdf\x4a\x43\x59\x8e\xb9\x7a\xcf\xd7\x2c\x05\x81\x6a\x2d\x18\xa6\x40\x17\xa0\x56\x36\x7d\xb9\x4e\x1f\x50\x09\x8c\x2b\x58\x68\x33\xef\x8e\x88\xd6\xe9\x43\x40\x03\x3a\x1a\xe3\x26\xf0\x77\x93\xeb\x99\x7e\xd8\x51\xb0\x4e\xb3\xcc\x00\x4e\x9c\x0c\x51\x06\x7c\x2d\xac\xfc\x76\x17\xc2\xc6\x6a\x73\x2b\xf9\x65\x39\xf7\xd4\x43\xb1\x03\x22\x95\x58\x27\x0a\xb6\x1e\xe8\x60\x0a\xc2\x96\xf8\x54\x32\xeb\xe3\x22\xe1\x28\x12\x84\xa3\x5a\x8e\x46\x44\x91\x99\xf6\x57\x96\xd6\x83\x3d\x24\xbe\x40\x43\xf5\xca\x12\x8e\xab\xd5\x61\xfe\x9b\xe4\xec\xc4\xaf\x2d\xcb\xb2\xcf\x73\xaa\x30\x2f\xd4\x83\x3f\xd7\x1e\xe8\x02\xa2\x77\x3c\xcf\x91\xe9\x09\x83\x81\xf1\xba\x1b\xd8\x6e\x01\x59\xda\xfc\xe1\x75\x55\xbc\xb3\x15\x95\x90\x70\xa6\x08\x65\xd2\xe4\x6b\x91\xad\x35\x0a\x23\xca\xa8\x50\x54\x5f\xbb\xac\xee\x8a\xc5\xd5\xe2\xa7\x17\x67\x36\x85\xf5\x87\x3a\x87\xbd\x2a\xab\xc7\xee\x47\x67\xa1\xf9\x11\xb3\x02\x05\x28\x0e\x89\x40\xa2\xd0\x90\x7b\x07\xb0\xbb\x68\x8c\x71\xd3\xe0\xb2\x09\xc6\x62\xcd\x12\x3d\x1e\x84\x96\x67\x26\x26\x5b\xaf\x67\xc5\x02\xde\x54\x63\xdb\x37\x2e\x2a\xdb\x0e\x39\xf3\x01\x19\x0a\x1d\x10\x24\xc9\x0a\xf8\xa2\x19\x98\x1c\xd5\x8a\xa7\x12\x16\x5c\x34\x87\x77\x6c\xea\x2e\x72\xcf\xd7\x76\xda\x28\x6e\x92\x24\x28\x25\x17\x07\x8a\xdc\xd5\x63\x6b\x95\x4b\x54\xd2\x6c\x6c\xde\x28\xef\xb9\xcd\x4f\xb0\x53\xdb\x3a\x49\xe1\x41\x57\xc1\xde\x07\xd7\x7a\xe8\xac\x5a\xb0\x7a\xea\x5e\xaa\x6b\xe7\x91\x4b\x71\x74\x10\xe4\xd0\x10\xa2\xc5\x79\x4d\x98\xda\x99\xe7\x8e\x57\x54\x07\xbd\xd9\x29\x2d\xbb\xd6\x32\x26\x51\x3d\xb7\xf9\x67\xfc\x06\x21\x1c\x0a\xc1\x71\x23\x06\xdb\xa7\x98\x5f\x0c\x80\x67\x9a\x3c\xa7\x9c\xdd\xd4\xc0\x59\x5e\x64\x68\xe4\x5a\x87\xe5\x67\x22\xe4\x8a\x64\x28\xe0\x0d\x5c\xb1\xbc\xfe\x8f\x32\x85\x62\x41\x92\xce\x2e\x41\x83\x41\xb5\xf6\x4f\xd3\xc9\x18\xdc\xca\xbb\x5c\xd9\x80\xcd\x35\x10\x0e\xda\xe4\xb9\x64\x35\x3c\xe9\xe4\x7c\xfc\x74\xf3\xa0\xb0\x6f\xfb\x89\x66\x22\xf4\xf1\x16\x39\xe3\xe0\x49\x56\x42\x47\xa9\x3a\x0e\x06\xd9\x9a\xd5\xd8\xf4\x74\xad\xaa\xa4\x89\xf0\x39\x5c\x7b\x9e\x82\x94\x28\x02\x16\x5b\x68\xb1\x3d\x86\x56\xdb\x1b\xdb\xfe\x53\xe2\x84\x9d\x49\xe3\x3e\x2d\xa6\x4a\x50\xb6\x6c\xf2\xa0\x23\x1a\x3c\x13\x3c\x8b\x21\x08\xf5\x09\x4a\xd9\xb2\x11\xab\x46\x73\x38\x9b\x8c\x26\x7e\x67\x41\xb9\x10\xf4\x4e\x1f\x17\xab\xfa\x40\x5d\xa2\x02\xe2\xda\x45\xc6\xd9\xdf\x19\xcd\xbe\x71\xdb\xf8\x0c\x02\x1b\xcd\x25\x2a\x77\x80\xb4\xc7\x35\x27\xc5\x47\x1b\xd2\x4f\x75\x76\xb7\xa5\x69\x32\xab\x9d\x98\xdb\xe5\x2d\x06\xed\xa6\xe1\x8b\xed\x68\xc2\x33\xf3\x32\xd1\x2a\x71\xa0\xd5\xb7\x55\x12\xcd\xbc\xb2\x84\xbf\x0d\x41\xef\x4a\x23\xaa\x31\x7d\x6c\x76\xa5\xfe\x27\x18\x36\x5c\xec\xa6\x7a\x00\x8d\xd6\x13\xc0\x03\x77\x08\x40\xd7\x3d\x57\xc1\x97\x3c\x3a\x9a\x9d\xbe\x3d\x8f\xa3\xf7\x94\xa5\x41\x78\x02\x0b\xca\x52\xe0\x0c\x41\xf0\x0d\xdc\x3c\x00\x55\xdf\x4b\x28\x04\xcd\x89\x78\x80\x5b\x7c\xe8\x8e\x24\x1a\xc1\xbe\x4c\xd9\xf5\x25\x54\x8f\x0d\xd5\x53\xc1\xbc\x0f\x73\x1f\xbe\x40\xf5\x78\x32\xff\x4e\xce\xfd\xb2\xb4\x54\x32\x1b\x49\x6f\xa0\x7a\xb1\x2a\xcb\x68\xf4\xb6\x0f\x7b\x0f\x21\x9a\x52\x41\x4d\xaf\xa6\xe8\x0e\x06\x20\x3f\x67\x20\x31\xc3\x44\xc1\xe7\x35\x8a\x87\xfe\xde\xf6\x0b\xc1\xef\x68\x8a\xa9\xc6\x26\xf1\xf3\x1a\x59\x82\x5e\x4f\x7e\xce\xa4\x12\x9a\x3f\x73\xaf\x37\x8d\xcf\xe3\x77\x33\xa8\xde\x7b\x74\x23\xf0\xfe\x72\xf2\x33\x54\x4d\xa6\xd7\xfb\xcf\x8f\xf1\x65\x0c\xcd\x07\x17\x3d\x3a\xb7\x6d\x87\x03\x7d\xce\x97\x81\x75\x5b\x81\x37\x8f\x28\x65\x19\x7a\x06\xa6\x58\x33\x53\x4f\x06\xa3\xd7\xd3\x37\xd4\x84\x67\x8d\x4e\xbd\xa7\x33\x78\x32\x84\xf4\x26\xfa\xb7\xb6\xb9\xe4\x9b\x43\x0e\x7b\x74\x01\xe6\xd1\x47\xf0\x4d\x34\x4d\x08\x0b\xaa\x77\xa7\xb2\x0c\xff\x09\xb8\xcf\x6e\x63\x3c\x1c\x42\xb1\xbc\x8f\x62\x21\xc6\xfc\x92\x6f\xa4\xfb\x56\x73\x97\xd1\xac\x0f\x6d\x77\x66\x63\x56\x7a\x8f\x4d\x51\x97\x81\xd7\xd2\x63\xeb\x4d\x95\x7d\x6d\xf4\x4d\xea\xe0\x8c\x49\x14\x4a\x57\x02\x35\xbf\x80\x00\xc3\x8d\xa9\x06\x73\xac\xeb\x90\x77\xac\x96\x67\xd5\xc2\x4f\x7a\x8a\xc6\x9d\xdb\x70\xdd\x81\x6d\x67\xfb\x13\x11\x3d\xc8\xf8\x36\x79\x5e\x50\xcc\x52\x09\x84\xa5\x50\x08\x2c\x88\x30\x37\xb2\xbc\xbe\x6a\x38\xda\x5d\x27\x7d\xb8\xa6\x7d\xb8\x36\x6f\xa7\x0d\x14\xd3\x8c\x26\x18\xb4\xe9\x7a\xd8\x87\x7f\x38\x0e\xeb\x52\x73\x61\xfe\xba\x52\x3b\x1b\x4f\xe3\xcb\x19\x9c\x8d\x67\x93\xba\xbc\x20\x98\xc3\x0f\xee\x00\x96\xd1\x4f\x9c\xb2\x40\xa3\xf4\xfb\xe0\x87\xf0\x03\xcc\x43\xaf\xf7\xcb\xe9\xf9\x55\x3c\x6d\x33\xa4\xfb\x86\x97\xf1\xec\xea\x72\x7c\x36\xfe\xd0\xac\x66\x80\xc3\x95\x7a\x7d\x17\x45\xd1\x6b\x54\xa8\x73\xf4\xc7\x2a\xf3\xaf\x58\x50\x57\x45\x4a\x14\xea\x82\x5a\x9b\x5f\x40\x18\xe0\x3d\x95\x4a\xf7\x47\xb6\xac\xbe\x45\x51\x5d\xb9\xc5\x5d\x51\x7d\xf5\xf1\xe2\xb6\xf3\xe2\x01\xf3\x87\x6a\xd0\x15\xdb\xc9\xb0\xb5\x11\x72\x74\x5a\x50\x21\x15\x24\x2b\x4c\x6e\xb5\x04\x6f\x10\x56\xe4\xce\xbd\x93\xd8\x37\x77\x5d\x35\xb2\xa5\xd1\xd9\x7f\x92\xb7\x9d\x4c\xdb\x4d\x70\x78\x90\x4b\xbb\x47\xce\xb9\xdf\x3e\xd9\x87\x7c\x2d\x15\xdc\xd4\x0a\x32\x0f\x3d\xab\xf3\x8d\xcb\xa1\xde\x46\xca\xd9\xf7\xaa\xe2\xc2\x13\xf0\xbd\xe7\xb1\xa7\x98\xa1\xc2\xc0\xc6\xab\x0f\x7b\xfd\x55\xf8\x74\xad\x86\x72\x81\xd4\x82\x24\x5f\x54\xac\xca\xf5\x76\x0b\x19\xb2\x76\x14\x0d\xf5\x72\xb5\xdd\x10\xa5\xab\x8b\xd1\xe9\x2c\xde\xa9\xd1\x34\x9e\x19\xa1\xf1\x7a\xbd\x67\x34\x09\x86\xed\x46\x8f\xf4\xe8\x40\xe7\xd0\xaa\x53\x73\x87\x12\xd5\xba\xd8\xd7\xa1\x6c\x8d\x86\x6c\x1f\x9b\x1d\xf2\xb6\x7c\x29\xf8\x6e\xe2\x10\x48\x51\x20\x4b\x03\xfb\x7f\xff\x00\x9b\xf6\xd3\xd1\x3b\x34\xb9\xd2\xb9\x03\x7a\x6a\xcd\x5e\x49\x53\x1b\xce\xba\xea\x78\xfe\xd2\x0d\xcf\xf1\x21\x8d\x1e\xd9\xb2\x0a\x4f\xc0\x16\x18\x10\xa3\xcc\x6b\xa9\x35\x5a\x4b\x64\xb3\x46\x5f\x5f\xa3\x8f\x1b\x3a\x3d\xaa\x00\xfc\x49\x9d\x76\x5b\xfa\x1d\x17\x81\xfa\x55\x63\xbf\xa4\x13\xce\xa4\x02\x57\xd8\xa6\xd9\x18\xc5\xe7\xf1\x2c\x86\x8e\x7a\x79\xb7\x2c\x5d\xc0\x75\xdf\x52\x33\xbd\x89\xe2\x7b\x4c\x0e\xcc\xfc\x3a\x92\xfe\x2e\x7e\x3e\xa2\xa6\x65\xe2\xff\x03\x00\x00\xff\xff\x2a\x22\xec\x0a\xb7\x20\x00\x00")

func templatesModelManyToManyGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelManyToManyGoTpl,
		"templates/model-many-to-many.go.tpl",
	)
}

func templatesModelManyToManyGoTpl() (*asset, error) {
	bytes, err := templatesModelManyToManyGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model-many-to-many.go.tpl", size: 8375, mode: os.FileMode(420), modTime: time.Unix(1503992582, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\x5f\x73\xdb\x36\x12\x7f\x16\x3f\xc5\x9e\xc6\x75\x45\x57\x47\xb5\xaf\xb9\xf1\x83\x63\x2b\xa9\x3b\x8e\x94\xb3\xe5\xde\xdd\xa4\x19\x0b\x26\x21\x09\x35\x09\x30\x20\x69\x5b\xa7\xf0\xbb\xdf\xe0\x0f\x41\x50\x22\x65\xcb\x31\x9d\xf4\x26\x7d\x92\x89\xc5\x62\xb1\xd8\xfd\xed\x1f\x20\x5d\xad\x06\x07\xcf\xf5\xdf\x20\xcf\x1d\xc1\x0f\x7e\x47\x9c\xa0\xeb\x10\x27\x60\xbe\x3d\xe7\x1a\xce\x6a\x05\x7b\xf1\xcd\x1c\x5e\x1d\x82\x77\x81\xd3\x94\xd0\x79\xe2\xbd\x47\xfe\x0d\x9a\x63\x90\x0b\xc2\x5e\x2a\x46\x53\x21\x05\x45\x11\x86\x3d\xef\xc2\x5f\xe0\x08\x81\x37\x11\xdf\x0c\x15\x95\x4c\xe4\x37\x6f\x24\x08\xf5\x80\x2f\xbe\x8b\xe1\xcf\xe0\xa3\x98\xa4\x28\x24\xff\x2d\x07\x6f\xe5\xa8\x0f\x9f\x21\x64\x77\x98\x17\xdf\xa3\x72\x52\x42\xe8\x3c\x0b\x51\x39\xa4\xa6\x44\xeb\x53\x62\xf1\x39\xe6\x24\x42\x7c\x59\xc8\x71\xcc\xc2\x2c\xa2\x89\x21\x91\x5b\xf1\x19\xe6\xbe\xb5\x8f\xbd\xd8\x3b\x41\x29\x9a\x2c\xe3\x52\x2c\xa6\x08\x43\xb1\xe3\xa4\x81\x1b\x09\xee\x13\x41\x46\x68\x80\xef\x4b\xaa\x53\xfd\xa7\x61\x35\x13\x44\x11\x8a\x25\xdb\x5e\x14\x73\x42\xd3\x19\x74\xff\xe8\xfe\x90\xfc\xd1\xed\xba\xf0\x19\xfe\x64\x84\x42\xb7\x0f\xdd\x72\xd2\xdc\x9e\x14\x59\x8a\x13\x0c\xf0\x8c\xdc\x43\x77\xdf\x67\x61\xe2\x6d\x32\x78\x76\x2b\x91\x96\x38\xce\x38\x14\x86\xd1\x8e\x2d\xc6\x9a\xbb\xb6\x8b\xd6\x76\xf2\x9e\xcd\x19\x44\x88\xdf\x60\xde\xd2\x4e\x06\x03\x78\x3b\x1c\x0d\xcf\x8f\x26\xc3\x13\x78\xfd\x1f\x78\x3f\x7e\x3b\xf6\xe0\x64\x0c\xa3\xf1\x04\x86\x27\xa7\x13\xaf\xa5\xad\x0d\x39\x67\xbc\x2d\xac\x18\x0c\x04\x7f\xe5\x9d\x79\x3e\x62\xe9\x1b\x96\xd1\x00\x38\x4e\x33\x4e\x71\x00\x64\x06\xe9\x42\x1d\x5f\x24\x8e\x0f\x48\x02\x94\xa5\x30\x13\x64\xce\x2d\xe2\xb5\xd3\x0f\x01\x4b\xa1\xbd\x11\xbe\xeb\x75\xcb\xc9\x66\x66\xd7\x6d\x49\x59\x47\x61\x28\x05\xf6\xb5\x5b\x13\x0a\x2c\xe3\x0a\xe9\xda\x53\xa1\xb5\xda\x54\xa1\x6b\x9e\x4f\x9d\x54\x80\x4f\x31\x94\xa4\x3c\xf3\x53\x58\x39\x20\x94\xc9\x11\x9d\xe3\x4d\x08\x32\xc8\xbc\x0e\x67\x15\x30\x93\x1c\x14\x1c\xaf\xc1\x2f\x1c\x14\xab\xc3\xf4\xcf\x84\xd1\x57\x5d\x43\x99\xe7\x7d\x16\x91\x14\x47\x71\xba\xec\x4e\x05\x07\x32\x03\xef\x98\x45\x11\xa6\x62\xc2\x60\x20\xb9\x96\x1f\x56\x2b\xc0\x34\xb0\x7f\x38\x6d\x39\xef\x64\x41\x12\xf0\x19\x4d\x11\xa1\x89\x3c\xaf\x59\x98\x09\x29\x62\xc4\x51\x84\x53\xcc\x8b\xd1\x36\xbd\xbb\xb0\xe2\x62\xf1\xa3\xf7\xa7\xea\x08\xcd\x80\x39\xc3\x4e\x71\xaa\x07\xfa\x47\x6b\xaa\xf9\x15\x87\x31\xe6\x90\x32\xf0\x39\x46\x29\x96\xc6\x5d\x0a\xd8\x9e\x36\x46\xf8\xce\xb2\x65\xa9\x8c\x59\x46\x7d\xf1\xbd\xe7\x2a\x3b\x93\x3a\x59\x39\x1d\x05\x16\xb0\x5f\x7c\x5b\xed\x6b\xad\xac\x5a\xb4\x99\xb7\x98\x62\x2e\x14\x82\x91\xbf\x00\x36\xb3\x15\x13\xe1\x74\xc1\x82\x04\x66\x8c\xdb\x9f\x4b\x6b\x6a\x4f\x73\xdb\x7d\x3b\xb0\x9c\x1b\xf9\x3e\x4e\x12\xc6\x1b\x9c\x5c\xfb\x63\xad\x97\x27\x38\x4d\xe4\xc6\xa6\x96\x7b\x4f\xd5\xf9\xf4\x4a\xb4\x35\x87\xe4\x36\xb2\xea\x55\x06\x22\x5c\xac\xa0\x85\x15\x53\x2b\x47\xad\x60\x03\x7f\xb2\x64\xed\x66\x19\x09\x44\x8e\x72\x60\x56\xf6\xf4\xf9\x7b\x8d\x3b\x38\x84\xfa\x85\xbd\x8b\x94\x13\x3a\xef\xb9\x02\x74\xc2\x04\x6b\xbd\x3d\x9a\xeb\x7e\x3d\xdb\x12\xc2\x0a\x63\x35\x5c\x1d\x1d\xda\x71\xda\xc8\x56\x4d\xa9\xd1\xb8\xd0\x45\x82\xd3\x6d\x8a\xdf\xc2\xb7\xe7\x42\x93\xfa\x0f\x2c\xfd\x3f\xa0\x75\x32\x83\x5d\x34\x74\x08\x94\x84\x82\x67\xa1\x08\x4a\x42\xa7\x93\x3b\x4e\xe7\x2a\xeb\x8b\xa8\x2d\x0c\x54\xf0\xf6\xde\x70\x16\xe9\xd3\xd8\xe1\x64\x5d\xa7\x23\x44\xe5\x1c\xfe\xd6\xbc\x54\x01\x18\x57\x59\x79\xcc\xeb\xe7\xf2\xe0\x4a\x76\x58\x2a\x7f\xb7\x03\x36\xa7\x51\x1c\x62\x19\x17\x85\x0d\xbc\x43\x3c\x59\xa0\x10\x73\xd8\x87\x4b\x1a\x99\xbf\x08\x4d\x31\x9f\x21\xbf\xb5\xc2\x6e\x30\x28\xd6\xfe\xed\x62\x3c\x02\xbd\x72\x69\x98\x4a\x73\x53\x21\x08\x03\x41\xb2\xcd\x32\x2d\x4e\xc2\x12\x3f\x7c\xbc\x5e\xa6\xb8\xaf\x12\x37\xd7\x82\x75\x91\x47\x78\x9a\xb8\xb7\x71\x3c\xae\xf6\x1f\xa3\x07\x29\x59\x46\x8d\x6c\x62\xba\x08\x5f\xc8\x96\x70\x9b\x5c\x15\x4e\xbd\x00\xa5\x08\x94\x6c\xae\x92\x6d\x5d\x34\x43\x2f\x69\xfb\x9b\x16\xe4\xb6\x16\x83\xaa\x66\xa1\x9c\xc5\xb6\x83\x96\xcc\x60\x8b\xf2\x0a\xf8\x14\xa9\x0a\xa1\x73\x4b\x57\x3a\x0b\xcf\x73\x98\x8c\x4f\xc6\xdd\xd6\x74\xf2\x9e\x93\x5b\x11\x96\x17\x26\x71\x99\xe3\x14\x90\x4e\xcb\x29\xa3\x7f\x17\xa8\xf0\xb2\xe9\xf9\x16\x09\x94\x32\xe7\x38\xd5\x81\xba\x5e\xad\x11\x8a\x3f\x28\x8d\x7e\x34\x87\xbb\xca\x65\x32\x5f\xec\x44\x56\xf6\x37\xb8\x57\x4f\xea\x3e\x98\xf6\xfb\x2c\x94\xbd\x96\x3a\xa8\x73\x00\x9a\x60\x5e\xce\xcb\xf3\x12\x6d\x01\x8c\x4c\x1f\xec\xec\xbf\xfb\x11\x0e\xa1\x1e\xc8\x35\x0f\x07\xc0\x02\x55\x00\x07\x74\xe4\x83\xb6\x93\xdc\x98\xcd\x99\xb7\x37\x39\x7a\x7d\x36\xf4\xde\x10\x1a\xf4\xdc\x57\x30\x23\x34\x00\x46\x31\x70\x76\x07\xd7\x4b\x20\xe9\x8f\x89\xe9\x04\xdd\xe0\x65\x7b\xf9\x1b\x99\xc1\x5e\xac\x53\x30\x21\x0d\x20\xab\xfc\xbd\x5e\x2a\x4f\x8a\x8d\x5e\x95\x05\x49\xb1\x83\x6b\x28\x7a\x6f\x79\xee\x9d\xbc\x56\x60\x64\x48\x95\xfa\x63\x15\xd6\x7b\xc6\xbc\x6c\xcc\x1d\x0c\x20\xf9\x14\x42\x82\x43\xec\xa7\xf0\x29\xc3\x7c\xd9\xaf\xec\x3a\xe6\xec\x96\x04\x38\x10\x82\x24\xf8\x53\x86\xa9\x8f\x9d\x4e\xf2\x29\x4c\x52\x19\xba\xa7\x4e\xe7\x62\x78\x36\x3c\x9e\x40\xd1\xa7\x12\x49\xcf\x9b\xf3\xf1\x3b\x28\x92\x79\xa7\xf3\xaf\x5f\x87\xe7\xc3\xf5\x7d\xc0\x21\xec\xfd\xe2\x74\xa6\x22\xdd\x10\x5b\xc8\x73\xef\x8c\xcd\x7b\x8a\xf5\xda\x4e\x5c\xc7\xe9\x88\xda\xdf\x67\xa1\x55\x03\x75\xc4\x51\xbd\x3a\x84\xe0\xda\xfb\xa7\x90\xfc\x9c\xdd\x35\x4d\x97\x06\x8d\x05\x31\x67\x77\xde\x85\x8f\x68\xaf\x68\x91\xe5\xb9\xfb\x0f\xc0\x55\x83\x96\xc4\x87\x87\x10\xcf\xef\xbd\x21\xe7\x23\x76\xce\xee\x12\x3d\x66\xac\x94\x92\xb0\x0f\x75\xed\x08\x49\x96\x3b\xeb\xa4\x58\x18\xbc\x53\x53\xbe\x88\x5d\xe5\x7d\x99\xae\xb4\x9f\x5a\xac\xdb\xfe\xeb\xa5\xe7\x79\xc6\x01\x50\x69\xfe\x09\x64\x94\x7c\xca\x14\x82\x15\x26\x51\xb4\x29\x5b\x2e\x66\xf6\x48\x70\x2f\x1b\xb4\xb2\x3d\x6a\xfa\x99\xa1\x6a\x95\x06\xf7\xa6\xa9\x2a\x09\xcb\x56\xaa\x2a\xc4\xac\xae\x67\x98\x54\xfa\x9e\x45\x93\xf3\x88\x06\x5d\x6b\x9a\x2c\xd4\x0a\xde\xfa\x8f\xb2\xb3\x6b\x2f\x21\xb6\x7f\x8b\x78\xb2\xb1\x84\xce\xa5\xd7\xba\xa8\xda\xa3\x5f\x2f\xab\xf2\x89\x9a\xbf\xc6\xd1\xcd\x26\x0b\x2e\x53\x40\x34\x80\x69\x17\x3e\x43\xd1\xf0\x9d\xfe\x90\x4c\xbb\x79\x5e\x82\xc0\x26\xef\x06\x58\x28\xb7\xf6\x6d\xc0\x81\x40\xbe\xe0\xfe\x6e\x81\x39\x36\x3a\x56\x68\x60\x44\x5f\xc7\x83\x52\xfd\x4f\x85\x84\x2a\x87\x8e\xae\x3f\xea\x30\xa1\xae\xae\xd0\x5f\x6a\x80\xa1\x63\x17\x1d\x0d\xa8\xd0\xe9\xe4\x4e\x95\x0c\x73\x5e\x2d\x50\xbe\x0d\x48\x78\x87\xe8\xd2\x20\x42\x84\xe8\x52\x28\x28\x11\x47\x8e\xc0\x67\x34\x20\x29\x61\xb4\xbd\xec\xa9\x10\xc1\x5a\xdf\x4a\xe5\xb5\x1c\x73\x72\x8b\x69\x29\x4d\xe9\x0f\x52\xf8\x4d\x0f\x28\xe5\x56\xc9\x52\x5f\x75\x67\x12\xcf\xf3\xc0\xce\x9b\x44\x61\x52\xeb\x1a\xc2\xd6\xae\x18\x58\xa3\x4e\xe7\x65\x1d\x66\x0a\x3f\x59\x1b\x6e\xf2\x13\xb3\x2d\xd7\x11\x09\x15\xbb\x4b\x4c\x99\x5d\x38\x45\x1d\xad\x8a\x79\xb6\xb9\x5b\xe1\xeb\x8a\x29\x5b\x55\x51\x2d\xc0\x33\xcc\x25\x67\xef\x38\x64\x09\xee\xc9\x95\x66\x4c\x7f\x1b\xe1\xfb\xb4\x27\x55\x56\xe3\x9f\x26\xb8\x2a\xaf\x4b\xb6\x87\xe2\x8e\x72\xb9\x06\x87\xeb\x58\xd2\xd5\xfb\x9b\x74\xb8\xce\xda\x26\xc4\x57\x21\xc6\x15\x83\x43\x40\x71\x8c\x69\xd0\x13\x63\x6b\xce\xe7\xea\xdd\x92\x99\x12\x74\xc8\x79\xcf\x6d\xd4\x4e\x49\xa2\x83\xfc\x60\x00\x98\x26\x19\xc7\x70\x87\x0b\x42\x44\x41\xb6\xc3\x01\x71\x8e\x96\x92\x86\xa3\x74\x21\xaa\x96\x05\x92\x90\x00\x77\x0b\x4c\xc5\x0c\x5d\x62\x4a\x10\x0a\x31\xed\x5d\x31\x57\x68\xe1\x67\xbb\xbd\x21\xd3\xff\x8a\xb5\xfe\xec\xf6\x4d\xd3\xa3\x22\x9e\xc2\x91\x97\x41\x8f\x31\xc5\x06\x3c\xf0\x3d\xf2\xd3\x70\x69\xe7\xd5\x2f\x06\x21\x63\x8a\xcb\xa4\xbe\x12\x67\x51\x1d\x6e\x08\xb1\xbf\x04\x36\xbe\x7a\x3c\xdd\x1d\x1e\x6a\xfd\x73\x4b\x00\xdd\x80\x8b\x47\xe5\xd3\xcd\x3e\xbc\x53\x36\xbd\x16\x39\xab\x36\xde\x10\x38\xdb\x37\xf8\x53\x9a\x60\x9e\x0a\x7b\x27\xf2\x17\x20\xa0\xf8\x4e\x2a\x51\x36\xc5\xd2\x05\x6e\xbb\xd9\x70\x5a\x2c\xbc\xd1\x91\x33\x6d\x3a\x75\xa5\x22\xe5\xf0\x94\xc5\x6b\xb9\xeb\x33\xc5\x8d\x76\x44\xa3\x71\x6f\x6b\xb5\x88\xd4\x35\xe6\x38\x46\x5c\x5e\x22\x45\xe6\x76\x44\xba\x81\xd3\xb9\xf2\xfb\x70\x45\xfa\x70\x25\x9f\x62\x58\x62\x5c\x84\xc4\xc7\xbd\xba\x16\x89\x2b\x20\xce\x31\x6e\xa5\x55\xfe\x34\xb7\x3a\x1d\x5d\x0c\xcf\x27\x70\x3a\x9a\x8c\x8d\x2b\x41\x4f\x38\x91\xf2\xf4\xc4\xfb\x8d\x11\xda\x13\x52\x8a\x6c\xde\x85\x9f\x60\xea\x3a\x9d\xdf\x8f\xce\x2e\x87\x17\x75\x84\xa4\x4a\x78\x3e\x9c\x5c\x9e\x8f\x4e\x47\x6f\x2b\x9e\xdb\x9c\xdf\x5e\xdd\x6a\xa7\x2c\xca\x9c\xf2\x52\x6b\x6b\x56\xab\xe7\x75\x76\xaa\x6f\x77\x2f\x4b\xdb\x77\xa5\xcb\x38\x40\xa9\x0c\x1d\x99\xfc\x25\xc3\xe5\x3d\x49\x52\x42\xe7\xda\xa1\x5e\xc2\x9d\x2e\xf5\xe2\xd5\x90\x21\xca\xe1\x69\xa5\xa7\xa0\x7b\xca\x5a\xea\x47\x39\xd2\xee\xed\x99\x19\xc1\x61\x20\xad\xa1\xd6\x1d\x94\x2b\xcc\x08\x4f\x52\xf0\x17\xd8\xbf\x11\xa8\x7c\x87\x61\x81\x6e\xd5\xc5\xad\xe5\x13\xd2\x42\xaa\xeb\xd7\x5e\xce\xf4\xed\xa7\x14\x53\xdb\xa9\xd6\xfb\x37\x51\x96\xa4\x70\x6d\x1c\x5f\x18\xbd\xce\x7c\x02\x46\x7f\x4c\x8b\x63\xdc\x90\x23\xc0\x21\x4e\x71\x4f\xed\xad\xbf\xce\x56\x6f\xca\x42\x0e\x48\x04\x20\x24\x0f\x22\x46\xc1\xf0\x17\x0b\x22\x34\xd6\x58\x9e\x7f\xf9\xfe\xe4\x68\x32\x2c\x5d\xfe\x62\x38\x91\xde\xec\x74\x3a\x5b\x1c\x1f\x0e\xeb\x89\xd6\x9c\x7e\x6b\xa7\xab\x16\x12\xa6\x5a\x56\x9c\x66\x71\x21\xed\x2d\x0a\x33\x2c\x4f\x5d\xa7\xa7\x1f\xec\xd6\xee\x6a\xed\x14\xf3\x12\x03\x1a\xa0\x45\xf1\xd3\xf0\x22\x92\xce\x8c\xda\x40\xbc\x5b\x15\x6d\x31\x7b\x3c\xe6\x3c\x53\x0e\xf0\x0d\x40\xd7\xc1\x76\xf8\x32\xdd\xb4\x02\xc3\xbe\x56\x3f\xed\xe0\x2f\xd1\x53\x33\x78\xfb\x40\x87\x0c\x8a\x8e\x57\x13\xf5\x2e\x00\xfc\x98\x46\xd8\x97\x00\x6f\x91\x10\xdd\xe0\x65\x22\x3e\x52\x8c\x03\xe9\x9b\xe5\x39\x58\x77\x31\x0a\x95\xeb\x2e\xe5\x1f\x01\xcf\x0d\x33\x6b\x91\xb9\x63\xb5\x91\x6a\x41\x5a\xc8\xdb\x2c\x67\x0d\x6a\xd7\x2c\xdd\x75\x37\xd6\xf9\x02\x24\x5f\xad\x44\xf1\xab\x6d\xce\xa8\xfd\xc5\x71\x1d\x14\xc5\xb4\xb1\x6f\x59\x10\x3c\x08\xf0\x15\xd4\x2d\x40\xbe\x8a\xee\xb9\x75\x04\x96\xfa\x35\xb9\x09\x09\xea\xef\x7e\x83\xed\x54\x4e\xa1\xd3\x34\xf7\xff\x2a\x6c\xec\x56\x39\x7e\x9d\x8e\xeb\xc1\xf6\xe0\x51\xf4\x5d\xb5\x4f\x56\x3a\xaf\x42\xf1\x6b\x3d\xcf\x16\x83\x86\xc1\xe5\x77\x46\x86\xca\x53\xd3\x2d\x3d\x58\x6b\x2b\x8f\xc4\xe4\xf6\x5a\xb3\x4f\x80\x9e\x86\xb2\x33\xc4\xb4\xa7\xa4\x72\xbf\x0d\x14\xaa\x74\x7b\xc4\xf8\x13\x30\x08\xa0\x19\x84\xcc\xd8\x06\x6a\x54\xba\x40\xcf\x08\x2d\x85\x4c\xdb\x5b\xd6\xd6\xcc\x16\x5a\xd6\x82\xc1\x37\xd0\xb4\xae\xa0\x5b\xb9\x93\x22\x05\xfe\xde\xb9\x7e\x16\x94\xdb\x40\xe1\x13\x95\xe2\xb8\xaf\x40\x25\x3b\x3a\x7b\xcf\x12\x42\xe7\x32\x81\xaf\x64\xed\xed\xc2\xef\x49\x21\x81\xdd\xd5\x9b\x71\x16\xd5\x76\xf5\x14\xf4\x6a\xf9\x77\x79\x15\x62\x5e\xb8\x35\x22\xda\xc9\xf0\x6c\x38\x19\x42\xa5\xe5\x0c\xcd\x65\xee\xf6\x0b\xdc\xca\x83\x8e\x8a\xdf\x0b\x73\xb9\xea\x2b\x1f\x0b\xae\xbd\xe1\x3d\xf6\x1b\x66\x3e\xed\xb1\xc6\xa3\x8a\xca\xb5\x7a\xf2\xe5\x6d\xcf\x94\x8f\x15\x03\xfc\x5e\x3e\x3e\xef\x93\x8c\x42\xd7\x8f\x2b\x39\x9b\xa8\x1f\xf5\xcc\x62\xdd\xbf\xf4\xb9\xee\xe4\x66\x35\x05\xc7\x6e\xcf\x24\x1e\x70\xad\x0a\xf9\x4b\x7b\xd7\x4b\x67\xda\xea\x34\x8b\x4c\x5b\x1f\xc7\xd7\xcd\xb4\x4b\x91\x2a\xf2\x58\xc0\xff\x63\x93\x60\xb6\x85\x7e\xe9\xc3\x87\x75\x53\xfd\x82\x4b\xcb\x2d\xc6\xfc\x94\x47\x0c\x5b\xec\xb7\x24\x6c\xba\xe3\x58\xbb\x29\x7c\xd9\x96\x60\x71\x39\x98\xc5\xfa\x8e\xce\x82\xf3\x56\xdf\x96\x1e\x54\x2a\x39\xb9\xf8\xfa\xa3\xfd\xfa\x5b\x0d\xaf\xa8\xe2\x1e\x7f\x3f\xd8\x07\xe4\x5b\x06\xb6\xe5\xba\xf0\xf9\xea\xb1\x9f\xa5\x61\x0c\x06\x10\xe0\x14\xf3\x88\x50\x0c\x4c\xfa\xc5\x2c\x24\x7e\xaa\x05\x72\x54\x32\xaf\x94\x7f\x64\xcb\xa8\x8c\x4a\x8b\x7d\x58\x59\x56\xed\xfc\x84\xe9\x7b\x20\x65\x4b\x15\x16\xc2\xc0\xc7\xa0\x2b\xbd\xa2\xc0\xdb\x76\x6b\x28\xca\x3b\x18\xfe\xfb\xf8\xec\xf2\x64\x78\xe2\x35\x11\x1b\x02\x3d\x6b\x2a\xe0\x52\xfd\x6b\x95\x87\x64\x1d\xb1\x74\xa1\x5e\xdf\xd7\x08\xdb\x4c\x5f\x2e\x50\x73\x2b\x68\xfd\x7b\x5a\x42\x6f\x51\x48\x02\x63\xc5\x92\x73\xd7\xaa\x17\xca\xcc\x11\xc0\x82\x81\x27\x5d\xb1\xaa\x3a\x76\xfa\xc8\x7b\x56\x49\x0d\x30\x1d\x8f\xe0\x78\x3c\x7a\x73\x76\x7a\x3c\x81\xde\xfa\x8d\x92\x26\xaa\xe8\xa5\xa8\x98\x01\x1a\x2a\x66\x80\x87\x2e\x6a\xab\xf9\xeb\x6e\xed\xb0\x1d\x6f\x6d\xf7\xf7\xd5\xef\xcd\x82\x72\xe7\xd6\xd6\x4b\x42\x9f\x75\x1b\xb2\x89\x7f\x22\x8f\xd5\x29\xed\xf7\x34\xd6\xd0\x86\x24\x49\xab\xab\x3c\xfc\x3f\x7b\x30\x18\xff\xf8\x5b\x94\x7a\xea\xe7\xc6\xfb\x2f\x78\x1e\x02\xf0\x3d\x30\xfc\xb5\x03\x83\x3c\x85\x6f\x2c\x32\x6c\x78\x9a\xa8\xd1\xbe\x47\x87\xba\x8b\x8f\xff\x05\x00\x00\xff\xff\x98\xae\x8a\x5f\x8a\x48\x00\x00")

func templatesModelGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGoTpl,
		"templates/model.go.tpl",
	)
}

func templatesModelGoTpl() (*asset, error) {
	bytes, err := templatesModelGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.go.tpl", size: 18570, mode: os.FileMode(420), modTime: time.Unix(1503993316, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModel_testGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x55\xdd\x6e\xa3\x46\x14\xbe\x86\xa7\x38\x45\xee\x0a\x2c\x6b\x50\xbd\x77\x5b\xe5\x62\x13\xbb\x2b\xdf\xd8\xd6\xae\xb7\x52\xa5\x95\xa2\x09\x1c\xc8\xd4\x30\xd0\x99\x21\x71\x4a\x78\xf7\x6a\x06\x0c\x38\x8e\x1b\x57\x35\x6a\x55\xd5\x37\x16\xe7\xf7\xfb\xce\xdf\x94\xa5\x3f\xbe\xd4\xcf\xaf\x2a\x5b\xc7\x83\x9f\xa9\x60\xf4\x2e\x41\x09\xad\xec\x92\x39\xec\xb2\x84\x51\xbe\x8d\xe1\xc3\x15\x90\x2f\xa8\x14\xe3\xb1\x24\x6b\x1a\x6c\x69\x8c\x60\x12\xc2\x48\x69\xad\xd2\x28\x38\x4d\x11\x46\xe4\x4b\x70\x8f\x29\x05\xb2\xd1\xb2\xd6\x8a\x9b\x20\x46\x46\x96\xda\xb0\x51\x04\x5a\xae\xd5\xcf\x10\xd0\x9c\x29\x9a\xb0\xdf\x3b\xe5\x83\xd1\x06\xf0\x0c\x49\xf6\x88\x62\x2f\x4f\x3b\x27\xc9\x78\x5c\x24\xb4\x53\xd5\x2e\xe9\x91\xcb\x83\xa1\x91\x0b\xc6\x15\x38\xef\x1c\x63\xe9\x10\x67\xaf\xcf\x1b\x6d\x4a\xc5\xd3\x1e\xe7\x4d\x96\x14\x29\x97\xad\x89\xa1\x1a\x64\x28\x82\x1e\xcf\x51\x4e\x66\x54\xd1\xcd\x53\xde\xc1\xce\x6a\xc3\x44\x57\x44\x9e\x88\xc6\xc2\x9d\xd4\x66\x8c\x87\xb8\xeb\xac\x16\xcd\x67\x1b\x2a\xd2\x46\x29\xcd\x4d\x58\x37\x35\x04\x22\x70\xbe\x39\xdf\xcb\x6f\x8e\xe3\xc1\x33\xfc\x9a\x31\x0e\xce\x04\x9c\xce\x29\xee\x3b\xa5\xbd\xc2\xea\x00\x18\xb1\x9d\x29\xc8\x91\xf3\xc5\x27\xc8\x4c\xe9\xaa\x10\xb0\x1f\x9a\x61\xe6\x34\x6f\xa2\xef\xe7\xb5\xaa\x6e\x15\x4a\x35\x10\x9f\x75\x16\x67\x90\x52\xb1\x45\x31\x10\x1f\xdf\x87\x4f\xf3\xe5\xfc\xf3\xc7\xcd\x7c\x06\xd7\xbf\xc0\x7a\xf5\x69\x45\x60\xb6\x82\xe5\x6a\x03\xf3\xd9\x62\x43\x06\xa2\x76\x93\x30\xe4\x0a\x22\x1a\xa8\x4c\x3c\x0d\xc4\x2e\x2a\x78\x00\xcd\x51\xa8\xaa\xd9\xb5\xab\x60\xac\xdb\xc5\x78\x4c\x36\x5e\xaf\x89\x64\x76\x0d\xa5\x6d\x05\x19\x8f\x58\x3c\x01\x14\xc2\x2c\x69\xbc\x23\x6b\x2a\x24\x7e\xfd\xbc\x70\x9d\xb2\xec\x9d\xa6\x8f\x61\x28\x50\xea\xe5\x71\x3c\xdb\x62\x91\x71\xf9\xee\x0a\x38\x4b\x74\x20\x4b\x91\x9f\xa8\xa2\x89\x8b\x42\x78\xb6\x55\xd9\xb6\x15\xde\x1d\xc4\xbd\xc9\x38\xc7\x40\xb9\x75\xca\x33\x63\x08\x54\x85\xe0\x10\xde\xd9\x43\x6d\xd0\x06\xa5\x82\x05\x97\x28\xd4\x90\x3d\xd1\x69\xea\x9b\x5c\x55\x75\xb6\x97\xad\xb1\x2d\xdf\x07\x89\xaa\xc8\x41\xdd\x23\xa4\x59\x88\x89\x6d\x99\x3f\x5d\xc2\x5e\xeb\x96\xf8\xe8\x1e\xf4\xd8\xf3\x6c\xe3\x2d\x28\x0f\xb3\x14\x1e\x68\x52\xa0\xb4\xad\xb2\xd4\x92\x18\x8f\xaf\xe4\xad\x6e\xad\x79\x2a\x0e\x9e\x86\xee\xae\x37\x19\x23\xba\x35\xe7\xb8\x19\x82\xde\x0b\x64\x9c\x0f\xae\xb3\x4e\x87\x3c\x34\xb7\xce\x50\x51\xa2\x08\x94\x11\xeb\xf7\xa0\xaa\x7e\x78\x41\xa3\x7e\x6d\xaa\x4a\x77\xfe\x34\xd4\xd7\x91\x56\xd5\x07\x78\xf7\x26\x8b\x89\x0d\x00\xd0\xe1\x32\x23\xd5\xe2\x99\xb6\xe3\x69\x8a\xdc\xe2\x21\x4d\x7f\x3a\xe0\x67\x0e\xab\xef\x03\x95\xda\x95\x65\x5c\xda\x26\xf1\x09\x52\xb5\x19\x99\xff\x56\xd0\xc4\x55\x13\x78\x9b\x09\x8c\x3b\xdc\xe4\x54\x4d\x3c\xbb\xcf\xd6\x00\x0a\x12\xa4\xbc\xc8\x6b\x02\xaf\x70\x9d\x61\x82\x0a\x5d\x53\xcb\x51\xfe\xa7\x18\xbc\x1f\x01\x5f\x2d\x80\xa1\x3f\xe8\x7e\x7e\xcd\x43\xaa\x86\x7a\xe1\x8e\xf6\xb3\xce\xf6\xff\x7e\xfe\xc7\xf6\x13\xe0\xa2\x2d\x98\xfe\xcd\x1e\xfc\x35\x38\x67\x6c\x3f\x5c\x9d\x51\xf2\xe9\x0b\x0c\x6d\xdc\xf7\xa7\xaa\xdd\x6c\xc3\xb8\xdf\x97\xb3\xce\xc5\x3f\x7e\x34\xa7\xfd\xab\xf9\xfe\x5f\x7a\x35\xff\x08\x00\x00\xff\xff\xc7\xda\xfb\x66\xbd\x0e\x00\x00")

func templatesModel_testGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModel_testGoTpl,
		"templates/model_test.go.tpl",
	)
}

func templatesModel_testGoTpl() (*asset, error) {
	bytes, err := templatesModel_testGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model_test.go.tpl", size: 3773, mode: os.FileMode(420), modTime: time.Unix(1502036180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPogoGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x55\x4d\x6f\xe3\x36\x14\x3c\x8b\xbf\x62\x60\x14\xad\xbd\x36\x24\xf4\xba\x40\x0e\x9b\xca\x48\x03\x2c\x6c\x6f\xe2\x14\x28\x82\x00\xa6\xa9\x27\x99\x88\xc4\xa7\x90\x94\x9c\xd4\xf0\x7f\x2f\x28\x7f\x6c\xb2\x45\xba\x97\xc8\x27\x81\x7c\x33\x9c\x37\x9c\x47\xef\x76\xc9\xa7\x8f\xfa\x25\xfb\xbd\x08\x7c\xf8\x4b\x5a\x2d\xd7\x25\x39\x9c\xd7\x3e\xf2\x0c\x21\x3e\x9c\xb2\x93\x3d\x6f\x2c\x16\x52\x3d\xca\x82\x7a\x12\x5e\x1f\xd9\x77\x3b\xc4\xb7\xe4\xbd\x36\x85\x8b\x4f\x47\x86\x82\x5e\xfa\x5a\x70\xc1\xa8\xa4\x7d\x24\xdb\x53\x5f\x49\x82\xab\xe9\x6c\x7a\xf3\x65\x39\x4d\x71\xf9\x37\x16\xf3\xab\x79\x8c\x74\x8e\xd9\x7c\x89\x69\x7a\xbd\x8c\x7b\x6a\x2d\x95\x5e\xae\xa5\x23\x68\xe3\xc9\xe6\x52\x11\xdc\x86\x9b\x32\xc3\x96\xed\x23\xb6\xda\x6f\x90\x1d\x6b\x12\xf7\x54\xc6\xe9\x25\x7e\x7d\xbb\xb2\x7c\xee\xcf\x94\xf4\x12\xda\xc1\x6f\x08\x8a\xab\x8a\xcd\x2b\x99\x39\xdb\xb3\x0e\x70\x4d\x56\x7a\xcd\x26\x14\x4b\x0f\x25\x0d\xd6\x84\xc6\x51\xd6\xf5\x10\xb8\xfc\x4b\x4d\x0e\xb9\xe5\x0a\x4e\x6d\xa8\x92\x58\x75\x31\xea\xbe\xe3\x99\xac\x42\x82\x56\xb1\x48\x92\x50\xbd\xdc\x68\xf7\x73\x2b\xa4\xc9\x7e\x34\x23\x16\xe1\xa0\x4e\xf9\x59\xeb\x4e\x44\xd3\x67\x52\x43\xe7\xad\x36\xc5\x04\x71\x1c\x9f\x37\x77\xfb\x11\x86\x75\xf1\x1c\xff\xc1\x55\x25\x4d\xb6\x94\xc5\x04\x64\x2d\xdb\x91\x88\xbe\x35\x64\x5f\xde\x87\x7d\x0a\xb8\x1b\xde\xba\x1f\x10\x37\xbc\x7d\x17\x74\xc2\x88\xde\xa6\xa5\x59\x97\x5a\x41\x35\xce\x73\xa5\xff\x09\xef\x18\x4a\x2e\x0a\x6d\x8a\x57\x96\xf4\x16\x99\xaf\x5c\xa0\xb6\xdc\xea\x8c\x0e\xc9\x29\xb9\x40\xde\x18\x75\x48\xc3\xfa\x05\x05\x99\x90\x16\xca\xf0\xd4\x90\xd5\xe4\x62\xd1\x4a\xdb\x01\x2f\xba\xca\x77\xbd\xdb\xf5\xec\x19\xd7\x87\x0c\x87\x6c\x37\xb5\x23\xeb\x1d\x86\xcb\x79\x3a\xff\x8c\x4a\x3e\x12\x7c\x08\xa5\x34\x20\xd3\x54\xa3\x9e\x2c\x54\x6c\x9c\xc7\x50\x00\x49\x82\xbb\x4e\x44\xca\x33\xf6\x9b\x70\x7f\x29\xc3\x1c\x3f\x75\x1e\xdc\xb5\xf4\x9b\x83\x84\x62\x93\x97\x5a\x79\x81\xff\x40\x2e\x30\x38\xbc\x63\x7f\x5e\xcf\xae\x06\x6f\x69\xef\xea\x4c\x7a\xc2\x82\x6c\xce\xb6\x0a\x9d\x35\x87\x95\xed\x86\xcc\xff\xd3\x1f\xa1\x07\xf6\xbb\x45\xfa\x65\x39\x1d\x88\x51\xbf\xd7\xb3\xa1\xb2\x26\xdb\x45\x24\xdc\x13\x3c\xc3\x95\x5a\x11\xb8\xb1\xc8\x35\x95\x99\x0b\x09\x67\xdc\x7e\xfb\x8a\xdc\x6a\x32\x59\xf9\x02\x6d\xea\xc6\xf7\xf5\x4f\x9e\x24\xb8\xed\x24\x28\x36\x6d\x97\x97\xa0\x45\x71\xd9\x54\xe6\x28\xc6\x71\x45\x87\xab\x08\xd3\xe0\x9e\x4a\x64\x56\xb7\x64\xbb\x47\xb2\x31\x19\x59\xe7\xa5\xc9\x44\x37\x23\x1d\xd9\xf0\x84\xaf\x64\x7d\x7f\x98\x85\x87\x57\x73\x30\x01\xe7\xb9\x23\x1f\xe8\x47\x18\x2a\xdc\x3f\x9c\x06\x46\xbf\xfa\x6e\x71\xff\xf0\x76\x7a\x44\x64\xf0\xf9\xe2\x84\x1e\xe3\x77\x11\x85\xa4\x2b\x2e\x27\x68\x65\x19\xf6\xac\x34\x05\x9d\xf5\xef\x44\x14\x29\x5c\x40\xd6\x35\x99\x6c\xa8\x26\x58\x0d\x56\x63\xc5\xe5\x78\x35\x58\x8d\x44\x14\xe9\xef\x9b\x7a\x82\xc1\x2f\x83\xb1\xf3\x36\x58\x11\x5f\x7b\x96\x43\x33\x0a\x45\xed\xf7\xa2\xb6\x3b\x28\x2c\x9a\xf1\x58\x44\x7b\x11\x59\xf2\x8d\x35\x50\x13\xe8\x09\x5a\xb1\x17\xff\x06\x00\x00\xff\xff\x69\xd0\xc1\x1a\xd1\x09\x00\x00")

func templatesPogoGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPogoGoTpl,
		"templates/pogo.go.tpl",
	)
}

func templatesPogoGoTpl() (*asset, error) {
	bytes, err := templatesPogoGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/pogo.go.tpl", size: 2513, mode: os.FileMode(420), modTime: time.Unix(1503978090, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/enum.go.tpl": templatesEnumGoTpl,
	"templates/model-many-to-many.go.tpl": templatesModelManyToManyGoTpl,
	"templates/model.go.tpl": templatesModelGoTpl,
	"templates/model_test.go.tpl": templatesModel_testGoTpl,
	"templates/pogo.go.tpl": templatesPogoGoTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"enum.go.tpl": &bintree{templatesEnumGoTpl, map[string]*bintree{}},
		"model-many-to-many.go.tpl": &bintree{templatesModelManyToManyGoTpl, map[string]*bintree{}},
		"model.go.tpl": &bintree{templatesModelGoTpl, map[string]*bintree{}},
		"model_test.go.tpl": &bintree{templatesModel_testGoTpl, map[string]*bintree{}},
		"pogo.go.tpl": &bintree{templatesPogoGoTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

