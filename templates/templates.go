// Code generated by go-bindata.
// sources:
// templates/codec.go.tpl
// templates/enum.go.tpl
// templates/model-many-to-many.go.tpl
// templates/model.go.tpl
// templates/model_test.go.tpl
// templates/pogo.go.tpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesCodecGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x91\x31\x6f\xc2\x30\x10\x85\x67\xfc\x2b\xae\x0c\x15\x89\x2a\x67\xaf\xc4\xd0\x2a\x29\x62\x21\xa8\x40\xa5\x8e\x26\x36\xee\x09\x62\xa3\x8b\x3d\x45\xfc\xf7\xca\x4e\xa0\xed\xd0\x0d\x67\x88\x14\x3f\xdf\xfb\xde\xcb\xf5\x7d\x91\xdf\xeb\x29\x2e\x17\x16\xfc\xe0\x43\x10\x8a\xfd\x49\x75\x70\x3b\xbb\x27\x83\xb1\xbb\x5b\xc6\xd8\xb5\x27\x58\x8b\xe6\x28\xb4\x4a\x14\xfc\x3c\xba\xf7\x3d\xf0\x8d\x72\x0e\x8d\xee\xf8\x15\x19\x2e\x24\xe9\xb5\x6c\xcf\x96\x5c\xaa\x65\x60\x74\x07\xef\x51\xc2\x54\xa3\xfb\xf2\x7b\xde\xd8\xb6\xe8\x84\xb3\x84\x85\xb6\x3c\x48\xd3\x44\xdd\xd6\x56\x5b\x68\x05\x1d\x15\x25\xea\x57\x14\xb0\xa8\x56\xd5\xfb\xcb\xb6\x2a\xe1\xf5\x13\xd6\xf5\xa2\xe6\x50\xd6\xb0\xaa\xb7\x50\x95\xcb\x2d\x4f\x54\x6d\xf8\x81\x7c\xb7\x5b\x96\xe9\xaa\x95\xaa\xb1\x52\x45\x46\x7c\x39\x0b\x9d\x23\x34\x9a\x1d\xbc\x69\x7e\xc9\x33\x94\x71\xc7\x31\x4f\x06\xf9\x70\x0b\x7a\x36\x09\x8b\x7f\x9e\x03\x4a\xbe\x89\x67\xb3\x8c\x4d\x48\x39\x4f\x06\x1e\x3d\x4a\x36\x80\x2a\x73\x03\x8d\xa3\xce\x46\xe4\x00\xfa\x91\x03\x68\x74\xcf\x20\xbf\x21\x03\x09\x0f\x80\x12\xe6\x73\x30\x78\x0a\xdf\x57\x8c\xc1\x13\x9b\x5c\x58\x8c\xf2\x04\x8a\x28\xe4\x89\x93\x6f\x64\xdb\x31\x55\x8e\x32\x8b\x16\x41\x7f\xf8\xdf\xe3\x4f\xf4\xef\x00\x00\x00\xff\xff\x93\x91\x27\x04\x1f\x05\x00\x00")

func templatesCodecGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCodecGoTpl,
		"templates/codec.go.tpl",
	)
}

func templatesCodecGoTpl() (*asset, error) {
	bytes, err := templatesCodecGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/codec.go.tpl", size: 1311, mode: os.FileMode(420), modTime: time.Unix(1503997588, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesEnumGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x94\x4f\x6b\xdb\x40\x10\xc5\xcf\xd6\xa7\x78\x84\x40\xa4\x60\x56\xf7\x42\x0e\x4d\x2d\x42\xa0\xd8\xa6\x31\x81\x52\x4a\xbd\x96\x47\xca\x12\x69\x57\x9d\x95\x52\x5c\x79\xbf\x7b\xd1\x9f\x28\x3a\x04\xd2\x82\x55\x88\x4f\x46\x33\xfb\x66\xe6\x37\x6f\xb7\xae\xc3\xcb\x53\xfd\x42\xe7\xbc\x46\x0f\xf7\x92\x95\xdc\x65\x64\x31\x7c\x3b\x65\x0d\xaf\xae\x71\x4e\x1a\x1f\xae\x20\x22\x5d\xe5\x62\x29\x73\x42\x5b\x08\xe7\x79\xf3\xb9\x89\x1e\x61\x95\x4e\xab\x4c\xf2\x10\x7a\x7a\x25\x76\x44\x66\x7e\x51\x9b\x73\xf2\x46\x5b\x18\xab\x8a\xb1\x96\xf1\xa3\x4c\x69\x22\x1c\x45\xaf\x4e\xba\xca\x27\x1a\x62\x6d\x52\x83\x5c\xf2\x23\xf1\x44\x43\x84\x21\x6e\xa2\x65\xf4\xe5\xe3\x26\x5a\xe0\xfa\x2b\xd6\xab\x9b\x95\xc0\x62\x85\xe5\x6a\x83\x68\x71\xbb\x11\x13\xee\xa7\x21\x87\xf2\x50\x4c\xb5\xa1\x30\x44\xe7\x4d\xe7\xa0\x2c\xca\x07\xc2\xb6\x37\xb1\x73\xdb\x51\xf9\x84\x4d\xde\x86\xc4\x5d\xfc\x40\xb9\x7c\xb6\xf6\x56\x78\x6d\x7c\x50\xb1\x25\x2b\x9d\xbe\x63\x24\xb1\xd1\xb6\x84\xef\xa1\x99\x89\xa5\x4e\xa9\xbf\xcc\xf7\x32\xab\xc8\x36\xf7\x71\x36\xc2\xd6\x20\xf9\x2c\x77\x94\xe1\x88\x58\x16\xaa\x94\x99\xfa\x4d\x23\x9e\x17\x2f\x19\xce\x5d\x0c\xe7\x84\x37\x7b\x5b\xe2\x6a\x48\xf7\xcf\xc6\x32\x67\x41\xd7\x1e\xe9\x7d\xd3\x4f\x30\x11\xee\x3b\x59\x2a\x9b\x1c\xda\x31\xec\xcf\x2c\xdc\xb3\x7a\x22\xee\x40\x30\x94\x2e\x89\x13\x19\x4f\xe8\xcd\xb6\x12\x6c\xdb\x86\x22\xfb\x66\x23\x89\xe1\x11\xe0\xa4\xd2\x31\xfc\xfe\x81\x75\x6e\x88\x04\x9d\xae\x1f\xc0\x1f\x0b\xcd\x41\xcc\x86\x03\xd4\xde\x8c\xa9\xac\x58\xf7\x66\x7e\x91\x08\xe6\xd0\x2a\xf3\xa6\x7a\x91\xc7\xbc\x8b\xb4\xf1\xb8\x15\x91\x8e\xcd\x9e\xae\x95\x96\x7c\xf8\x1f\xc8\xff\xa1\x87\xbf\xa5\x3d\x3e\xee\xff\xc0\x65\x27\x2b\x3e\x19\xad\x6f\x75\x62\xe6\xd8\xe1\xdb\xf7\xdd\xa1\xa4\x00\x7e\xf7\xe7\x95\x55\xc8\xa2\x20\xbd\xf7\x77\xf3\x3e\x77\xb4\x14\x21\xc4\xf3\x62\xfe\x04\x00\x00\xff\xff\x80\x49\x16\x71\x36\x08\x00\x00")

func templatesEnumGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesEnumGoTpl,
		"templates/enum.go.tpl",
	)
}

func templatesEnumGoTpl() (*asset, error) {
	bytes, err := templatesEnumGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/enum.go.tpl", size: 2102, mode: os.FileMode(420), modTime: time.Unix(1511199766, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelManyToManyGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\x51\x73\xdb\x36\x12\x7e\x96\x7e\xc5\x9e\xc6\x4d\x24\x57\xa1\xee\xd9\x37\x7e\x70\x62\x26\x55\x2f\x95\x7d\xb6\xdc\x9b\x9b\x34\x63\x41\xe4\x4a\x42\x4d\x02\x0c\x00\x4a\xd6\x29\xfc\xef\x9d\x05\x40\x8a\xb2\x25\xa7\x4d\xcc\x4c\xf5\x22\x12\x5c\x2c\x16\xbb\xfb\x7d\xbb\xc0\x66\x33\x38\x7e\xae\xdf\xa0\x28\xda\xa4\x0f\x7e\x65\x8a\xb3\x69\x82\x1a\xaa\xb1\xe7\x5c\xa3\xbd\xd9\xc0\x51\x76\x37\x87\x93\x53\x08\xae\xd1\x18\x2e\xe6\x3a\xb8\x64\xd1\x1d\x9b\x23\xd8\x05\xe1\xc8\xd0\x57\x43\x56\x08\x96\x22\x04\xd7\xd1\x02\x53\x06\xc1\x98\x86\x2a\x21\x61\x75\xd8\xb1\x60\x44\x72\xfe\x43\x44\xe3\x29\xcb\xa0\xab\xb3\x84\x1b\xe8\xdc\x76\x48\xba\x07\x69\xc4\x32\x6e\x58\xc2\xff\x8f\xf0\x19\x7e\x97\x5c\x40\xa7\x53\xcd\x5a\xd2\xb4\xa3\x08\x3e\x43\x22\x57\xa8\xca\xf1\xf4\xa0\x36\xcd\xc5\x3c\x4f\x98\x7a\xac\x2b\x75\xba\xd2\x87\xba\x22\x49\xe3\x91\x4c\x68\x5b\xba\xb4\xfd\x8d\x4c\xf2\x54\xe8\x52\x88\xc7\xf7\x9a\xc4\xb8\x88\xf1\x7e\x2b\x35\xf4\xaf\x95\xaa\x59\x69\x18\xa9\xed\xa6\x99\xe2\xc2\xcc\xa0\xf3\x5b\xe7\x07\xfd\x5b\xa7\xd3\xab\xac\xea\xc3\x76\x8f\x72\x5e\x9f\x54\xf7\x07\x29\xc0\x19\xbf\x87\xce\x8b\x48\x26\x3a\xd8\xaf\x60\x76\x97\x31\xc5\x52\x6b\x5f\xf5\xbc\x3f\x3c\xb3\xbb\xd5\x02\x15\x3a\x49\xf7\xe8\x77\xf2\x56\x2a\xe4\x73\xf1\x6f\x5c\xeb\xad\xb0\x57\xb9\xe3\x98\xbd\x82\x09\xd7\xa6\xda\x04\xcd\x4b\x23\x96\xe2\x4e\x4c\xbd\xc1\xcf\x9e\xbb\x16\x1f\x17\xb9\x82\x32\x5d\x9b\x41\x48\xe6\xb5\xfb\xac\x6c\x6c\x27\x97\x72\x2e\x21\x65\xea\x0e\x55\x43\x3b\x19\x0c\xe0\x5d\x38\x0a\xaf\xce\xc6\xe1\x39\xbc\xfe\x1f\x5c\x5e\xbc\xbb\x08\xe0\xfc\x02\x46\x17\x63\x08\xcf\x87\xe3\xa0\xa1\xad\x85\x4a\x49\xd5\x14\x83\x0d\x06\xa4\xdf\x71\x43\x51\x8c\xa4\x79\x2b\x73\x11\x83\x42\x93\x2b\x81\x31\xf0\x19\x98\x85\x0b\x5f\x4a\xe1\x03\xae\x41\x48\x03\x33\x12\x6b\x2f\x99\xda\x3b\xfd\x14\xd0\x1a\x1d\x8c\x70\xd5\xed\x6c\x27\x57\x33\x3b\xbd\x86\x9c\x75\x96\x24\xd6\xe0\xc8\xf3\x10\x17\x20\x73\xe5\xf8\xb7\x39\x17\xd6\x56\x9b\x38\xce\x2f\x8a\x49\xdb\xac\xb3\xad\x21\xda\xa8\x3c\x32\xb0\x69\x03\x39\x53\x31\x31\xc7\xc7\x9c\x59\xd5\x8b\x48\xa2\x8a\x10\x8e\x2a\x3a\x3a\x67\x86\x8d\x49\x5f\x51\x38\x0d\xae\x4a\x7c\x86\x1a\xed\x15\x05\x1c\x97\xab\xc3\xe4\x77\x2d\xc5\x49\xa7\x92\x2c\x8a\xbe\x4c\xb9\xc1\x34\x33\xeb\xce\x84\x34\xf0\x19\x04\x6f\x64\x9a\xa2\xa0\x09\x83\x81\xd5\xba\x1d\xd8\x6c\x00\x45\x5c\x7f\x68\x37\x05\xde\xf1\x82\x6b\x88\xa4\x30\x8c\x0b\x6d\xe3\x35\x4b\x72\xb2\xc2\x92\x32\x1a\x54\xe5\xd7\x26\xd1\x5d\x66\x71\xb9\xf8\xd9\xe5\xd0\x85\xb0\xfa\x50\xc5\xb0\x55\x46\xf5\xd8\x3f\x34\xe6\x9a\x9f\x30\xc9\x50\x81\x91\x10\x29\x64\x06\x6d\x72\x6f\x0d\x6c\xce\x1b\x23\x5c\xd5\x72\xd9\x3a\x63\x96\x8b\x88\xc6\xbb\x3d\x97\x67\xd6\x27\x9b\x76\xcb\x91\x05\xbc\x28\xc7\x36\x2f\xbc\x57\x36\x0d\xe6\xcc\x3b\x14\xa8\xc8\x21\xc8\xa2\x05\xc8\x59\xdd\x31\x29\x9a\x85\x8c\x35\xcc\xa4\xaa\x0f\x6f\xb3\x89\x3c\x67\x7f\x0f\x72\x90\x6b\x58\xa2\x5a\x43\x8a\x5a\xaf\x41\xf1\xf9\xc2\x80\x90\x2b\x98\x62\xc4\x72\x8d\xb0\x42\x58\xb0\x25\x82\x96\x29\x42\x94\x6b\x23\x53\x60\x51\x84\x5a\x13\x43\xef\xe8\xa3\xb5\xf3\x9c\xc7\x01\x7c\xcb\x6f\xab\xef\x79\x7e\x5b\x7d\xa3\x8b\x71\x78\xe2\x76\xbd\x92\x79\x12\x43\xa6\xe4\x94\x4d\x93\x35\x4c\x11\xa6\x68\xc8\x4d\x5a\x26\x4b\x8c\x81\x19\xc8\xe6\xf7\x90\xe0\x12\x93\x3e\x4c\x73\x03\x43\xd0\x19\x79\xb4\xbe\x5f\x46\x59\x2a\x21\x91\x62\x0e\x46\xad\x39\xfd\x49\x98\xa3\x01\xb3\x60\x06\x56\x52\xdd\xd1\xd8\x8a\x9b\x05\xe8\x88\x09\x41\x6f\x82\x27\x70\x6c\xdd\x74\x73\x33\x3c\xaf\xeb\x7b\x2b\x95\xc9\x05\x33\x98\xac\xfb\x60\x5c\x70\xc4\x4b\x03\x0c\xa6\x7c\x0e\x31\x32\x32\xc5\x87\x85\x62\x4c\x21\x8d\x98\x00\x85\x29\xe3\x02\x74\x93\x8c\x7f\x98\xc0\xdb\x9b\xcd\x2b\x38\x12\xb9\xed\xe6\x1f\x33\xf4\xab\x4a\x22\xda\x95\xf0\x4d\x5f\xf5\x3d\xae\x55\x81\x32\xc1\xf6\x55\x03\x9a\xe0\xa9\x4b\xe4\x96\xa2\xd0\x68\xeb\x8f\x49\x8d\xf9\x27\x0e\xba\xdd\x6d\x21\xae\xf0\xdb\xdb\xce\xb5\x9f\x45\x64\x41\xbd\xb1\x26\xd0\xe7\x1d\xa4\x57\x0a\x02\x8f\xf0\x60\xbb\xf2\x29\xcd\x8a\x31\x92\x31\xba\x43\x11\xe9\x72\x5a\x2a\x8a\xa8\xe6\xb7\x7d\x43\x85\x66\xab\xc0\xc9\xec\xb1\x9e\x2a\x95\x46\xf3\xd4\x26\xea\x8a\xba\x3d\xa8\x6d\xe5\xb8\xb6\x97\x4d\xdd\x10\x14\x35\x53\xd3\xa5\x9d\xec\xcd\xb5\xed\xb9\xaf\x79\xcd\xb0\xd7\x30\xcd\x12\xb4\x85\x96\x76\xfb\x0b\x53\x7a\xc1\x12\x54\xf0\x02\x6e\x44\x5a\xbd\x71\x61\x50\xcd\x58\xd4\xd8\xf9\x75\x30\x28\xd7\xfe\xf9\xfa\x62\x04\x7e\xe5\x6d\x08\x9c\xa3\x27\x64\x88\x04\x12\x79\x2a\x06\x35\x4d\x14\x82\x0f\x1f\xa7\x6b\x83\x7d\xd7\x09\xd6\x7d\x4f\x8d\x49\xe0\x85\xbb\x8f\x32\xaa\xe7\x53\xa3\xf2\x83\xb5\x2c\x17\x95\x6d\x34\x9d\x98\x85\xd5\x2d\x7c\xca\xae\x1d\x4d\xdd\x98\x19\x06\xce\xb6\x9e\xb3\xed\xa1\x69\x95\xbc\x95\xed\xc3\x7e\x13\xbf\x43\x5a\x5c\x1b\xc5\xc5\xbc\x9e\x07\x0d\xa5\xc1\x13\xce\x73\x36\x74\x7b\xd4\xfb\x10\x61\x6f\x7d\xb5\x6d\xeb\x3b\x8d\xf9\xe3\x52\xf1\x25\xd5\xf8\x45\xd5\x05\x51\x3d\x61\xbe\xc7\x17\x52\xbc\xa2\x02\xf2\x7d\x7b\xfd\x27\x2c\x70\x8e\x9c\xa3\xf1\x05\x61\xbf\x4b\x53\x96\x7d\x70\xde\xfc\x58\x05\x76\x53\xd8\x93\x41\xb9\x13\x7b\x25\x70\x87\xdd\xfd\xa2\xbd\x2f\x9e\x21\x22\x99\x1c\xa8\x40\xf6\xf8\xc0\x67\x8f\x93\x3a\x28\xe7\x15\x05\xfc\xe3\xd4\x16\x66\xb2\xa8\xb2\xe9\x43\xfd\x28\xd1\xf9\xe8\xe8\xfe\xa0\x8a\x36\x40\xed\xdc\x00\xd0\x06\x4f\xef\xd0\x74\xc3\x9c\xc9\xb9\x0c\x8e\xc6\x67\xaf\xdf\x87\xc1\x5b\x2e\xe2\x6e\xef\x04\x66\x5c\xc4\x20\x05\x82\xa2\x5e\x6e\x0d\xdc\xbc\xd4\x90\x29\x9e\x32\xb5\x86\x3b\x5c\x37\x97\x2c\x64\xc1\x2e\x53\xb9\xf5\x35\x94\x37\x45\xe5\x3d\xcf\xa4\x0f\x93\x0e\x7c\x86\xf2\xea\x6b\xf2\x83\x9e\x74\x8a\xc2\xa5\x94\xdd\x48\x3c\x85\xf2\xbe\xb1\x28\x82\xf3\xd7\x7d\xd8\xb9\xc5\xa2\xd4\xea\x56\x69\x56\xe7\xdd\x87\xb9\x52\xbf\x8a\xa2\x06\xa2\x75\xbb\x73\x9e\xf4\xbd\x48\x51\x50\x0a\x6d\x36\x30\xbb\xdb\xa9\xea\xfe\x66\xac\xba\xa5\x6c\xd5\x6a\x65\x6b\x30\x00\xfd\x29\x01\x8d\x09\x46\x06\x3e\xe5\xa8\xd6\xfd\x1d\x4f\x67\x4a\x2e\x79\x8c\x31\xb9\x41\xe3\xa7\x1c\x45\x84\xed\x96\xfe\x94\x68\xa3\x68\xbd\x49\xbb\x75\x1d\xbe\x0f\xdf\x8c\xa1\xbc\x18\xa4\x25\xde\x5e\x5d\xfc\x02\xe5\x61\xa4\xdd\xfa\xef\x4f\xe1\x55\x08\xf5\x8b\x39\x1a\x9d\xb8\xfe\xc4\xfb\xe7\xbd\x9c\x77\x9d\xda\xd2\x4f\xf6\xb2\xad\x28\x7a\xce\x4c\x95\x0b\x0b\x61\x6b\xa3\x3d\xd0\x59\xd8\x6d\x8f\x2e\xed\x16\x65\xcb\xc9\x29\xc4\xd3\xe0\x3f\x24\x74\x25\x57\xdd\x76\xab\x55\x2a\x6d\xb7\xbe\xec\xd8\x43\x9e\xed\xbb\xc9\xe4\x36\x2b\xd7\x6b\xb7\xf8\x0c\xec\xfd\xa2\x92\xab\xe0\x3a\x62\xa2\x5b\xde\x71\x16\x45\xef\x5f\x80\xbb\x98\xb4\xc2\xa7\xa7\xd4\x96\x07\xa1\x52\x23\x79\x25\x57\xda\x7f\xab\x90\x26\x78\xd2\x87\x7d\xd7\x33\x56\xac\x68\x3f\x14\x45\x02\x6d\x7b\xcf\x71\x8e\x7c\x53\xf4\x49\xe8\xbb\xa0\x76\x28\x34\x2a\x43\xb8\xe5\xf6\x09\x18\x08\x5c\x59\xec\xda\x3e\x84\xa2\xd6\x30\xc7\x0f\xcb\x85\x1f\x35\x41\xb5\xeb\x1d\x8b\x4c\x6f\xec\x7e\x6c\x3e\xa2\xfe\xfd\xf8\x3c\x50\x54\x66\x1c\x93\x58\x03\x13\x74\x36\xc3\x8c\x29\x7b\xd0\x49\xab\x53\xad\xcf\xdc\xdb\xa8\x0f\xb7\xbc\x0f\xb7\x4b\x8f\xd7\xd2\x8a\xeb\x84\x47\xd8\xdd\x57\x8d\x7a\x7d\xf8\x67\x6f\x8b\x56\xef\xe6\xaf\x43\xeb\x70\x74\x1d\x5e\x8d\x61\x38\x1a\x5f\x54\x08\x85\xee\x04\x7e\xf4\x1d\x83\x0e\x7e\x96\x5c\x74\xc9\xca\x4e\x1f\x3a\x3d\xf8\x11\x26\xbd\x76\xeb\xd7\xb3\xf7\x37\xe1\xf5\x3e\x41\xbe\x2b\x78\x15\x8e\x6f\xae\x46\xc3\xd1\xbb\x3a\x21\x00\x1c\x06\xfb\xed\x32\x08\x82\x6f\x02\xf9\x03\x4d\x7f\x0d\x9a\x7f\x47\x44\xdd\x64\x31\x33\x48\x88\xca\xed\x13\x30\x01\x78\xcf\xb5\xa1\x8e\xce\xe1\xea\x7b\xa0\xea\xc6\x2f\xee\x51\xf5\xd5\xd5\xd0\x6f\xe7\x8b\xf5\xf0\x2f\x81\xd0\xa3\xed\xe4\x74\x6f\xff\xe6\xf3\x29\x96\xe2\xa5\x29\x9d\x68\x6f\x96\x1c\xe3\x13\x58\xf4\xd3\x85\x96\x68\x3e\xc6\x04\x0d\x76\xdd\x52\x7d\xd8\xe9\xa8\x5c\x53\xf7\x6a\xa7\x94\xd6\x60\x0f\x9a\xd0\xac\xbf\x08\xf7\x52\xf7\x66\x03\x09\x8a\xfd\x86\xd4\xa0\xef\x81\x51\x43\xf4\xcd\xe5\xf9\xd9\x38\xdc\x42\xf9\x3a\x1c\x5b\x94\x52\xe5\x3b\x0c\x68\x38\xdd\x2f\xf4\x00\xcc\x07\x2a\xf7\x5e\x90\x4f\xbc\x95\x68\xf2\xac\x0e\xe2\x25\x4b\x72\xb4\x81\xfa\x50\x6f\x8a\x37\xc5\x97\xfc\xef\x27\x9e\x02\xcb\x32\x14\x71\xd7\xbd\xf7\x61\x7f\x89\xf6\x4d\xb6\x0f\x47\xeb\xd0\xe4\x92\x23\x0e\x90\x91\x13\x7b\x2e\x42\xaa\x69\x6b\xaa\x5f\xf8\x5b\xb7\x0b\xc7\x87\x08\xee\xdc\x01\xab\x77\x02\x0e\x62\xc0\x2c\xad\xe5\x9a\x08\x8e\xf8\xa5\x8e\xd3\xe7\x27\xb8\xe3\x1a\xc9\x9d\x97\x06\x7c\x23\xc9\xf9\x2d\xfd\x89\xa6\xbf\xba\xc4\xd8\xc5\x74\x24\x85\x36\xe0\x91\x6d\x4b\xf5\x79\xf8\x3e\x1c\x87\xd0\x50\x33\xed\x97\xe5\x33\xb8\xed\xbb\xd4\x8c\xa7\x41\x78\x8f\xd1\x81\x99\x5f\x97\xa4\x7f\x2a\x3f\x1f\xa4\xa6\xcb\xc4\x3f\x02\x00\x00\xff\xff\xc5\x7e\x95\xda\x61\x22\x00\x00")

func templatesModelManyToManyGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelManyToManyGoTpl,
		"templates/model-many-to-many.go.tpl",
	)
}

func templatesModelManyToManyGoTpl() (*asset, error) {
	bytes, err := templatesModelManyToManyGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model-many-to-many.go.tpl", size: 8801, mode: os.FileMode(420), modTime: time.Unix(1508916700, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\x5f\x73\xdb\xb6\xb2\x7f\x26\x3f\xc5\x5e\x8d\x9b\x48\xae\x42\xb7\xaf\xbe\xe3\x87\xc4\x56\x52\x77\x52\x39\xd7\x96\xdb\x7b\x26\xed\x58\x10\x09\x49\x68\x48\x80\x01\x40\xd9\x3a\x8a\xbe\xfb\x19\xfc\x21\x09\x4a\xa4\x62\x3b\xa6\x92\x9e\x89\x5f\x6a\x93\x8b\xc5\x62\xb1\xfb\xc3\xee\x0f\x6c\x56\xab\xa3\xc3\xa7\xfa\x39\x5a\xaf\x7d\xa5\x0f\x7e\x47\x9c\xa0\x49\x8c\x05\x14\xcf\x9e\x72\x0e\x7f\xb5\x82\x83\xf4\xc3\x0c\x8e\x4f\x20\xb8\xc2\x52\x12\x3a\x13\xc1\x3b\x14\x7e\x40\x33\x0c\x7a\x42\x38\x90\xea\xad\x54\x56\x50\x94\x60\x38\x08\xae\xc2\x39\x4e\x10\x04\x23\xf5\xac\x90\xa2\x5a\x89\x7e\x16\x0c\x95\xa0\x7d\x11\xaa\xe7\xea\xf5\x27\x08\x51\x4a\x24\x8a\xc9\xbf\xcb\x97\x0b\xfd\x36\x84\x4f\x10\xb3\x5b\xcc\xf3\xe7\x49\x39\x48\x10\x3a\xcb\x62\x54\xbe\x32\x43\x92\xcd\x21\xa9\x7a\x9c\x72\x92\x20\xbe\xcc\xed\x38\x65\x71\x96\x50\x51\x88\xe8\xa5\x84\x0c\xf3\x10\xa3\x30\xc4\x42\x30\x5e\xae\xe7\x20\x0d\xce\x90\x44\xa3\x65\x5a\x9a\xc7\xcc\x80\x58\xad\x5c\x34\x68\x25\xd1\x9d\x50\x62\x84\x46\xf8\xae\x94\x3a\xb7\x7f\x16\xaa\xa6\x4a\x28\x41\xa9\x56\xdb\x4d\x52\x4e\xa8\x9c\x42\xe7\xcf\xce\x0f\xe2\xcf\x4e\xa7\x07\x9f\xe0\x6f\x46\x28\x74\xfa\xd0\x29\x07\xcd\xdc\x41\x89\xe3\x40\xa5\x00\x4f\xc9\x1d\x74\x9e\x85\x2c\x16\xc1\xb6\x82\x27\x8f\x16\x1d\x91\x17\x19\x87\x3c\x40\xda\x89\xc9\xd4\x6a\xb7\xf1\xd1\xda\x4a\xde\xb1\x19\x83\x04\xf1\x0f\x98\xb7\xb4\x92\xa3\x23\x78\x33\x18\x0e\x2e\x5f\x8e\x06\x67\xf0\xea\x5f\xf0\xee\xe2\xcd\x45\x00\x67\x17\x30\xbc\x18\xc1\xe0\xec\x7c\x14\xb4\xb4\xb4\x01\xe7\x8c\xb7\x85\x19\x47\x47\x4a\xbf\xc9\xd2\xf5\x7a\xc8\xe4\x6b\x96\xd1\x08\x38\x96\x19\xa7\x38\x02\x32\x05\x39\x37\xdb\x97\xa8\xed\x03\x22\x80\x32\x09\x53\x25\xe6\x2f\x10\xaf\x1d\x7e\x02\x58\x1b\x1d\x0c\xf1\x6d\xb7\x53\x0e\x2e\x46\x76\x7a\x2d\x39\xeb\x65\x1c\x6b\x83\x43\x9b\xd6\x84\x02\xcb\xb8\x41\xbc\xf6\x5c\xe8\xcc\x36\x36\x28\xbb\x5e\x8f\x7d\xa9\xc0\x27\x7f\x25\x24\xcf\x42\x09\x2b\x1f\x94\x33\x39\xa2\x33\xbc\x0d\x41\x05\x42\x1b\x58\x73\xe0\xd9\x05\x33\xad\xc1\xc0\xf2\x06\x0c\xc3\x61\x3e\x3b\x8c\xff\x16\x8c\x1e\x77\x0a\xc9\xf5\xba\xcf\x12\x22\x71\x92\xca\x65\x67\xac\x34\x90\x29\x04\xa7\x2c\x49\x30\x55\x03\x8e\x8e\xb4\xd6\xf2\xc1\x6a\x05\x98\x46\xee\x2f\x7e\x5b\xc9\x3b\x9a\x13\x01\x21\xa3\x12\x11\x2a\xf4\x7e\x4d\xe3\x4c\x59\x91\x22\x8e\x12\x2c\x31\xcf\xdf\xb6\x99\xdd\x79\x14\xe7\x93\xbf\x7c\x77\x6e\xb6\xb0\x78\x51\xec\xa1\x97\xef\xea\xa1\xfd\xa5\x35\xd7\xfc\x82\xe3\x14\x73\x90\x0c\x42\x8e\x91\xc4\x3a\xb8\x4b\x03\xdb\xf3\xc6\x10\xdf\x3a\xb1\xac\x9d\x31\xcd\x68\xa8\x9e\x77\x7b\x26\xce\xb4\x4f\x56\xbe\x67\xc0\x02\x9e\xe5\xcf\x56\xcf\xac\x57\x56\x2d\xc6\xcc\x1b\x4c\x31\x57\x0e\xc1\x28\x9c\x03\x9b\xba\x8e\x49\xb0\x9c\xb3\x48\xc0\x94\x71\xf7\x71\x19\x4d\xca\x73\xfa\x67\x23\x06\x89\x80\x05\xe6\x4b\x48\xb0\x10\x4b\xe0\x64\x36\x97\x40\xd9\x2d\x4c\x70\x88\x32\x81\xe1\x16\xc3\x1c\x2d\x30\x08\x96\x60\x08\x33\x21\x59\x02\x79\xed\x21\xaa\xfa\xd4\xdc\x59\x46\xa2\x00\xbe\xe4\xa7\xd4\xf7\x34\x3f\xa5\xbe\xe1\xc5\x68\x70\x6c\x56\x7d\xcb\xb2\x38\x82\x94\xb3\x09\x9a\xc4\x4b\x98\x60\x98\x60\xa9\xdc\x24\x58\xbc\xc0\x11\x20\x09\xe9\xec\x0e\x62\xbc\xc0\x71\x1f\x26\x99\x84\x73\x10\xa9\xf2\xa8\xbb\x5e\xa4\xa2\x94\x41\xcc\xe8\x0c\x24\x5f\x12\xf5\x1f\x06\x33\x2c\x41\xce\x91\x84\x5b\xc6\x3f\xa8\x67\xb7\x44\xce\x41\x84\x88\x52\xf5\x17\x25\x31\x1c\x6a\x37\x5d\x5f\x9f\x9f\xb9\xfa\x5e\x33\x2e\x33\x8a\x24\x8e\x97\x7d\x90\x66\x73\xe8\x73\x09\x08\x26\x64\x06\x11\x46\xca\x14\xbb\x2d\x6a\x8f\xd5\x96\x86\x88\x02\xc7\x09\x22\x14\x44\x9b\x88\xdf\x0c\xe0\xfe\x6a\xf5\x02\x0e\x68\xa6\xcb\xe7\x6d\x84\x7e\x51\x48\x84\x55\x89\x04\xeb\xf7\x9f\x20\x41\xcb\x09\xe6\xa6\x38\x2f\xa4\xa3\x9d\xa5\x6e\x79\x36\xa8\x01\x16\xc8\x68\xa6\x01\x0b\x4b\xa1\xbd\x33\x76\xce\x81\xb1\x49\xe4\x6e\x79\x2c\x17\xd9\xdc\x2b\xc7\xea\xd7\x34\xd4\x29\xbe\xd2\x26\xa8\xd7\x95\xbc\x2f\x14\x04\x36\xdf\x83\x72\xe6\x13\x35\x2a\xc2\x21\x8b\xb0\x69\x4a\x94\x2e\xa3\xa5\x00\x8c\x62\xbc\x6f\xcb\x2b\x2c\x4b\x05\x46\xa6\xc6\x7a\x75\x6e\x09\x2c\x77\x2d\xc2\x55\xd4\xed\x81\xb3\x94\x43\x67\x2d\x2b\xd7\x10\x4c\x1d\x53\x93\x85\x1e\x6c\xcd\xd5\xd5\xbb\x3d\x01\xdb\xc1\xb2\xf3\x24\x8d\xb1\x3e\x76\xd5\x6a\x7f\x43\x5c\xcc\x51\x8c\x39\x3c\x83\x6b\x9a\x14\x7f\x11\x2a\x31\x9f\xa2\xb0\xb5\xfe\xf1\xe8\x28\x9f\xfb\xd7\xab\x8b\x21\xd8\x99\xcb\x2d\x30\x8e\x1e\x2b\x43\x18\x28\x91\x5d\x7b\xe0\x68\x52\x5b\xf0\xfe\xaf\xc9\x52\xe2\xbe\xa9\x0b\x5d\xdf\xab\x32\x25\xb0\xc2\xdd\xad\x88\xea\xd9\xd0\x28\xfc\xa0\x2d\xcb\x68\x61\x9b\x1a\xae\x70\x06\xb9\x16\xee\xb2\xab\xa2\xa9\x1b\x21\x89\xc0\xd8\xd6\x33\xb6\x6d\x9a\x56\xc8\x6b\xd9\x3e\xd4\x9b\xb8\x87\xb0\xb8\x92\x9c\xd0\x99\x1b\x07\x2d\x85\xc1\x0e\xe7\x19\x1b\xba\x3d\x55\x09\x29\xf8\x2e\x7d\x65\x8b\xfc\xf5\xba\xd3\x9a\x3b\xde\x71\xb2\x50\x07\xfe\xbc\x28\x89\xd4\xe1\x82\x6c\xc1\x4f\x19\x7d\xa1\x4e\x93\xfd\x16\xfe\x3b\x2c\x30\x7e\x9c\x61\x69\x4f\x87\x7a\x8f\x26\x28\x7d\x6f\x9c\xf9\x57\xb1\xaf\xab\xb5\x6e\x13\xf2\x95\x68\xce\xe0\x03\xee\xd6\x8b\xf6\x3e\xdb\x50\x84\x2c\x6e\x38\x8e\x74\x2f\x41\xa6\xdb\x31\x1d\xe4\xe3\xd6\x6b\xf8\x9f\x13\x7d\x4a\x2b\x8b\x0a\x9b\xde\xbb\x7d\x45\xe7\x2f\x38\xb1\x4b\x6a\xd0\xe1\x03\x38\x5d\x04\x80\x0f\x16\xde\xa1\xa5\xf2\xf9\xb0\x12\x37\xd9\x24\x26\x21\xdc\xce\x31\x2f\x82\x47\x55\x67\x08\x42\x96\xa5\x31\xce\x8b\xc7\xbc\x6a\x7c\xf2\x60\x39\x74\x02\xe6\x0f\x65\xc5\x69\xac\xcb\x16\x22\x00\xe5\x3d\x85\x64\x30\x47\x34\x8a\xb1\xb5\x33\xd4\x22\xc2\x34\x20\xee\x20\xb7\x07\xa1\x11\x91\x84\x51\x9b\x8d\xbe\xa7\x0b\x5c\x5d\x87\xbe\x77\x43\xc4\x77\xa6\x56\x85\x5b\x48\xa6\x04\x0b\xdb\x26\x5b\x1d\x36\x5c\xb5\x4c\x77\x53\x73\x1f\xac\xe6\x20\x08\xdc\xd0\x83\x43\xd7\x32\xa7\x13\x70\x1e\xaf\x7c\xaf\xb4\xf4\xb8\x9c\xb0\xef\x7b\xd6\xde\x63\x65\xb0\xf9\xb5\xef\x7b\xed\x75\x0c\x29\x9b\xb1\xe0\x60\xf4\xf2\xd5\xdb\x41\xf0\x9a\xd0\xa8\xdb\x3b\x86\x29\xa1\x11\x30\x8a\x81\xab\x2a\x7f\x09\x44\x3e\x17\x05\xef\xf8\x01\x2f\xdb\x2b\x20\xc9\x14\x0e\x52\x30\x05\x9b\xb2\x06\x90\x43\xb2\x4c\x96\x06\x50\xd3\x22\xc7\xcc\xf6\x68\xb3\xa3\x09\xe4\x4c\xef\x7a\x1d\x9c\xbd\x32\x67\x52\x21\x0a\x96\x1c\x55\xe8\xd2\x2d\x90\xc6\x3d\x79\x6f\xaa\xf2\xc7\x6e\xad\xb6\x4d\x1c\xe7\x92\x46\xa7\xef\x7b\x47\x47\x20\x3e\xc6\x20\x70\x8c\x43\x09\x1f\x33\xcc\x97\xfd\x8a\xcf\x52\xce\x16\x24\xc2\x91\x5a\x86\xc0\x1f\x33\x4c\x43\xec\x7b\xe2\x63\x2c\x24\x57\xb3\x8d\x7d\xef\x6a\xf0\x76\x70\x3a\x82\x9c\x4b\x55\x45\xe1\xeb\xcb\x8b\xdf\x20\x6f\x38\x7d\xef\x8f\x5f\x06\x97\x83\x4d\x2f\xc0\x09\x1c\xfc\xec\x7b\x63\x55\x7b\x2a\x07\xac\xd7\xc1\x5b\x36\xeb\x1a\xd5\x7d\xa8\x2e\xac\xe7\xeb\x3e\x5d\x03\x68\xd9\x91\xfa\x9e\xda\xea\xe3\x13\x88\x26\xc1\xff\x29\xdb\x2f\xd9\x6d\xa3\x02\x8d\x8e\x58\x49\x73\x76\x1b\x5c\x85\x88\x76\x73\x26\x77\xbd\xee\xfd\x2f\xe0\x2a\x3a\x6a\xe1\x93\x13\xd5\x2d\x05\x03\xce\x87\xec\x92\xdd\x0a\xfb\xae\x80\x3c\x4a\xe2\x3e\xd4\xb1\x66\x5a\x6c\xed\x6f\x8a\x62\x85\x9e\x7e\x4d\x97\xad\xd6\xb6\xee\x2b\xa1\x3d\x94\xa8\x9b\xc9\xf3\x6a\x19\x04\x41\x91\x41\xa8\xcc\x1f\x01\x19\x25\x1f\x33\x73\x1c\xe6\x51\x91\xb3\xe9\x2d\xb7\x63\x07\x24\xba\xd3\xf7\x09\x9a\xc5\x2f\x68\x77\x13\x02\x24\xba\x2b\xb8\x7f\x2d\x58\x32\xfe\x06\xf9\x1d\x72\x3e\x16\x15\x7a\x3e\xe7\xe2\x5f\xd2\xa8\xe3\x0c\xb3\xa0\x68\x74\xdb\x3f\xca\x0b\x08\x77\x0a\xb5\xfc\x05\xe2\x62\x6b\x8a\xa2\xef\xab\x90\xfd\x16\x12\x5e\x2d\xab\xf6\xad\xd7\xb9\xb7\x2b\x48\x51\x2c\x32\xd7\x32\x06\x44\x23\x18\x77\xe0\x13\xe4\xf7\x12\xe3\x1f\xc4\xb8\xb3\x5e\x97\x28\xb2\xad\xbb\x01\x57\xca\xa5\x35\x03\xca\x3e\x11\x41\x41\x67\x74\x67\x0e\xc9\xdc\xc7\x06\x10\x0a\xd3\x5d\x48\xa8\xba\xff\x51\xa0\xb0\xad\xc2\xc3\x9c\x37\x81\x82\xef\x29\x14\xe0\xbc\x44\x06\x2f\x7f\x52\x83\x0c\x9e\xe7\x7d\x16\x16\x3c\x6f\xed\x57\xc5\x30\xe7\xea\xa0\xfc\xd6\x30\xe1\x37\x44\x97\x05\x24\x24\x88\x2e\x95\x83\x84\xda\x73\x54\x9e\xfb\xed\xd5\xe2\xb9\x09\xce\xfc\x4e\x4f\x68\xed\x98\x91\x05\xa6\xa5\x35\x65\x42\x68\xe3\xb7\x53\xc0\x04\x9a\x5b\xe7\xe8\x66\xb6\x36\x0d\x16\x88\xc3\x0d\x03\xe7\xad\xef\xed\x37\x39\xc6\xf0\xa3\xb1\x38\x28\x57\xd8\x94\x19\x46\xce\xe4\x76\x10\x04\x3d\x5f\x55\xe5\xec\x56\xe8\x15\xb9\xb9\xd0\x3c\xc2\x9c\x78\x6e\xac\x3b\x87\xd7\x0d\x33\x81\x6a\xce\xb4\x08\x4f\x31\xd7\xfa\x83\xd3\x98\x09\xdc\xd5\xf3\xa9\x32\x5c\x3f\x1b\xe2\x3b\xd9\xd5\x4e\xac\xcb\xce\xe2\x6c\x35\x39\x27\x76\x9f\xc4\x9e\x49\xb8\x86\x74\xf3\x1c\xf3\xea\xb3\x4d\xa7\x9b\xb7\xb1\x0a\xf5\x54\x99\x71\xc3\xe0\x04\x50\x9a\x62\x1a\x75\xd5\xbb\x8d\xd4\xeb\xd9\xe5\x92\xa9\x31\x74\xc0\x79\xb7\xd7\xe8\x9e\x52\xc4\x9e\xf1\x47\x47\x80\xa9\xc8\xb8\x66\x9a\xad\x20\xa2\xa0\x2f\x6d\x00\x71\x8e\x96\x5a\x86\x23\x39\x57\x1d\xf0\x1c\x69\x40\x50\x1b\x43\xd5\x08\xcb\x54\x68\x08\x8a\x31\xed\xde\xb0\x9e\xf2\xc2\x4f\x7a\xe5\x56\x9d\x6e\x25\x2b\x01\xfc\x53\xcf\x00\x86\x42\x94\x8a\x79\x06\x45\xf6\x83\x1d\x17\x14\x17\xd0\x81\xef\x50\x28\xe3\xa5\x5b\x97\xef\x0d\x40\x2e\x28\x2e\x9b\x82\xca\x31\x8b\xea\x50\x43\x99\x7d\x4f\xd0\xf8\xea\x27\xe7\x97\x81\x43\x7d\x5e\xee\x38\x36\x1b\xd0\xe2\x5e\xc5\x74\x73\x06\x3f\xa8\x94\xde\x38\x35\xab\x11\xde\x70\x68\xb6\x1f\xee\xe7\x54\x60\x2e\x55\xb4\x13\xfd\x1b\x20\xa0\xf8\x56\xbb\x52\x33\xab\xaa\x2f\x6f\x99\xb6\x3a\xcf\x27\xde\xa2\x75\x0b\xae\xd7\x5c\xfb\x69\x3b\x02\x13\xef\xd6\xee\xfa\x32\x71\x8b\xd8\x6a\x8c\xf7\x5d\xa4\x9d\xaa\x5b\x53\x8e\x53\xc4\xf5\xa5\x4e\x52\xdc\xe0\xe9\xcc\xf0\xbd\x9b\xb0\x0f\x37\xa4\x0f\x37\x0b\xdb\xb5\xe6\x66\x5c\xc5\x24\xc4\xdd\x3a\xb2\xad\xa7\x00\xae\xec\x5a\xad\xcb\x1f\x97\x69\xe7\xc3\xab\xc1\xe5\x08\xce\x87\xa3\x8b\x22\xbb\xa0\xab\xf2\xca\xf0\x24\x22\xf8\x95\x11\xda\x55\x56\xaa\x52\xbe\x07\x3f\xc2\xb8\xe7\x7b\xbf\xbf\x7c\x7b\x3d\xb8\xaa\x13\x24\x55\xc1\xcb\xc1\xe8\xfa\x72\x78\x3e\x7c\x53\x49\xe6\xe6\xe2\xf6\x66\xd1\x9c\x9b\x3b\xdb\x5c\x33\xce\x7b\x50\x73\xfb\xf0\x9e\xb4\xfd\x54\xba\x4e\x23\x24\xf5\xc1\x91\xe9\xdf\xf4\x61\x79\x47\x84\x24\x74\x66\x13\x6a\x1f\xe9\x74\x6d\x27\xaf\x1e\x18\xaa\x17\x1e\x57\x08\x05\x7b\x31\x61\xad\xbe\x37\x8f\xf3\xa0\x0c\xfb\x22\x72\xc7\x9b\x12\x1c\x47\x3a\x94\x6a\x73\xc9\xe4\x51\xc4\xe8\x73\x99\x7b\x5c\xb9\xd7\x49\x23\xdf\x8b\x70\x8c\x25\xee\x1a\x4d\xfd\x4d\x06\xc7\xaa\x70\x92\x1c\x84\xca\x5d\xf1\xd9\xe4\xce\x15\xfe\xec\x64\xb3\x85\x05\x27\x49\xaf\xdf\x9d\xbd\x1c\x0d\xca\xec\xbc\x1a\x8c\x74\xe2\xf9\x9e\xb7\x23\x47\xe1\xa4\x5e\x68\x23\x3f\x77\x92\x52\xb5\xd9\x3b\xb6\xb6\x62\x99\xa5\xb9\xb5\x0b\x14\x67\x58\xfb\xd8\xd6\x91\x15\xb2\x76\xb5\x41\x42\xc1\xba\xcc\xd7\x06\x18\x30\x0a\x2d\x14\xa8\xf2\x30\xa3\x2e\x68\x3e\x10\x1c\x1c\x6d\xf7\x07\x88\x27\x3a\xb0\xbf\x01\x9c\x39\xdc\x8d\x35\x05\xef\x95\x03\xce\xd7\x62\xbe\x0e\xff\x11\xec\x57\x01\x8e\x9f\xe1\xb2\x20\xe7\xa6\x9a\xa4\xef\xc1\x4e\x3d\x08\x26\x1f\x07\x74\x1f\xf0\x52\xe8\x34\x2c\x3d\x5e\x5c\xb6\xbd\x50\xf8\x59\x03\x7e\x0e\xf4\x79\x0e\x23\xf3\x85\x28\xb8\x5a\xa9\x0e\xcf\xee\x56\x61\xf0\xde\x31\x11\x8c\xc4\xb8\x91\x9b\xcb\x05\x3e\x0b\x8e\x0e\x60\x95\x00\x59\x45\xc6\xb5\xe3\x7a\xe7\x8e\xd3\x8a\x17\x70\x6a\xfe\xee\x57\x3f\x92\xb4\x44\xab\x26\xe8\xca\x5d\xf0\x9a\xc6\xfe\x77\x21\xee\xc3\x3a\xa4\xaf\xc3\x2a\x1e\xee\xc6\xdd\x9c\x5b\xb4\xc9\x58\x61\x17\x95\xe7\x37\x78\xbd\x76\x2f\x71\x4b\x93\x8c\x0d\x95\xcf\x7e\x77\xf0\x8c\xce\x52\xee\x43\x1a\x34\x01\xda\x43\xe9\xc7\x47\xc0\x4c\x43\x27\x15\x63\xda\x75\xfb\xfa\xde\xb7\x81\x3b\x35\xcc\x86\x92\x7a\x04\xf6\x00\x34\x83\x4f\xf1\x6e\x0b\x2d\x6a\xa8\x8e\x27\x04\x96\xdc\xb2\xdd\xe4\xac\x33\xb2\x05\x5a\xd6\x7e\xfb\xf1\xd5\x89\xd9\x0a\xb6\x95\x4b\xc9\x6b\xc7\xef\xec\xec\x93\x60\xdc\x16\x06\x9f\x99\xb2\xa6\x77\x0c\xa6\xc0\xb1\x65\x6f\x26\x54\x9f\xad\x2a\xdf\x4a\xb9\xdb\x2e\xf8\x9e\xe5\x16\xb8\xdc\xd5\x94\xb3\xa4\x96\xbb\x32\xc0\x6b\xed\x7f\xc0\x97\x13\xc5\xb7\x80\x4f\xf3\xb1\xc4\x36\x38\x9e\x0d\xde\x0e\x46\x03\xa8\x30\xb5\xd0\xdc\x5f\xee\x20\x81\xb6\x3e\x7a\xa8\xe0\x86\x8a\xb6\x9b\xbe\x49\xd1\x68\x12\x0c\xee\x70\xd8\x34\xf4\x71\xdf\x33\xdc\xab\x9b\xdb\x68\xe4\xf6\x1f\xbb\x45\xdf\x56\x09\xe0\xef\x7d\xdb\xd3\x7e\xb5\x90\xfb\xfa\x7e\xbd\x5e\x93\xf4\xbd\xbe\x44\x28\x12\xd4\x66\x98\xdd\xd7\x07\x25\x5a\x4d\xbf\xf2\xb0\x2f\x09\x76\xe4\xd6\x96\xf8\xbe\xb3\x6b\xdf\x75\xba\xd9\xcd\xbc\x4e\xb7\xdb\xf1\x75\xeb\xf4\xd2\xa4\x8a\x3d\xce\xc1\xf1\xbc\xc9\x30\x37\x42\x1f\xf0\x69\xc0\x66\x54\x7e\xc1\xc5\xde\x8e\xb8\xfd\xd2\x6b\xfe\x1d\x61\xbb\x29\xde\x74\x0d\xb0\x71\x99\xb6\x5f\x22\x2e\xbf\x3f\xcb\x52\x7b\x8d\xe5\x60\x79\xab\x1f\x6f\x1e\x56\x9a\x40\x3d\xf9\xe6\xff\x1c\x51\x4f\xfc\x07\x79\x03\xf8\xb5\xaf\xd0\x00\xbe\xfc\x0e\x2d\xd7\xe4\x04\xeb\xa3\x6e\xc6\x4c\x7f\x36\xbe\xe7\xf5\x98\x96\x06\x18\x5f\x0c\xe1\xf4\x62\xf8\xfa\xed\xf9\xe9\x08\xba\x9b\xb7\x0b\xb9\xd0\xd9\x05\xd8\xee\x33\x6f\x3a\x77\x1a\x72\x02\x5d\x18\xfc\xff\xe9\xdb\xeb\xb3\xc1\x59\xd0\x24\x5c\x08\x6c\x18\x54\xdf\x5e\x02\x7c\xee\xd2\xae\x5a\xa6\xb5\x7d\x85\xf7\x08\xa6\x67\x9f\xe9\xec\xf0\xea\xdb\x39\xad\x62\xdc\xd6\x68\xdf\xeb\xb2\x42\x36\x26\x42\x56\x67\xf9\xfc\xbf\x43\x51\xe0\xd6\xfd\xf9\xf8\x7a\xe9\x7f\x2a\x86\x01\x7c\x7b\x20\xb6\xb5\xa9\xca\x71\xdf\x81\xac\x16\xc8\x9e\x3d\x33\xbf\x6f\x13\x48\x8f\x27\xb2\xff\x13\x00\x00\xff\xff\xb2\x3c\x70\x55\xed\x47\x00\x00")

func templatesModelGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGoTpl,
		"templates/model.go.tpl",
	)
}

func templatesModelGoTpl() (*asset, error) {
	bytes, err := templatesModelGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.go.tpl", size: 18413, mode: os.FileMode(420), modTime: time.Unix(1508916700, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModel_testGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x55\xdd\x6e\xa3\x46\x14\xbe\x86\xa7\x38\x45\xee\x0a\x2c\x6b\x50\xbd\x77\x5b\xe5\x62\x13\xbb\x2b\xdf\xd8\xd6\xae\xb7\x52\xa5\x95\xa2\x09\x1c\xc8\xd4\x30\xd0\x99\x21\x71\x4a\x78\xf7\x6a\x06\x0c\x38\x8e\x1b\x57\x35\x6a\x55\xd5\x37\x16\xe7\xf7\xfb\xce\xdf\x94\xa5\x3f\xbe\xd4\xcf\xaf\x2a\x5b\xc7\x83\x9f\xa9\x60\xf4\x2e\x41\x09\xad\xec\x92\x39\xec\xb2\x84\x51\xbe\x8d\xe1\xc3\x15\x90\x2f\xa8\x14\xe3\xb1\x24\x6b\x1a\x6c\x69\x8c\x60\x12\xc2\x48\x69\xad\xd2\x28\x38\x4d\x11\x46\xe4\x4b\x70\x8f\x29\x05\xb2\xd1\xb2\xd6\x8a\x9b\x20\x46\x46\x96\xda\xb0\x51\x04\x5a\xae\xd5\xcf\x10\xd0\x9c\x29\x9a\xb0\xdf\x3b\xe5\x83\xd1\x06\xf0\x0c\x49\xf6\x88\x62\x2f\x4f\x3b\x27\xc9\x78\x5c\x24\xb4\x53\xd5\x2e\xe9\x91\xcb\x83\xa1\x91\x0b\xc6\x15\x38\xef\x1c\x63\xe9\x10\x67\xaf\xcf\x1b\x6d\x4a\xc5\xd3\x1e\xe7\x4d\x96\x14\x29\x97\xad\x89\xa1\x1a\x64\x28\x82\x1e\xcf\x51\x4e\x66\x54\xd1\xcd\x53\xde\xc1\xce\x6a\xc3\x44\x57\x44\x9e\x88\xc6\xc2\x9d\xd4\x66\x8c\x87\xb8\xeb\xac\x16\xcd\x67\x1b\x2a\xd2\x46\x29\xcd\x4d\x58\x37\x35\x04\x22\x70\xbe\x39\xdf\xcb\x6f\x8e\xe3\xc1\x33\xfc\x9a\x31\x0e\xce\x04\x9c\xce\x29\xee\x3b\xa5\xbd\xc2\xea\x00\x18\xb1\x9d\x29\xc8\x91\xf3\xc5\x27\xc8\x4c\xe9\xaa\x10\xb0\x1f\x9a\x61\xe6\x34\x6f\xa2\xef\xe7\xb5\xaa\x6e\x15\x4a\x35\x10\x9f\x75\x16\x67\x90\x52\xb1\x45\x31\x10\x1f\xdf\x87\x4f\xf3\xe5\xfc\xf3\xc7\xcd\x7c\x06\xd7\xbf\xc0\x7a\xf5\x69\x45\x60\xb6\x82\xe5\x6a\x03\xf3\xd9\x62\x43\x06\xa2\x76\x93\x30\xe4\x0a\x22\x1a\xa8\x4c\x3c\x0d\xc4\x2e\x2a\x78\x00\xcd\x51\xa8\xaa\xd9\xb5\xab\x60\xac\xdb\xc5\x78\x4c\x36\x5e\xaf\x89\x64\x76\x0d\xa5\x6d\x05\x19\x8f\x58\x3c\x01\x14\xc2\x2c\x69\xbc\x23\x6b\x2a\x24\x7e\xfd\xbc\x70\x9d\xb2\xec\x9d\xa6\x8f\x61\x28\x50\xea\xe5\x71\x3c\xdb\x62\x91\x71\xf9\xee\x0a\x38\x4b\x74\x20\x4b\x91\x9f\xa8\xa2\x89\x8b\x42\x78\xb6\x55\xd9\xb6\x15\xde\x1d\xc4\xbd\xc9\x38\xc7\x40\xb9\x75\xca\x33\x63\x08\x54\x85\xe0\x10\xde\xd9\x43\x6d\xd0\x06\xa5\x82\x05\x97\x28\xd4\x90\x3d\xd1\x69\xea\x9b\x5c\x55\x75\xb6\x97\xad\xb1\x2d\xdf\x07\x89\xaa\xc8\x41\xdd\x23\xa4\x59\x88\x89\x6d\x99\x3f\x5d\xc2\x5e\xeb\x96\xf8\xe8\x1e\xf4\xd8\xf3\x6c\xe3\x2d\x28\x0f\xb3\x14\x1e\x68\x52\xa0\xb4\xad\xb2\xd4\x92\x18\x8f\xaf\xe4\xad\x6e\xad\x79\x2a\x0e\x9e\x86\xee\xae\x37\x19\x23\xba\x35\xe7\xb8\x19\x82\xde\x0b\x64\x9c\x0f\xae\xb3\x4e\x87\x3c\x34\xb7\xce\x50\x51\xa2\x08\x94\x11\xeb\xf7\xa0\xaa\x7e\x78\x41\xa3\x7e\x6d\xaa\x4a\x77\xfe\x34\xd4\xd7\x91\x56\xd5\x07\x78\xf7\x26\x8b\x89\x0d\x00\xd0\xe1\x32\x23\xd5\xe2\x99\xb6\xe3\x69\x8a\xdc\xe2\x21\x4d\x7f\x3a\xe0\x67\x0e\xab\xef\x03\x95\xda\x95\x65\x5c\xda\x26\xf1\x09\x52\xb5\x19\x99\xff\x56\xd0\xc4\x55\x13\x78\x9b\x09\x8c\x3b\xdc\xe4\x54\x4d\x3c\xbb\xcf\xd6\x00\x0a\x12\xa4\xbc\xc8\x6b\x02\xaf\x70\x9d\x61\x82\x0a\x5d\x53\xcb\x51\xfe\xa7\x18\xbc\x1f\x01\x5f\x2d\x80\xa1\x3f\xe8\x7e\x7e\xcd\x43\xaa\x86\x7a\xe1\x8e\xf6\xb3\xce\xf6\xff\x7e\xfe\xc7\xf6\x13\xe0\xa2\x2d\x98\xfe\xcd\x1e\xfc\x35\x38\x67\x6c\x3f\x5c\x9d\x51\xf2\xe9\x0b\x0c\x6d\xdc\xf7\xa7\xaa\xdd\x6c\xc3\xb8\xdf\x97\xb3\xce\xc5\x3f\x7e\x34\xa7\xfd\xab\xf9\xfe\x5f\x7a\x35\xff\x08\x00\x00\xff\xff\xc7\xda\xfb\x66\xbd\x0e\x00\x00")

func templatesModel_testGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModel_testGoTpl,
		"templates/model_test.go.tpl",
	)
}

func templatesModel_testGoTpl() (*asset, error) {
	bytes, err := templatesModel_testGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model_test.go.tpl", size: 3773, mode: os.FileMode(420), modTime: time.Unix(1502036180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPogoGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x55\x4d\x6f\xe3\x36\x14\x3c\x8b\xbf\x62\x60\x14\xad\xbd\x36\x24\xf4\xba\x40\x0e\x9b\xca\x48\x03\x2c\x6c\x6f\xe2\x14\x28\x82\x00\xa6\xa9\x27\x99\x88\xc4\xa7\x90\x94\x9c\xd4\xf0\x7f\x2f\x28\x7f\x6c\xb2\x45\xba\x97\xc8\x27\x81\x7c\x33\x9c\x37\x9c\x47\xef\x76\xc9\xa7\x8f\xfa\x25\xfb\xbd\x08\x7c\xf8\x4b\x5a\x2d\xd7\x25\x39\x9c\xd7\x3e\xf2\x0c\x21\x3e\x9c\xb2\x93\x3d\x6f\x2c\x16\x52\x3d\xca\x82\x7a\x12\x5e\x1f\xd9\x77\x3b\xc4\xb7\xe4\xbd\x36\x85\x8b\x4f\x47\x86\x82\x5e\xfa\x5a\x70\xc1\xa8\xa4\x7d\x24\xdb\x53\x5f\x49\x82\xab\xe9\x6c\x7a\xf3\x65\x39\x4d\x71\xf9\x37\x16\xf3\xab\x79\x8c\x74\x8e\xd9\x7c\x89\x69\x7a\xbd\x8c\x7b\x6a\x2d\x95\x5e\xae\xa5\x23\x68\xe3\xc9\xe6\x52\x11\xdc\x86\x9b\x32\xc3\x96\xed\x23\xb6\xda\x6f\x90\x1d\x6b\x12\xf7\x54\xc6\xe9\x25\x7e\x7d\xbb\xb2\x7c\xee\xcf\x94\xf4\x12\xda\xc1\x6f\x08\x8a\xab\x8a\xcd\x2b\x99\x39\xdb\xb3\x0e\x70\x4d\x56\x7a\xcd\x26\x14\x4b\x0f\x25\x0d\xd6\x84\xc6\x51\xd6\xf5\x10\xb8\xfc\x4b\x4d\x0e\xb9\xe5\x0a\x4e\x6d\xa8\x92\x58\x75\x31\xea\xbe\xe3\x99\xac\x42\x82\x56\xb1\x48\x92\x50\xbd\xdc\x68\xf7\x73\x2b\xa4\xc9\x7e\x34\x23\x16\xe1\xa0\x4e\xf9\x59\xeb\x4e\x44\xd3\x67\x52\x43\xe7\xad\x36\xc5\x04\x71\x1c\x9f\x37\x77\xfb\x11\x86\x75\xf1\x1c\xff\xc1\x55\x25\x4d\xb6\x94\xc5\x04\x64\x2d\xdb\x91\x88\xbe\x35\x64\x5f\xde\x87\x7d\x0a\xb8\x1b\xde\xba\x1f\x10\x37\xbc\x7d\x17\x74\xc2\x88\xde\xa6\xa5\x59\x97\x5a\x41\x35\xce\x73\xa5\xff\x09\xef\x18\x4a\x2e\x0a\x6d\x8a\x57\x96\xf4\x16\x99\xaf\x5c\xa0\xb6\xdc\xea\x8c\x0e\xc9\x29\xb9\x40\xde\x18\x75\x48\xc3\xfa\x05\x05\x99\x90\x16\xca\xf0\xd4\x90\xd5\xe4\x62\xd1\x4a\xdb\x01\x2f\xba\xca\x77\xbd\xdb\xf5\xec\x19\xd7\x87\x0c\x87\x6c\x37\xb5\x23\xeb\x1d\x86\xcb\x79\x3a\xff\x8c\x4a\x3e\x12\x7c\x08\xa5\x34\x20\xd3\x54\xa3\x9e\x2c\x54\x6c\x9c\xc7\x50\x00\x49\x82\xbb\x4e\x44\xca\x33\xf6\x9b\x70\x7f\x29\xc3\x1c\x3f\x75\x1e\xdc\xb5\xf4\x9b\x83\x84\x62\x93\x97\x5a\x79\x81\xff\x40\x2e\x30\x38\xbc\x63\x7f\x5e\xcf\xae\x06\x6f\x69\xef\xea\x4c\x7a\xc2\x82\x6c\xce\xb6\x0a\x9d\x35\x87\x95\xed\x86\xcc\xff\xd3\x1f\xa1\x07\xf6\xbb\x45\xfa\x65\x39\x1d\x88\x51\xbf\xd7\xb3\xa1\xb2\x26\xdb\x45\x24\xdc\x13\x3c\xc3\x95\x5a\x11\xb8\xb1\xc8\x35\x95\x99\x0b\x09\x67\xdc\x7e\xfb\x8a\xdc\x6a\x32\x59\xf9\x02\x6d\xea\xc6\xf7\xf5\x4f\x9e\x24\xb8\xed\x24\x28\x36\x6d\x97\x97\xa0\x45\x71\xd9\x54\xe6\x28\xc6\x71\x45\x87\xab\x08\xd3\xe0\x9e\x4a\x64\x56\xb7\x64\xbb\x47\xb2\x31\x19\x59\xe7\xa5\xc9\x44\x37\x23\x1d\xd9\xf0\x84\xaf\x64\x7d\x7f\x98\x85\x87\x57\x73\x30\x01\xe7\xb9\x23\x1f\xe8\x47\x18\x2a\xdc\x3f\x9c\x06\x46\xbf\xfa\x6e\x71\xff\xf0\x76\x7a\x44\x64\xf0\xf9\xe2\x84\x1e\xe3\x77\x11\x85\xa4\x2b\x2e\x27\x68\x65\x19\xf6\xac\x34\x05\x9d\xf5\xef\x44\x14\x29\x5c\x40\xd6\x35\x99\x6c\xa8\x26\x58\x0d\x56\x63\xc5\xe5\x78\x35\x58\x8d\x44\x14\xe9\xef\x9b\x7a\x82\xc1\x2f\x83\xb1\xf3\x36\x58\x11\x5f\x7b\x96\x43\x33\x0a\x45\xed\xf7\xa2\xb6\x3b\x28\x2c\x9a\xf1\x58\x44\x7b\x11\x59\xf2\x8d\x35\x50\x13\xe8\x09\x5a\xb1\x17\xff\x06\x00\x00\xff\xff\x69\xd0\xc1\x1a\xd1\x09\x00\x00")

func templatesPogoGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPogoGoTpl,
		"templates/pogo.go.tpl",
	)
}

func templatesPogoGoTpl() (*asset, error) {
	bytes, err := templatesPogoGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/pogo.go.tpl", size: 2513, mode: os.FileMode(420), modTime: time.Unix(1503978090, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/codec.go.tpl": templatesCodecGoTpl,
	"templates/enum.go.tpl": templatesEnumGoTpl,
	"templates/model-many-to-many.go.tpl": templatesModelManyToManyGoTpl,
	"templates/model.go.tpl": templatesModelGoTpl,
	"templates/model_test.go.tpl": templatesModel_testGoTpl,
	"templates/pogo.go.tpl": templatesPogoGoTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"codec.go.tpl": &bintree{templatesCodecGoTpl, map[string]*bintree{}},
		"enum.go.tpl": &bintree{templatesEnumGoTpl, map[string]*bintree{}},
		"model-many-to-many.go.tpl": &bintree{templatesModelManyToManyGoTpl, map[string]*bintree{}},
		"model.go.tpl": &bintree{templatesModelGoTpl, map[string]*bintree{}},
		"model_test.go.tpl": &bintree{templatesModel_testGoTpl, map[string]*bintree{}},
		"pogo.go.tpl": &bintree{templatesPogoGoTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

