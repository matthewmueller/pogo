{{ $shortClass := shortname .Table.TableName }}
{{ $class := classname .Table.TableName }}
{{ $shortModel := shortname .Table.TableName $shortClass }}
{{ $model := modelname .Table.TableName }}
{{ $return := modelreturn .Table.TableName }}
package {{ .Package }}

import (
	"github.com/matthewmueller/pgx"
)

// GENERATED BY POGO. DO NOT EDIT.

// Delete the {{ $model }} from the database.
func ({{ $shortClass }} *{{ $class }}) Delete({{ primaryname .Columns }} {{ primarytype .Columns }}) (err error) {
	// sql query
	sqlstr := `DELETE FROM {{ schema .Schema .Table.TableName }} WHERE "{{ primaryname .Columns }}" = $1`

	// run query
	DBLog(sqlstr, {{ primaryname .Columns }})
	_, err = {{ $shortClass }}.DB.Exec(sqlstr, {{ primaryname .Columns }})
	if err != nil {
		return err
	}

	return nil
}

{{ range $idx := .Indexes }}
{{ if .IsUnique }}{{ if not .IsPrimary }}
// FindBy{{ indexmethod $idx }} find a {{ $model }}
func ({{ $shortClass }} *{{ $class }}) DeleteBy{{ indexmethod $idx }}({{ indexparams $idx }}) (err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `DELETE FROM {{ schema $.Schema $.Table.TableName }} WHERE {{ indexwhere $idx }}`

	DBLog(sqlstr, {{ indexvars $idx }})
	_, err = {{ $shortClass }}.DB.Exec(sqlstr, {{ indexvars $idx }})
	if err != nil {
		return err
	}

	return nil
}
{{ end }}{{ end }}
{{ end }}
