package jack

// GENERATED BY POGO. DO NOT EDIT.

// FindMany find many Crons by a condition
func (c *Crons) FindMany(condition string, params ...interface{}) (crons []Cron, err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `
    SELECT "id", "frequency", "job", "tz", "start_time", "end_time", "retry", "created", "updated"
    FROM public.crons
    WHERE ` + condition

	DBLog(sqlstr, params...)
	rows, err := c.DB.Query(sqlstr, params...)
	if err != nil {
		return crons, err
	}
	defer rows.Close()

	for rows.Next() {
		cron := Cron{}
		err = rows.Scan(&cron.ID, &cron.Frequency, &cron.Job, &cron.Tz, &cron.StartTime, &cron.EndTime, &cron.Retry, &cron.Created, &cron.Updated)
		if err != nil {
			return crons, err
		}
		crons = append(crons, cron)
	}

	if rows.Err() != nil {
		return crons, rows.Err()
	}

	// ensure we return an empty array
	// rather than nil when we marshal
	if len(crons) == 0 {
		return make([]Cron, 0), nil
	}

	return crons, nil
}
