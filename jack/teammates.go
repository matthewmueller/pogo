package jack

import (
	"errors"
	"time"
)

// GENERATED BY POGO. DO NOT EDIT.

// ErrTeammateNotFound returned if the Teammate is not found
var ErrTeammateNotFound = errors.New("Teammate not found")

// Teammates class
type Teammates struct {
	DB DB
}

// Teammate model
type Teammate struct {
	ID      *int       `json:"id,omitempty"`
	SlackID *string    `json:"slack_id,omitempty"`
	TeamID  *string    `json:"team_id,omitempty"`
	Created *time.Time `json:"created,omitempty"`
	Updated *time.Time `json:"updated,omitempty"`
}

// NewTeammate model
func NewTeammate(db DB) Teammates {
	return Teammates{
		DB: db,
	}
}

// getFields fetch the non-nil fields
func (t *Teammates) getFields(tt *Teammate) map[string]interface{} {
	fields := map[string]interface{}{}

	if tt.ID != nil {
		fields["id"] = tt.ID
	}

	if tt.SlackID != nil {
		fields["slack_id"] = tt.SlackID
	}

	if tt.TeamID != nil {
		fields["team_id"] = tt.TeamID
	}

	if tt.Created != nil {
		fields["created"] = tt.Created
	}

	if tt.Updated != nil {
		fields["updated"] = tt.Updated
	}

	return fields
}
