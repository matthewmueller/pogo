package jack

// GENERATED BY POGO. DO NOT EDIT.

import (
	"errors"
	"strings"
)

// Update the Conversation by the Primary Key
func (c *Conversations) Update(cc *Conversation, id *int) (conversation Conversation, err error) {
	fields := c.getFields(cc)

	// first check if we have the primary key
	if id == nil {
		return conversation, errors.New(`primary key "id" must be non-nil`)
	}

	// don't update the primary key
	delete(fields, "id")

	// prepare the slices
	c, i, v := querySlices(fields, 1)

	// sql query
	sqlstr := `UPDATE public.conversations SET (` +
		strings.Join(c, ", ") + `) = (` +
		strings.Join(i, ", ") + `)
		WHERE "id" = $1
		RETURNING "id", "user_id", "topic", "context", "state", "created", "updated"`

	// run query
	values := append([]interface{}{id}, v...)
	DBLog(sqlstr, values...)

	row := c.DB.QueryRow(sqlstr, values...)
	err = row.Scan(&conversation.ID, &conversation.UserID, &conversation.Topic, &conversation.Context, &conversation.State, &conversation.Created, &conversation.Updated)
	if err != nil {
		return conversation, err
	}

	return conversation, nil
}
