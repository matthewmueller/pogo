package jack

import (
	"time"

	"github.com/satori/go.uuid"
)

// GENERATED BY POGO. DO NOT EDIT.

// StandupTeammates class
type StandupTeammates struct {
	DB DB
}

// StandupTeammate model
type StandupTeammate struct {
	StandupID  *uuid.UUID `json:"standup_id,omitempty"`
	TeammateID *uuid.UUID `json:"teammate_id,omitempty"`
	TeamOwner  *bool      `json:"team_owner,omitempty"`
	CreatedAt  *time.Time `json:"created_at,omitempty"`
	UpdatedAt  *time.Time `json:"updated_at,omitempty"`
}

// NewStandupTeammate model
func NewStandupTeammate(db DB) StandupTeammates {
	return StandupTeammates{
		DB: db,
	}
}

// getFields fetch the non-nil fields
func (st *StandupTeammates) getFields(stst *StandupTeammate) map[string]interface{} {
	fields := map[string]interface{}{}

	if stst.StandupID != nil {
		fields["standup_id"] = stst.StandupID
	}

	if stst.TeammateID != nil {
		fields["teammate_id"] = stst.TeammateID
	}

	if stst.TeamOwner != nil {
		fields["team_owner"] = stst.TeamOwner
	}

	if stst.CreatedAt != nil {
		fields["created_at"] = stst.CreatedAt
	}

	if stst.UpdatedAt != nil {
		fields["updated_at"] = stst.UpdatedAt
	}

	return fields
}
