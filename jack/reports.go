package jack

import (
	"errors"
	"time"
)

// GENERATED BY POGO. DO NOT EDIT.

// ErrReportNotFound returned if the Report is not found
var ErrReportNotFound = errors.New("Report not found")

// Reports class
type Reports struct {
	DB DB
}

// Report model
type Report struct {
	ID        *int                    `json:"id,omitempty"`
	UserID    *int                    `json:"user_id,omitempty"`
	Timestamp *time.Time              `json:"timestamp,omitempty"`
	Questions *map[string]interface{} `json:"questions,omitempty"`
	StandupID *int                    `json:"standup_id,omitempty"`
	Status    *ReportStatus           `json:"status,omitempty"`
}

// NewReport model
func NewReport(db DB) Reports {
	return Reports{
		DB: db,
	}
}

// getFields fetch the non-nil fields
func (r *Reports) getFields(rr *Report) map[string]interface{} {
	fields := map[string]interface{}{}

	if rr.ID != nil {
		fields["id"] = rr.ID
	}

	if rr.UserID != nil {
		fields["user_id"] = rr.UserID
	}

	if rr.Timestamp != nil {
		fields["timestamp"] = rr.Timestamp
	}

	if rr.Questions != nil {
		fields["questions"] = rr.Questions
	}

	if rr.StandupID != nil {
		fields["standup_id"] = rr.StandupID
	}

	if rr.Status != nil {
		fields["status"] = rr.Status
	}

	return fields
}
