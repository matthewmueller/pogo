package jack

// GENERATED BY POGO. DO NOT EDIT.

// FindMany find many Reports by a condition
func (r *Reports) FindMany(condition string, params ...interface{}) (reports []Report, err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `
    SELECT "id", "user_id", "timestamp", "questions", "standup_id", "status", "created_at", "updated_at"
    FROM jack.reports
    WHERE ` + condition

	DBLog(sqlstr, params...)
	rows, err := r.DB.Query(sqlstr, params...)
	if err != nil {
		return reports, err
	}
	defer rows.Close()

	for rows.Next() {
		report := Report{}
		err = rows.Scan(&report.ID, &report.UserID, &report.Timestamp, &report.Questions, &report.StandupID, &report.Status, &report.CreatedAt, &report.UpdatedAt)
		if err != nil {
			return reports, err
		}
		reports = append(reports, report)
	}

	if rows.Err() != nil {
		return reports, rows.Err()
	}

	// ensure we return an empty array
	// rather than nil when we marshal
	if len(reports) == 0 {
		return make([]Report, 0), nil
	}

	return reports, nil
}
