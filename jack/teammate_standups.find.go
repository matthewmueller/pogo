package jack

import (
	"github.com/matthewmueller/pgx"
)

// GENERATED BY POGO. DO NOT EDIT.

// Find a TeammateStandup by "id"
func (ts *TeammateStandups) Find(id *int) (teammatestandup TeammateStandup, err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `
    SELECT "id", "standup_id", "teammate_id", "time", "status"
    FROM public.teammate_standups
    WHERE "id" = $1`

	DBLog(sqlstr, id)
	row := ts.DB.QueryRow(sqlstr, id)
	err = row.Scan(&teammatestandup.ID, &teammatestandup.StandupID, &teammatestandup.TeammateID, &teammatestandup.Time, &teammatestandup.Status)
	if err != nil {
		if err == pgx.ErrNoRows {
			return teammatestandup, ErrTeammateStandupNotFound
		}
		return teammatestandup, err
	}

	return teammatestandup, nil
}

// FindByStandupIDAndTeammateID find a TeammateStandup
func (ts *TeammateStandups) FindByStandupIDAndTeammateID(standupid *int, teammateid *int) (teammatestandup TeammateStandup, err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `
		SELECT "id", "standup_id", "teammate_id", "time", "status"
		FROM public.teammate_standups
		WHERE "standup_id" = $1 AND "teammate_id" = $2`

	DBLog(sqlstr, standupid, teammateid)
	row := ts.DB.QueryRow(sqlstr, standupid, teammateid)
	err = row.Scan(&teammatestandup.ID, &teammatestandup.StandupID, &teammatestandup.TeammateID, &teammatestandup.Time, &teammatestandup.Status)
	if err != nil {
		if err == pgx.ErrNoRows {
			return teammatestandup, ErrTeammateStandupNotFound
		}
		return teammatestandup, err
	}

	return teammatestandup, nil
}
