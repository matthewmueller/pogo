package jack

import (
	"errors"
	"time"
)

// GENERATED BY POGO. DO NOT EDIT.

// ErrConversationNotFound returned if the Conversation is not found
var ErrConversationNotFound = errors.New("Conversation not found")

// Conversations class
type Conversations struct {
	DB DB
}

// Conversation model
type Conversation struct {
	ID      *int                    `json:"id,omitempty"`
	UserID  *int                    `json:"user_id,omitempty"`
	Topic   *string                 `json:"topic,omitempty"`
	Context *string                 `json:"context,omitempty"`
	State   *map[string]interface{} `json:"state,omitempty"`
	Created *time.Time              `json:"created,omitempty"`
	Updated *time.Time              `json:"updated,omitempty"`
}

// NewConversation model
func NewConversation(db DB) Conversations {
	return Conversations{
		DB: db,
	}
}

// getFields fetch the non-nil fields
func (c *Conversations) getFields(cc *Conversation) map[string]interface{} {
	fields := map[string]interface{}{}

	if cc.ID != nil {
		fields["id"] = cc.ID
	}

	if cc.UserID != nil {
		fields["user_id"] = cc.UserID
	}

	if cc.Topic != nil {
		fields["topic"] = cc.Topic
	}

	if cc.Context != nil {
		fields["context"] = cc.Context
	}

	if cc.State != nil {
		fields["state"] = cc.State
	}

	if cc.Created != nil {
		fields["created"] = cc.Created
	}

	if cc.Updated != nil {
		fields["updated"] = cc.Updated
	}

	return fields
}
