package jack

// GENERATED BY POGO. DO NOT EDIT.

import (
	"errors"
	"strings"
)

// Update the Standup by the Primary Key
func (s *Standups) Update(ss *Standup, id *int) (standup Standup, err error) {
	fields := s.getFields(ss)

	// first check if we have the primary key
	if id == nil {
		return standup, errors.New(`primary key "id" must be non-nil`)
	}

	// don't update the primary key
	delete(fields, "id")

	// prepare the slices
	c, i, v := querySlices(fields, 1)

	// sql query
	sqlstr := `UPDATE public.standups SET (` +
		strings.Join(c, ", ") + `) = (` +
		strings.Join(i, ", ") + `)
		WHERE "id" = $1
		RETURNING "id", "channel_id", "time", "tz", "questions", "created", "updated", "owner", "team_id", "name"`

	// run query
	values := append([]interface{}{id}, v...)
	DBLog(sqlstr, values...)

	row := s.DB.QueryRow(sqlstr, values...)
	err = row.Scan(&standup.ID, &standup.ChannelID, &standup.Time, &standup.Tz, &standup.Questions, &standup.Created, &standup.Updated, &standup.Owner, &standup.TeamID, &standup.Name)
	if err != nil {
		return standup, err
	}

	return standup, nil
}
