package jack

// GENERATED BY POGO. DO NOT EDIT.

// FindMany find many TeammateStandups by a condition
func (ts *TeammateStandups) FindMany(condition string, params ...interface{}) (teammatestandups []TeammateStandup, err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `
    SELECT "id", "standup_id", "teammate_id", "time", "status"
    FROM public.teammate_standups
    WHERE ` + condition

	DBLog(sqlstr, params...)
	rows, err := ts.DB.Query(sqlstr, params...)
	if err != nil {
		return teammatestandups, err
	}
	defer rows.Close()

	for rows.Next() {
		teammatestandup := TeammateStandup{}
		err = rows.Scan(&teammatestandup.ID, &teammatestandup.StandupID, &teammatestandup.TeammateID, &teammatestandup.Time, &teammatestandup.Status)
		if err != nil {
			return teammatestandups, err
		}
		teammatestandups = append(teammatestandups, teammatestandup)
	}

	if rows.Err() != nil {
		return teammatestandups, rows.Err()
	}

	// ensure we return an empty array
	// rather than nil when we marshal
	if len(teammatestandups) == 0 {
		return make([]TeammateStandup, 0), nil
	}

	return teammatestandups, nil
}
