package jack

// GENERATED BY POGO. DO NOT EDIT.

import (
	"errors"
	"strings"

	"github.com/satori/go.uuid"
)

// Update the Report by the Primary Key
func (r *Reports) Update(rr *Report, id *uuid.UUID) (report Report, err error) {
	fields := r.getFields(rr)

	// first check if we have the primary key
	if id == nil {
		return report, errors.New(`primary key "id" must be non-nil`)
	}

	// don't update the primary key
	delete(fields, "id")

	// prepare the slices
	_c, _i, _v := querySlices(fields, 1)

	// sql query
	sqlstr := `UPDATE jack.reports SET (` +
		strings.Join(_c, ", ") + `) = (` +
		strings.Join(_i, ", ") + `)
		WHERE "id" = $1
		RETURNING "id", "user_id", "timestamp", "questions", "standup_id", "status", "created_at", "updated_at"`

	// run query
	values := append([]interface{}{id}, _v...)
	DBLog(sqlstr, values...)

	row := r.DB.QueryRow(sqlstr, values...)
	err = row.Scan(&report.ID, &report.UserID, &report.Timestamp, &report.Questions, &report.StandupID, &report.Status, &report.CreatedAt, &report.UpdatedAt)
	if err != nil {
		return report, err
	}

	return report, nil
}
