package jack

// GENERATED BY POGO. DO NOT EDIT.

import (
	"errors"
	"strings"

	"github.com/satori/go.uuid"
)

// Update the Teammate by the Primary Key
func (t *Teammates) Update(tt *Teammate, id *uuid.UUID) (teammate Teammate, err error) {
	fields := t.getFields(tt)

	// first check if we have the primary key
	if id == nil {
		return teammate, errors.New(`primary key "id" must be non-nil`)
	}

	// don't update the primary key
	delete(fields, "id")

	// prepare the slices
	_c, _i, _v := querySlices(fields, 1)

	// sql query
	sqlstr := `UPDATE jack.teammates SET (` +
		strings.Join(_c, ", ") + `) = (` +
		strings.Join(_i, ", ") + `)
		WHERE "id" = $1
		RETURNING "id", "slack_id", "username", "first_name", "last_name", "email", "avatar", "timezone", "created_at", "updated_at"`

	// run query
	values := append([]interface{}{id}, _v...)
	DBLog(sqlstr, values...)

	row := t.DB.QueryRow(sqlstr, values...)
	err = row.Scan(&teammate.ID, &teammate.SlackID, &teammate.Username, &teammate.FirstName, &teammate.LastName, &teammate.Email, &teammate.Avatar, &teammate.Timezone, &teammate.CreatedAt, &teammate.UpdatedAt)
	if err != nil {
		return teammate, err
	}

	return teammate, nil
}

// UpdateBySlackID find a Teammate
func (t *Teammates) UpdateBySlackID(tt *Teammate, slackid *string) (teammate Teammate, err error) {
	fields := t.getFields(tt)

	// first check if we have all the keys we need
	if slackid == nil {
		return teammate, errors.New(`slack_id must be non-nil`)
	}

	// don't update the keys
	delete(fields, "slackid")

	// prepare the slices
	_c, _i, _v := querySlices(fields, 1)

	// sql query
	sqlstr := `UPDATE jack.teammates SET (` +
		strings.Join(_c, ", ") + `) = (` +
		strings.Join(_i, ", ") + `) ` +
		`WHERE "slack_id" = $1 ` +
		`RETURNING "id", "slack_id", "username", "first_name", "last_name", "email", "avatar", "timezone", "created_at", "updated_at"`

	// run query
	values := []interface{}{}
	values = append(values, slackid)

	values = append(values, _v...)
	DBLog(sqlstr, values...)

	row := t.DB.QueryRow(sqlstr, values...)
	err = row.Scan(&teammate.ID, &teammate.SlackID, &teammate.Username, &teammate.FirstName, &teammate.LastName, &teammate.Email, &teammate.Avatar, &teammate.Timezone, &teammate.CreatedAt, &teammate.UpdatedAt)
	if err != nil {
		return teammate, err
	}

	return teammate, nil
}
