package jack

import (
	"github.com/matthewmueller/pgx"
)

// GENERATED BY POGO. DO NOT EDIT.

// Delete the Team from the database.
func (t *Teams) Delete(id *int) (err error) {
	// sql query
	sqlstr := `DELETE FROM public.teams WHERE "id" = $1`

	// run query
	DBLog(sqlstr, id)
	_, err = t.DB.Exec(sqlstr, id)
	if err != nil {
		if err == pgx.ErrNoRows {
			return ErrTeamNotFound
		}
		return err
	}

	return nil
}

// DeleteByBotAccessToken find a Team
func (t *Teams) DeleteByBotAccessToken(botaccesstoken *string) (err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `DELETE FROM public.teams WHERE "bot_access_token" = $1`

	DBLog(sqlstr, botaccesstoken)
	_, err = t.DB.Exec(sqlstr, botaccesstoken)
	if err != nil {
		if err == pgx.ErrNoRows {
			return ErrTeamNotFound
		}
		return err
	}

	return nil
}

// DeleteByTeamAccessToken find a Team
func (t *Teams) DeleteByTeamAccessToken(teamaccesstoken *string) (err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `DELETE FROM public.teams WHERE "team_access_token" = $1`

	DBLog(sqlstr, teamaccesstoken)
	_, err = t.DB.Exec(sqlstr, teamaccesstoken)
	if err != nil {
		if err == pgx.ErrNoRows {
			return ErrTeamNotFound
		}
		return err
	}

	return nil
}

// DeleteByTeamID find a Team
func (t *Teams) DeleteByTeamID(teamid *string) (err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `DELETE FROM public.teams WHERE "team_id" = $1`

	DBLog(sqlstr, teamid)
	_, err = t.DB.Exec(sqlstr, teamid)
	if err != nil {
		if err == pgx.ErrNoRows {
			return ErrTeamNotFound
		}
		return err
	}

	return nil
}
