package jack

import (
	"github.com/matthewmueller/pgx"
	"github.com/satori/go.uuid"
)

// GENERATED BY POGO. DO NOT EDIT.

// Delete the Team from the database.
func (t *Teams) Delete(id *uuid.UUID) (err error) {
	// sql query
	sqlstr := `DELETE FROM jack.teams WHERE "id" = $1`

	// run query
	DBLog(sqlstr, id)
	_, err = t.DB.Exec(sqlstr, id)
	if err != nil {
		if err == pgx.ErrNoRows {
			return ErrTeamNotFound
		}
		return err
	}

	return nil
}

// DeleteBySlackBotAccessToken find a Team
func (t *Teams) DeleteBySlackBotAccessToken(slackbotaccesstoken *string) (err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `DELETE FROM jack.teams WHERE "slack_bot_access_token" = $1`

	DBLog(sqlstr, slackbotaccesstoken)
	_, err = t.DB.Exec(sqlstr, slackbotaccesstoken)
	if err != nil {
		if err == pgx.ErrNoRows {
			return ErrTeamNotFound
		}
		return err
	}

	return nil
}

// DeleteBySlackTeamAccessToken find a Team
func (t *Teams) DeleteBySlackTeamAccessToken(slackteamaccesstoken *string) (err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `DELETE FROM jack.teams WHERE "slack_team_access_token" = $1`

	DBLog(sqlstr, slackteamaccesstoken)
	_, err = t.DB.Exec(sqlstr, slackteamaccesstoken)
	if err != nil {
		if err == pgx.ErrNoRows {
			return ErrTeamNotFound
		}
		return err
	}

	return nil
}

// DeleteBySlackTeamID find a Team
func (t *Teams) DeleteBySlackTeamID(slackteamid *string) (err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `DELETE FROM jack.teams WHERE "slack_team_id" = $1`

	DBLog(sqlstr, slackteamid)
	_, err = t.DB.Exec(sqlstr, slackteamid)
	if err != nil {
		if err == pgx.ErrNoRows {
			return ErrTeamNotFound
		}
		return err
	}

	return nil
}
