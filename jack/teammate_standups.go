package jack

import (
	"errors"
	"time"
)

// GENERATED BY POGO. DO NOT EDIT.

// ErrTeammateStandupNotFound returned if the TeammateStandup is not found
var ErrTeammateStandupNotFound = errors.New("TeammateStandup not found")

// TeammateStandups class
type TeammateStandups struct {
	DB DB
}

// TeammateStandup model
type TeammateStandup struct {
	ID         *int                   `json:"id,omitempty"`
	StandupID  *int                   `json:"standup_id,omitempty"`
	TeammateID *int                   `json:"teammate_id,omitempty"`
	Time       *time.Time             `json:"time,omitempty"`
	Status     *TeammateStandupStatus `json:"status,omitempty"`
}

// NewTeammateStandup model
func NewTeammateStandup(db DB) TeammateStandups {
	return TeammateStandups{
		DB: db,
	}
}

// getFields fetch the non-nil fields
func (ts *TeammateStandups) getFields(tsts *TeammateStandup) map[string]interface{} {
	fields := map[string]interface{}{}

	if tsts.ID != nil {
		fields["id"] = tsts.ID
	}

	if tsts.StandupID != nil {
		fields["standup_id"] = tsts.StandupID
	}

	if tsts.TeammateID != nil {
		fields["teammate_id"] = tsts.TeammateID
	}

	if tsts.Time != nil {
		fields["time"] = tsts.Time
	}

	if tsts.Status != nil {
		fields["status"] = tsts.Status
	}

	return fields
}
