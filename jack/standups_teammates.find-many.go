package jack

// GENERATED BY POGO. DO NOT EDIT.

// FindMany find many StandupsTeammates by a condition
func (st *StandupsTeammates) FindMany(condition string, params ...interface{}) (standupsteammates []StandupsTeammate, err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `
    SELECT "standup_id", "teammate_id", "team_owner", "created_at", "updated_at"
    FROM jack.standups_teammates
    WHERE ` + condition

	DBLog(sqlstr, params...)
	rows, err := st.DB.Query(sqlstr, params...)
	if err != nil {
		return standupsteammates, err
	}
	defer rows.Close()

	for rows.Next() {
		standupsteammate := StandupsTeammate{}
		err = rows.Scan(&standupsteammate.StandupID, &standupsteammate.TeammateID, &standupsteammate.TeamOwner, &standupsteammate.CreatedAt, &standupsteammate.UpdatedAt)
		if err != nil {
			return standupsteammates, err
		}
		standupsteammates = append(standupsteammates, standupsteammate)
	}

	if rows.Err() != nil {
		return standupsteammates, rows.Err()
	}

	// ensure we return an empty array
	// rather than nil when we marshal
	if len(standupsteammates) == 0 {
		return make([]StandupsTeammate, 0), nil
	}

	return standupsteammates, nil
}
