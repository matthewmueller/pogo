// Code generated by go-bindata.
// sources:
// templates/delete.go.tpl
// templates/delete.mm.go.tpl
// templates/enum.go.tpl
// templates/find.go.tpl
// templates/find.mm.go.tpl
// templates/insert.go.tpl
// templates/insert.mm.go.tpl
// templates/model.go.tpl
// templates/table.go.tpl
// templates/table.mm.go.tpl
// templates/update.go.tpl
// templates/update.mm.go.tpl
// DO NOT EDIT!

package bin

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDeleteGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x4f\x8b\xdb\x30\x10\xc5\xcf\xd6\xa7\x78\x85\x3d\xc4\x65\x91\xe9\xb5\xe0\x43\xb3\x56\xb7\x85\xdd\x78\x49\x0d\xa5\xa7\xae\xd6\x51\x12\x53\x59\x4e\x46\x32\x34\x18\x7d\xf7\x22\xc5\x6e\xfa\x27\xb8\xbd\xd8\x33\xa3\x37\x3f\x3f\x3d\x3c\x0c\xb8\xb1\xfb\x8e\xdc\x9d\x96\xd6\xe2\x6d\x8e\xd8\x19\xd9\x2a\xf0\x4a\xbe\x68\x75\x7e\xae\xc2\xc0\x7b\x16\xf4\xf5\x24\x8d\xc5\xac\x34\xc2\x1e\xbb\x8d\xd2\xff\x40\xff\x6a\x62\xdc\x6d\xa7\xb5\x58\xcc\x7e\x86\x94\xeb\xc9\xfc\xd4\x8e\xed\x35\xf5\x41\xd6\xdf\xe4\x4e\x61\x18\xc0\x9f\xc6\xda\x7b\xc6\xb2\x0c\xf7\x62\x25\xd6\xef\x2a\x51\x60\xf9\x05\x4f\xe5\x7d\xc9\x51\x94\x58\x95\x15\x44\xf1\xb1\xe2\x51\x53\x28\xad\x9c\x82\xdb\x47\xc2\x68\xd1\x7b\x6c\xa9\x6b\xe3\x74\x23\x9d\x7c\x91\x56\x71\xb6\xed\x4d\x8d\xc5\x1f\xf9\x7a\x8f\xd7\x97\x08\xbd\x4f\x47\x62\xd0\x1d\xa8\x69\x25\x9d\xce\x17\xbd\xeb\x74\xdf\x9a\xb8\x70\x39\x72\xa7\xc3\x6f\x47\x29\x16\x8a\x08\x8a\xa8\xa3\x14\x03\x4b\xb2\x0c\xf6\xa8\x71\xec\x15\x9d\x58\x52\x77\xc6\xba\x30\xb0\x8e\x90\xe3\x99\x01\x40\x21\x1e\x44\x25\xf0\x7e\x5d\x3e\x06\xb2\xad\xf7\xaa\x95\xe0\x9f\xc6\xf7\x95\xc8\xc2\xd6\xe7\x0f\x62\x2d\x30\x63\x32\xc7\xcd\x1b\x06\x3c\xb3\x68\x82\x7a\x33\x99\x28\x96\x0f\xdd\x6e\x71\x36\x71\x3b\x43\x48\x59\xf2\xf5\x36\x5c\x05\x39\xfe\x0a\x8d\x17\x4b\x2e\xbe\xab\xfa\xff\x38\xcd\x36\x72\x5e\xe5\x30\x8d\x0e\xb1\x24\xe3\x0f\xa1\x88\x58\xe2\x19\x9b\x7a\xd3\x68\xe6\xd9\x8f\x00\x00\x00\xff\xff\x9c\x89\xc7\x1b\x03\x03\x00\x00")

func templatesDeleteGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDeleteGoTpl,
		"templates/delete.go.tpl",
	)
}

func templatesDeleteGoTpl() (*asset, error) {
	bytes, err := templatesDeleteGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/delete.go.tpl", size: 771, mode: os.FileMode(420), modTime: time.Unix(1491380433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDeleteMmGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xcd\x6e\xdb\x30\x10\x84\xcf\xe2\x53\x4c\x81\x1e\xec\x22\xa0\xef\x05\x7c\xa8\x23\x26\x2d\x1a\x5b\x81\x2b\xa0\xe8\xa9\x61\x94\xb5\x2d\x84\x22\x93\x25\x85\x36\x10\xf8\xee\x05\x29\xb9\x3f\x69\x03\xf7\x22\xed\x2e\xbe\x9d\x1d\x0d\x34\x0c\x78\xed\x0f\x8e\xc3\xb9\xd1\xde\xe3\xed\x12\xb9\xb3\xba\x23\xc8\x5a\xdf\x1a\x1a\x9f\x9b\x34\x88\x51\x24\xbe\x39\xa2\xb9\x48\xe8\x7a\xfd\x22\x9c\xe5\xd6\xee\x8e\xcc\x09\xf1\xdf\x6d\x4c\xbb\xdd\x71\x2d\x17\x27\x0e\x31\x85\x9e\xed\x4f\x7a\x6c\x5f\xe0\x1f\x74\x73\xaf\xf7\x84\x61\x80\xbc\x9e\xea\x18\x85\x58\x2c\x70\xa9\x36\x6a\xfb\xae\x56\x25\x56\x5f\x70\x5d\x5d\x56\x12\x65\x85\x4d\x55\x43\x95\x1f\x6a\x99\x99\x92\x0c\x05\x42\x38\x64\x85\xc9\x66\x8c\xd8\xb1\xeb\xf2\xf4\x4e\x07\x7d\xab\x3d\x49\xb1\xeb\x6d\x83\xd9\xb3\x94\x63\xc4\x9b\x5f\x41\xc6\x38\x9f\x14\x13\xb7\xbb\x7f\xd0\xac\x3b\x0f\x79\xe1\x98\xda\xbd\xfd\x48\x4f\x1e\xf2\xdc\x99\xbe\xb3\x23\x3c\x23\x66\x10\xb3\xe3\x39\x06\x51\x2c\x16\xf0\x8f\x06\x8f\x3d\xf1\x93\x28\x1a\x67\x7d\x48\x03\x1f\x18\x4b\xdc\x08\x00\x28\xd5\x95\xaa\x15\x2e\xb6\xd5\x3a\x39\xf6\xcd\x81\x3a\x0d\xf9\x69\x7a\xff\x23\xa1\xb4\xf5\xf9\xbd\xda\x2a\x64\x4f\xdf\x0e\xc4\xf4\xa7\xa5\x0c\xdd\x88\x7c\x9f\x7b\x7b\xbc\x5f\xae\xae\xdc\x7e\x36\xde\x3f\x1b\x97\x4d\xeb\xc3\xf3\xdd\xb9\x28\xbe\x9e\xa5\x8f\xc0\x12\x7f\xa5\x23\xcb\x95\x54\xdf\xa9\xf9\x2f\x99\x76\x97\x65\x5e\x2d\x61\x5b\x93\xf2\x28\xa6\x3f\x81\x98\x45\x11\x85\x38\xf6\xb6\x35\x22\x8a\x1f\x01\x00\x00\xff\xff\x32\x52\x9b\x10\xf1\x02\x00\x00")

func templatesDeleteMmGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDeleteMmGoTpl,
		"templates/delete.mm.go.tpl",
	)
}

func templatesDeleteMmGoTpl() (*asset, error) {
	bytes, err := templatesDeleteMmGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/delete.mm.go.tpl", size: 753, mode: os.FileMode(420), modTime: time.Unix(1491380433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesEnumGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x95\xc1\x6b\xdb\x30\x14\xc6\xcf\xd6\x5f\xf1\x66\x06\xb1\x4a\x71\xd8\x65\x87\x42\x0e\x1b\x0d\x65\xb0\x26\x65\xcd\x0a\x63\xec\xa0\xd8\xcf\x8d\x88\x2d\x67\x92\x9c\xb6\x18\xfd\xef\x43\x92\x9d\x58\x49\x56\x42\x6e\x2f\xf2\xd3\xe7\x9f\xbe\xf7\x59\x69\x5b\xf8\x58\xd5\x39\x96\x70\x33\x01\x57\x08\x56\x21\xa4\x53\xd1\x54\xe9\xcc\x96\xc6\x10\xdb\xa4\x56\xb5\xd4\xf7\x7d\xa7\xfb\x75\xa2\x73\xc3\xb2\x35\x7b\x46\x68\x5b\x48\x1f\xba\xda\x18\x42\xc6\x63\xb8\x9b\xce\xa6\x3f\xbe\x2c\xa6\xb7\xf0\xf5\x17\x3c\xcc\xef\xe6\x29\xdc\xce\x61\x36\x5f\xc0\xf4\xf6\xdb\x22\x25\x84\x57\x9b\x5a\x6a\x48\x48\x14\xe7\x4c\xb3\x25\x53\x38\x56\x7f\xcb\x71\x2e\xf9\x16\x65\x4c\xa2\x18\xa5\xac\xa5\x8a\x09\x75\x82\x7b\x74\x63\x80\x2b\xd0\x2b\x84\x91\x7d\xf1\x90\x68\x04\x28\x9a\x0a\xf4\xdb\x06\xa1\x90\x75\x05\x2a\x5b\x61\xc5\x7c\xe3\xa3\xaf\x8d\x19\xa5\xc4\x75\x04\x92\x0d\x17\xfa\xd3\x67\x42\xb2\x5a\x28\x8b\x05\xf6\xb1\x64\xe2\xb9\x3f\xf4\x13\x2b\x1b\x54\xf6\x7c\xd1\x01\x4e\xdb\x42\x56\x32\xa5\xbc\x43\xdf\xd9\xf2\x18\xb2\x5f\x1c\x05\x1b\x53\x12\x9d\xa1\x33\x09\xf6\x24\x56\x6e\x2e\x73\x94\x60\x0c\xf5\x98\x28\x72\xcb\xe5\x8d\x7a\xd4\x92\x8b\x67\x90\xa8\x1b\x29\x3c\x82\xf2\x4b\x5b\x7b\x02\xa8\x0b\xb7\x16\x72\x14\x8d\xc8\x20\x39\x98\xbc\x31\x41\x17\xed\xa4\x13\xda\x0b\xb6\x24\xda\x32\xe9\x3c\x7f\x62\x65\xb7\x4a\x48\xa4\x5e\xb8\xce\x56\x70\x42\xee\x3d\x5b\x01\x32\xa6\xf0\x0c\x67\x6f\x08\x00\xec\xde\x3a\x81\x78\xe8\x70\x1c\x58\x12\x19\x42\x22\x6f\x45\xbf\x81\xf8\x80\xde\x33\xa9\x56\xac\x5c\xe0\xab\x86\xca\xd7\xea\x20\x64\x42\xd7\xa0\xf1\x55\x9f\x6b\xcf\x40\x32\xa1\x90\xfc\xfe\xb3\x7c\xd3\x78\x0d\x2e\xc7\xd4\x9a\xd5\x81\xf8\x07\xc7\x72\x69\xef\x2f\xbd\x06\xc1\x7b\xd0\x9f\xa2\x1a\xa0\x36\xe2\x34\xac\x4b\xfb\xfb\xb0\x57\x21\x6d\xa0\x9b\xd8\xad\x1d\x18\xf5\xc4\x16\xb8\x1b\xa4\x1f\xac\xeb\xa1\x67\xcd\x30\x9c\x88\x9f\xd7\xd5\x31\xd1\xe4\x8c\x61\x87\xe3\xcc\xb1\x60\x4d\xa9\x6f\x48\xb4\x9b\xaa\xbb\x25\xd2\x19\xbe\x24\x31\x17\x5b\x56\xf2\x3c\x50\x8d\x69\x10\x82\xbd\xaf\x0e\x1a\x14\xd3\x5c\x15\x1c\xbb\x0f\x65\x77\x01\xf9\x33\x49\x1b\x02\x94\x05\xcb\x10\x0a\x6b\xc9\x05\x1f\x8d\x13\xb2\x79\x18\x0a\x9f\x48\xc5\xff\xe3\x30\x4c\xc3\x63\xc6\xc4\x01\xf4\xf0\xfa\x4c\xed\x73\x71\x21\xf7\x41\x40\xac\x54\xa2\x64\xb6\xd7\x6a\xcd\x20\x1b\xcb\xa6\xb8\x86\x7a\xed\xfe\x1f\x64\x96\x76\x71\xa7\x24\xe2\x05\x7c\xa8\xd7\xb6\xe5\xc2\x19\x1d\x3b\x11\x66\x75\xd9\x14\x94\x18\xf2\x2f\x00\x00\xff\xff\x03\xad\xac\x2a\xcd\x06\x00\x00")

func templatesEnumGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesEnumGoTpl,
		"templates/enum.go.tpl",
	)
}

func templatesEnumGoTpl() (*asset, error) {
	bytes, err := templatesEnumGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/enum.go.tpl", size: 1741, mode: os.FileMode(420), modTime: time.Unix(1491378817, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFindGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x53\x4d\x8f\xda\x30\x10\x3d\xc7\xbf\x62\xba\xca\x01\x2a\x14\xd4\x6b\x25\x0e\x85\x64\xb7\x48\xbb\x40\x21\x55\xd5\xdb\x7a\x93\x81\x8d\x36\xb1\xc1\x4e\xca\x46\x91\xff\x7b\xe5\xd8\x59\xbe\x43\xdb\x43\xb5\x07\x60\x3c\xf3\xfc\x3c\xf3\xe6\x51\x55\xe0\xca\x67\x2e\xf2\x51\x4a\xa5\x84\xcf\x03\xa8\x4f\x8c\x66\x08\x5e\x48\x9f\x52\x34\xdf\x13\x9d\x50\x8a\x68\x7c\xd4\x40\xeb\xa0\x15\x5a\x93\x3d\xf0\x18\xd3\x2b\xd4\xfb\x4d\xd8\xbb\x59\x73\xad\x0e\x5a\x9f\x11\x98\x17\x82\xbd\x61\xed\xf1\x1c\x7a\x4d\xa3\x17\xba\x42\xa8\x2a\xf0\x66\x36\x56\x8a\x90\x7e\x1f\xee\x82\x49\x30\xff\x12\x06\x3e\x0c\x7f\xc2\x6c\x7a\x37\xf5\xc0\x9f\xc2\x64\x1a\x42\xe0\x8f\x43\xaf\xc6\xdc\x26\x2c\x06\x0a\x39\xd2\x0c\x9e\x4a\xb8\xa9\x2a\x58\x8b\x24\xa3\xa2\x34\xfd\x8d\x78\x5a\x64\x4c\x8f\x70\x43\x96\x05\x8b\xa0\x73\x24\xb0\x52\xf0\x71\xa7\xa1\x52\xdd\x9a\xb2\x73\x99\x07\x76\xa5\xbc\x5c\x1f\x94\xba\x86\xdd\x4e\x6b\xa0\x56\x35\xa5\x7a\x80\x42\xe8\x0f\x17\x5d\xa8\x88\xd3\xef\x83\xdc\xa4\x20\x31\xc5\x28\x87\x4d\x81\xa2\xec\x35\xc4\xf0\x82\x25\xac\x05\xff\x95\xc4\x18\xeb\xb9\x24\x6e\x0a\x64\x11\x12\x47\x6e\x52\x99\x0b\xad\xec\x23\x01\x00\x58\x04\xf7\xc1\x28\xd4\x2f\x2d\x13\x4c\x63\xb9\xdf\x4f\x0d\xb8\x9d\x4f\x1f\x74\x59\x46\xcf\x98\x51\xf0\x16\xf6\xf7\xcc\x2e\x34\xfc\xc7\xd7\x60\x1e\x40\xcb\xf8\x03\x70\x3f\x3d\x12\xe2\xf8\xc3\x7b\xbe\xea\x98\x76\x7a\x2d\x17\xba\xc4\x11\x7c\xab\x1b\x3e\x51\xde\xf3\x87\xde\x37\x3d\xf8\x9c\x6f\xff\x8c\x49\x4b\x38\x00\xc1\xb7\xde\x22\xa2\x4c\xab\xbd\xe2\xc7\x73\xef\xf4\xef\x12\x27\x59\xd6\xb2\x7f\x18\x00\x4b\x52\x2d\xbb\x63\xab\x07\x8b\xaa\x77\x43\x1c\x45\xc8\x85\x32\x4b\x52\xa2\x88\xb6\xb6\xa0\x6c\x85\xe0\x26\xf1\xab\x1e\xc9\x1b\xb3\x18\x5f\xb1\xf9\x8b\x24\x4b\xf0\xc6\xf2\x3b\x4b\x36\x85\x16\xd4\x64\x18\xcf\x75\x76\x66\x57\x6b\x90\x86\x66\x7f\x57\xd6\xcc\xc3\xb2\x59\x65\x53\xb5\xdb\x81\xa5\xb1\xfa\xbe\xa7\x1a\xcb\x1f\x22\xff\xca\xe9\x17\xdf\xeb\x9c\xf0\xbe\x99\xcc\xf8\xde\xa7\x39\x0d\x75\xf4\x4e\x8c\xef\x5e\x71\xbe\xdb\x58\xdf\xbd\xea\xfd\xa3\xb9\x2f\x5a\xfe\x10\xf7\x0f\x4e\x3f\x21\x68\x31\xb8\xfb\x1f\x1c\x5e\x55\x80\x2c\xb6\x1e\x35\xd1\x99\x14\xf9\x1d\x00\x00\xff\xff\x4e\x35\x32\x73\xa5\x06\x00\x00")

func templatesFindGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesFindGoTpl,
		"templates/find.go.tpl",
	)
}

func templatesFindGoTpl() (*asset, error) {
	bytes, err := templatesFindGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/find.go.tpl", size: 1701, mode: os.FileMode(420), modTime: time.Unix(1491912678, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFindMmGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x91\x41\x8f\xda\x3c\x10\x86\xcf\xf1\xaf\x78\x3f\xe9\x3b\x40\x85\xcc\xbd\x12\x87\x02\x61\x5b\x75\x81\x2d\x44\xaa\x7a\x5b\x6f\x32\x80\x85\x63\x83\x9d\x14\x45\x91\xff\x7b\x65\x87\x2d\x0b\x2d\xda\x1e\x92\xd8\x99\x67\xc6\x33\x8f\xdb\x16\xff\xbb\x9d\xb1\xd5\x44\x09\xe7\xf0\x71\x84\xb8\xd3\xa2\x24\xf0\x4c\xbc\x28\xea\xde\x8b\xf0\xc3\x7b\x16\xf8\xfc\x15\x8d\x8b\x80\xce\xe7\x77\xe1\x58\x6e\x6e\x0a\x52\xef\x14\x7f\xdb\xc6\x39\xb7\x7c\x4d\x8b\x8b\x77\x0e\xb2\x54\xd5\x56\xff\xa6\xbb\xed\x1d\xfe\x20\xf2\xbd\xd8\x12\xda\x16\xfc\xe9\xbc\xf6\x9e\xb1\xe1\x10\x0f\xe9\x22\x5d\x7d\xca\xd2\x29\xc6\x3f\xf0\xb4\x7c\x58\x72\x4c\x97\x58\x2c\x33\xa4\xd3\x2f\x19\x8f\xcc\x4c\xea\x02\x02\x15\x89\x12\x2f\x0d\x64\xc1\x36\xb5\xce\xd1\xbb\x91\xe9\x3d\x3e\x5c\x7c\x79\xdf\x8f\x89\x81\xda\xec\x0f\xc2\x8a\xd2\x81\xcf\x8c\x25\xb9\xd5\x5f\xa9\x71\xe0\x13\xa3\xea\x52\x77\x68\xef\xcd\x4c\xde\xe3\xa2\xc3\xfb\x01\xc8\xda\xf0\x18\xdb\x47\xcb\x92\xe1\x10\xee\xa8\xe0\x48\x51\x5e\xe1\x58\x93\x6d\x06\x38\x58\x59\x0a\xdb\x60\x4f\x0d\x0e\xd6\xfc\x94\x05\x15\xa1\x59\x47\xc7\x9a\x74\x4e\x2c\x71\x47\xe5\x2a\x1b\x84\x3d\x33\x00\x58\xa7\x8f\xe9\x24\x0b\x27\x6d\x24\xa9\xe2\xaa\x9f\x08\xcc\x56\xcb\x79\x08\xbb\x7c\x47\xa5\x00\x5f\x9f\xbf\x7f\x11\x1c\xf0\xef\x9f\xd3\x55\x1a\xcb\xed\x4f\x3b\xb2\x74\x3d\xac\xf7\xcf\x8c\x25\xd3\xf1\xa3\xd9\xf6\xba\x4e\x06\x1d\xab\xa4\xab\x6e\xd1\x3e\x4b\xac\x39\x85\x56\xff\x50\xcc\xa7\x63\xfe\x2d\x8c\xbc\x32\xa7\x7f\x2a\x14\xdc\x8d\x60\xcd\x89\xaf\x73\xa1\x83\xe6\xad\xb9\x1d\xf8\x22\xbe\xcf\x12\xb9\x89\xbe\xff\x1b\x41\x4b\x15\x7c\x27\xe7\xe8\xd5\x0d\xc5\x4b\x61\x89\x67\xec\x4e\x58\x4b\xc5\x3c\xfb\x15\x00\x00\xff\xff\xbb\xbb\x5c\x5d\x70\x03\x00\x00")

func templatesFindMmGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesFindMmGoTpl,
		"templates/find.mm.go.tpl",
	)
}

func templatesFindMmGoTpl() (*asset, error) {
	bytes, err := templatesFindMmGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/find.mm.go.tpl", size: 880, mode: os.FileMode(420), modTime: time.Unix(1491380433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesInsertGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x53\x5d\x6f\xda\x3c\x18\xbd\x8e\x7f\xc5\x79\xd1\x2b\x95\xac\x99\xd9\xf5\xa4\x5e\xb4\x25\xab\x98\xba\xd0\x41\xba\x69\x77\xb8\x89\xa1\x56\x8d\x1d\x6c\xa7\x15\x8a\xfc\xdf\x27\x9b\xb0\xae\x80\xba\x8b\x24\xfe\x38\x3e\xcf\x79\xce\x71\xba\x0e\xff\xdb\x47\x6d\xdc\xb5\x64\xd6\xe2\xf3\x05\xe2\x4c\xb1\x35\x07\x2d\xd9\x83\xe4\xbb\x77\x11\x16\xbc\x27\x01\x5f\xed\xa1\x71\xf0\x2e\x34\x92\x7d\xd3\x35\x97\xff\xa0\xfe\x5b\x44\x7f\x76\xbd\x3f\x16\x07\xef\x96\x31\xdc\xb5\x46\xfd\xc1\xf6\xd3\x53\xe8\x86\x55\x4f\x6c\xc5\xd1\x75\xa0\x77\xfd\xd8\x7b\x42\x46\x23\xdc\xe4\x45\x3e\xbb\x2c\xf3\x31\xae\x7e\xe1\x6e\x7a\x33\xa5\x18\x4f\x51\x4c\x4b\xe4\xe3\x49\x49\x23\x66\xa2\x2c\x37\x0e\xee\x31\x32\xf4\x12\xbd\x87\xd3\x71\xad\x66\x8e\x3d\x30\xcb\x29\x59\xb6\xaa\xc2\xf0\xc0\x5d\xef\xf1\xe1\xd5\x40\xef\xd3\x9e\x6f\x78\x60\xd5\x1e\xb7\xa7\x4f\x77\x4c\x7d\x5b\xde\xbf\xa9\x9d\x81\x1b\x13\x1e\x6d\x52\x74\x24\x19\x8d\xb0\xe2\x0e\x4c\xca\x28\x49\x69\xf5\x51\x09\x89\xa5\xe0\xb2\xb6\x60\xaa\x46\x63\x78\xc3\x0c\x0f\xdb\x6b\x2c\xb5\x89\xb8\x4d\xcb\xcd\x96\x24\x55\x06\x91\xe1\x39\x58\x19\x57\xe6\x52\x54\xdc\x1e\x37\x42\x57\xdc\x7d\x89\x94\xc7\xe2\xd3\x0c\x9f\x52\x12\x95\xd8\x8d\x84\xd8\x79\x16\xe9\x32\x34\x46\xac\x99\xd9\xe2\x89\x6f\xd1\x18\xfd\x2c\x6a\x5e\xe3\x61\x0b\xcb\x37\x2d\x57\x15\x27\x89\xdd\x48\xeb\x4c\x50\xb0\x20\xc9\xa4\x98\xe7\xb3\x12\x93\xa2\x9c\x86\xae\x6d\xf5\xc8\xd7\x0c\x74\xde\x7f\x8f\x13\xc6\x70\x81\x73\x58\x67\x84\x5a\x59\xfa\x55\x0b\x35\xac\x32\x0c\x32\x0c\x52\x9c\x63\x91\x92\xe4\xc7\xe5\xed\x7d\x3e\x3f\x81\x13\x6f\x71\xb3\xbc\xbc\x9f\x15\x93\xe2\x26\x14\xee\xed\xa3\xd7\x5a\xb6\x6b\x15\x1c\x58\x10\x92\x8c\xaf\x6e\xf5\x6a\xb8\x13\x9c\xe1\x99\x52\x9a\x92\xc4\xe8\x97\x20\xfe\xd8\xb2\xf1\x15\xfd\x1e\x4c\x98\xe9\x97\xc3\x33\x21\xc2\x0b\x18\xfd\x42\xe7\x15\x53\xc1\xd2\x95\x3e\x2c\xf9\x9a\x7f\x4a\x12\xb1\x8c\xb1\xff\x77\x81\x10\x6e\x47\x12\xa0\xdf\x7e\x73\x53\xb2\xdd\xc5\xb0\xf4\xa7\x61\xcd\x90\x1b\x93\x61\x50\xe9\x56\xd6\x50\xda\xed\x93\x11\xca\x69\x9c\x85\x3f\xe2\xd8\xce\xb3\x41\x4a\x12\x4f\x48\x72\x9a\x5d\x09\x49\x3c\xf9\x1d\x00\x00\xff\xff\xa3\x27\xb6\x3a\x45\x04\x00\x00")

func templatesInsertGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesInsertGoTpl,
		"templates/insert.go.tpl",
	)
}

func templatesInsertGoTpl() (*asset, error) {
	bytes, err := templatesInsertGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/insert.go.tpl", size: 1093, mode: os.FileMode(420), modTime: time.Unix(1491380433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesInsertMmGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x53\x5d\x4f\xdb\x3c\x18\xbd\x8e\x7f\xc5\x79\xab\x57\xa2\x19\x99\xbb\xeb\x49\x5c\x00\xcd\x50\x27\x48\x59\x1b\x36\xed\xae\x26\x71\x8b\x85\x6b\xb7\xb6\x03\xaa\x22\xff\xf7\xc9\x4e\x3a\x46\x0b\xe2\x22\x89\x3f\x8e\xcf\x73\x9e\x73\x9c\xb6\xc5\xff\xf6\x41\x1b\x77\x29\x99\xb5\xf8\x7a\x86\x38\x53\x6c\xcd\x41\x4b\x76\x2f\x79\xf7\x2e\xc2\x82\xf7\x24\xe0\xab\x3d\x34\x0e\x02\xf4\xe6\xe6\x5d\x70\xa4\xbb\xd1\x35\x97\x1f\x90\xff\x2b\xa3\x3f\xbb\xde\x1f\x8b\x83\x0f\x0a\x19\xee\x1a\xa3\xfe\xa2\xbb\xe9\x3b\xf8\x0d\xab\x1e\xd9\x8a\xa3\x6d\x41\x6f\xfb\xb1\xf7\x84\x8c\x46\xb8\xca\x8b\x7c\x76\x5e\xe6\x63\x5c\xfc\xc6\xed\xf4\x6a\x4a\x31\x9e\xa2\x98\x96\xc8\xc7\x93\x92\x46\xcc\x44\x59\x6e\x1c\xdc\x43\x64\xe8\x65\x7a\x0f\xa7\xe3\x5a\xcd\x1c\xbb\x67\x96\x53\xb2\x6c\x54\x85\xe1\x81\xc7\xde\xe3\xd3\x8b\x8d\xde\xa7\x3d\xdf\xf0\xc0\xae\x3d\x6e\x4f\x9f\x76\x4c\x7d\x9f\xde\xbf\xaa\x9d\x81\x1b\x13\x1e\x6d\x52\xb4\x24\x19\x8d\xb0\xe2\x0e\x4c\xca\x28\x49\x69\xf5\x59\x09\x89\xa5\xe0\xb2\xb6\x60\xaa\xc6\xc6\xf0\x0d\x33\x3c\x6c\xaf\xb1\xd4\x26\xe2\xb6\x0d\x37\x3b\x92\x54\x19\x44\x86\xa7\x60\x66\x5c\x99\x4b\x51\x71\x7b\xdc\x08\x5d\x71\xf7\x2d\x52\x1e\x8b\x4f\x33\x7c\x49\x49\x54\x62\xb7\x12\xa2\xf3\x2c\xd2\x65\xd8\x18\xb1\x66\x66\x87\x47\xbe\xc3\xc6\xe8\x27\x51\xf3\x1a\xf7\x3b\x58\xbe\x6d\xb8\xaa\x38\x49\xec\x56\x5a\x67\x82\x82\x05\x49\x26\xc5\x3c\x9f\x95\x98\x14\xe5\x34\x74\x6d\xab\x07\xbe\x66\xa0\xf3\xfe\x7b\x9c\x30\x86\x0b\x9c\xc2\x3a\x23\xd4\xca\xd2\xef\x5a\xa8\x61\x95\x61\x90\x61\x90\xe2\x14\x8b\x94\x24\x3f\xcf\xaf\xef\xf2\xf9\x1b\x38\xf1\x1a\x37\xcb\xcb\xbb\x59\x31\x29\xae\x42\xe1\xde\x3e\x7a\xa9\x65\xb3\x56\xc1\x81\x05\x21\xc9\xf8\xe2\x5a\xaf\x86\x9d\xe0\x0c\x4f\x94\xd2\x94\x24\x46\x3f\x07\xf1\xc7\x96\x8d\x2f\xe8\x8f\x60\xc2\x4c\x3f\x1f\x9e\x09\x11\x9e\xc1\xe8\x67\x3a\xaf\x98\x0a\x96\xae\xf4\x61\xc9\x97\xfc\x53\x92\x88\x65\x8c\xfd\xbf\x33\x84\x70\x5b\x92\x00\xfd\xf6\xab\x9b\x92\x75\x17\xc3\xd2\x5f\x86\x6d\x86\xdc\x98\x0c\x83\x4a\x37\xb2\x86\xd2\x6e\x9f\x8c\x50\x4e\xe3\x24\xfc\x11\xc7\x76\x9e\x0c\x52\x92\x78\x42\x92\xb7\xd9\x95\x90\xc4\x93\x3f\x01\x00\x00\xff\xff\x99\xbc\x8b\x69\x4b\x04\x00\x00")

func templatesInsertMmGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesInsertMmGoTpl,
		"templates/insert.mm.go.tpl",
	)
}

func templatesInsertMmGoTpl() (*asset, error) {
	bytes, err := templatesInsertMmGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/insert.mm.go.tpl", size: 1099, mode: os.FileMode(420), modTime: time.Unix(1491380433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x92\x5f\x6b\xdb\x30\x14\xc5\x9f\x7d\x3f\xc5\x21\x0c\xea\x2c\x46\x66\xaf\x83\x3e\xac\x4b\x28\x85\xd1\x74\x6d\x5e\x46\xe9\x83\x22\x5f\x3b\x5a\x6d\xc9\x95\x64\x27\x21\xf8\xbb\x0f\x39\xe9\xbf\x41\xde\x2e\x57\xe7\x77\x8e\x74\x50\x2b\xd5\xb3\xac\x18\x87\x03\xc4\xdd\x69\x1e\x06\x22\xdd\xb4\xd6\x05\xa4\x94\x4c\x7c\x70\xca\x9a\x7e\x42\x94\x4c\x2a\x1d\x36\xdd\x5a\x28\xdb\xe4\x7f\xa5\x7a\x56\x79\x5b\xed\x26\x34\x25\xca\x73\x5c\x2f\x6e\x17\xf7\x3f\x56\x8b\x39\xae\xfe\xe0\x6e\x79\xbd\x14\x98\x2f\x71\xbb\x5c\x61\x31\xbf\x59\x89\x51\x33\xbf\x82\xf6\x08\x1b\x86\xb2\x4d\x63\x0d\xb4\x09\xec\x4a\xa9\x18\xa5\x75\x28\x64\x90\x6b\xe9\x19\xb6\x65\x27\x83\xb6\x26\x8a\x65\x80\x92\x06\x6b\x46\xe7\xb9\xc0\x56\x87\x4d\xf4\x0a\xfb\x96\x3d\x4a\x67\x1b\x78\xb5\xe1\x46\xe2\x22\xbe\xe2\xe1\x38\x0f\xc3\x85\xa0\x3c\x8f\xc2\xd5\x46\x7b\xf8\x8d\xed\xea\x02\x5b\xeb\x9e\x47\x87\xb7\xac\xdc\xbf\xd4\x62\x7e\x05\x69\x8a\xcf\xbb\xd5\x4e\x50\xcc\x18\x2f\xfd\x76\xcd\x03\x25\x8b\x1d\xab\xd4\x07\xa7\x4d\x95\x41\x08\xf1\x76\x78\x18\xa6\x48\xdb\x6a\x27\x7e\xda\xa6\x91\xa6\x58\xc9\x2a\x03\x3b\x67\xdd\x94\x92\xdf\x1d\xbb\xfd\x79\xec\x6b\xe4\xee\xed\xd6\xff\x47\xdc\xdb\xed\x59\xe8\x95\xa1\xe1\x54\xee\x2f\x5b\xa1\x75\xb6\xd7\x05\x1f\x5b\xae\x6d\x85\xb2\x33\xea\xd8\xdc\x7a\x8f\x8a\x4d\x6c\x96\x0b\xbc\x74\xec\x34\x7b\x41\xbd\x74\x27\xf4\x72\xd4\x9e\x8d\x3b\x0c\x44\xa3\x59\x44\xf7\x0f\xb5\x56\xec\xd3\x52\x73\x5d\x78\x34\xb2\x7d\x3c\x72\x4f\x1f\x98\x0c\xb6\x2c\x3d\x87\xd8\xdf\x14\xa9\xc2\xe3\xd3\xab\xb9\xfe\x30\xf7\x78\x7c\xfa\x9c\x44\x89\xc1\xf7\xcb\x57\x7a\x86\x6f\x94\xc4\xff\xa1\x6c\x9d\xa1\x97\x75\x3c\x73\xd2\x54\x8c\x53\xfc\x81\x92\x44\xe1\x12\xb2\x6d\xd9\x14\xa9\xca\xa2\x74\x4a\x49\xa2\xdf\x97\x3a\xc3\xe4\xcb\x64\x76\xfa\xce\xe2\x26\x58\x99\x9a\x69\x14\xf5\xef\xa2\x7e\xf4\x8f\x4b\x33\x9b\x51\x32\x50\xe2\x38\x74\xce\x40\x65\xd0\x19\x7a\x1a\xe8\x5f\x00\x00\x00\xff\xff\xd0\x1e\x85\xd6\x33\x03\x00\x00")

func templatesModelGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGoTpl,
		"templates/model.go.tpl",
	)
}

func templatesModelGoTpl() (*asset, error) {
	bytes, err := templatesModelGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.go.tpl", size: 819, mode: os.FileMode(420), modTime: time.Unix(1491380406, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTableGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xc1\x8e\x9b\x30\x10\x3d\xe3\xaf\x98\x46\x3d\x24\xd5\x96\xbd\x47\xca\xa1\xac\xe9\xaa\x87\xc2\xaa\xe2\x52\x45\x91\xe2\xc0\x40\x68\xc1\x20\x6c\x54\x45\x96\xff\xbd\xb2\xc1\x49\x9b\x6c\x20\x17\x34\x1e\xbf\x99\xe7\x37\xf3\x50\x0a\x3e\x8a\x63\xd3\xc9\x97\x8a\x09\x01\xeb\x0d\xd8\x13\x67\x35\x82\x9f\xb0\x43\x85\xc3\x37\x32\x09\xad\x89\xc1\xa7\x0e\x6a\x83\x49\xa8\x6d\xf6\xbd\xc9\xb0\x9a\x69\xfd\xef\x23\xc6\xda\xda\x95\xd9\xe0\x2e\x4d\xcb\xd2\xdf\xac\x40\x50\x0a\xfc\xb7\x31\xd6\x9a\x90\xe7\x67\x78\x0d\xa3\xf0\xc7\x97\x24\xa4\x10\xfc\x84\xb7\xf8\x35\xf6\x81\xc6\x10\xc5\x09\x84\xf4\x5b\xe2\x5b\x8c\x52\xd3\x32\x86\x5b\x22\x4f\x2d\xce\x63\x85\xec\xfa\x54\x82\x22\x1e\x0d\x80\x06\x44\x3b\x8a\x49\x09\xc3\xed\x99\x62\x1a\x7b\xa6\x00\x83\xed\x18\x2f\x10\xfc\x97\xa6\xea\x6b\x6e\x27\x67\xd3\x79\x89\x55\xe6\xd2\xae\xd2\xe5\x2d\x8f\x4f\x99\x64\x89\x89\xb4\x86\xfd\x2f\xd1\xf0\xf5\xc2\x4c\xf0\xbf\x92\xa7\xa6\x2e\x25\xd6\xad\x3c\x2d\xf6\x4a\x01\xf2\xcc\x30\x0c\xa2\x22\xfc\xf3\xa0\xae\xbc\xe7\xe9\x23\xf0\x65\x76\x00\x1a\xac\xe6\xa7\xac\x88\xd7\xa1\xec\x3b\x3e\x0b\x55\xc4\xf3\x68\xb0\x86\xec\xf0\x44\x3c\xf7\xf2\x02\xe5\x57\x33\x07\x01\x39\xca\xf4\x08\xf2\x88\xc0\x1b\xfe\x99\x97\xd5\x30\x20\x31\x3c\x79\x79\xf5\x6f\x68\x0d\x9f\x2e\xf6\xd7\x7a\x75\xe9\xb4\xbc\xf2\xba\x83\xd6\xe3\x69\x05\x35\x6b\xb7\x42\x76\x25\x2f\x76\x25\x97\xd8\xe5\x2c\x45\x65\xa5\x0c\x94\xd6\xe7\xef\x62\x94\x26\xf7\x77\x5d\xe6\x70\x43\xed\xdf\x33\xc0\x87\x0d\x18\x8d\xc6\x3a\x30\x2a\xdd\xde\x2e\x7d\xb1\x83\xcd\xe3\x4d\x09\xc0\xe8\xb9\xd1\x1d\xe7\xdd\x8c\xa3\xd4\xe4\x6f\x00\x00\x00\xff\xff\x48\x1a\x46\xbb\x63\x04\x00\x00")

func templatesTableGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTableGoTpl,
		"templates/table.go.tpl",
	)
}

func templatesTableGoTpl() (*asset, error) {
	bytes, err := templatesTableGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/table.go.tpl", size: 1123, mode: os.FileMode(420), modTime: time.Unix(1491378840, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTableMmGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x52\x4d\x8f\x9b\x30\x10\x3d\xe3\x5f\x31\x8d\x7a\x48\xaa\x2d\x7b\x8f\x94\x43\x59\xd3\x55\x0f\x81\x55\xc5\xa5\x5a\x45\x8a\x03\x03\xa1\x05\x83\xb0\x51\x15\x59\xfe\xef\x95\x6d\x20\x21\x1f\x6d\x2f\xd1\xe4\xf1\x66\xe6\x3d\xbf\x51\x0a\x3e\x8a\x63\xd3\xc9\x97\x8a\x09\x01\xeb\x0d\xd8\x7f\x9c\xd5\x08\x7e\xc2\x0e\x15\xba\xdf\xc8\x00\x5a\x13\xc3\x4f\x47\xaa\x2d\x0c\x75\xbb\x7d\x48\xb6\xe3\xb6\x4d\x86\xd5\x3f\x86\x5f\xca\x18\x7a\xeb\xb1\xcd\x16\x7f\x59\xd4\xb2\xf4\x17\x2b\x10\x94\x02\xff\x6d\xa8\xb5\x26\xe4\xf9\x19\x5e\xc3\x28\xfc\xfe\x25\x09\x29\x04\x3f\xe0\x2d\x7e\x8d\x7d\xa0\x31\x44\x71\x02\x21\xfd\x96\xf8\x96\x73\x36\xa5\xb5\x33\x45\xe4\xa9\xc5\x39\x2e\x64\xd7\xa7\x12\x14\xf1\x68\x00\x34\x20\x7a\x6a\x75\x32\xb5\x76\x32\xcf\xad\x13\x3e\xb5\x82\xc1\x3b\xc6\x0b\x04\xff\xa5\xa9\xfa\x9a\x5b\xaf\x16\xce\x4b\xac\xb2\x11\x1e\x8c\x4d\xb8\x9d\xe9\x53\x26\x59\x62\x2a\xad\x61\xff\x53\x34\x7c\xbd\x30\x8e\x67\x2d\x4f\x4d\x5d\x4a\xac\x5b\x79\x5a\xec\x95\x02\xe4\x99\xd9\xe0\xc4\x46\xf8\xfb\x8e\xde\xbc\xe7\xe9\xf5\xa7\x65\x76\x00\x1a\xac\xe6\x2f\xa0\x88\xd7\xa1\xec\x3b\x3e\x83\x15\xf1\x3c\x1a\xac\x21\x3b\x3c\x11\x6f\xdc\x54\xa0\xfc\x6a\x74\x0b\xc8\x51\xa6\x47\x90\x47\x04\xde\xf0\xcf\xbc\xac\x9c\x21\xe1\xd6\x2e\xaf\xee\x4f\x6b\xf8\x74\x39\x7c\x75\x9e\xb4\xbc\xba\xa6\x91\x3a\x4a\x5e\x41\xcd\xda\x77\x21\xbb\x92\x17\xbb\x92\x4b\xec\x72\x96\xa2\xb2\xb2\xdd\x4a\x7b\x49\x77\x39\x4a\x93\xc7\xd9\x94\x39\xdc\xac\xf6\x1f\x05\xf6\x61\x03\xc6\xa3\x89\x1a\x06\xa7\xef\xb7\x21\x2d\x76\xb0\xf9\xff\xa1\x04\x60\xb8\x91\x21\xcd\x29\x87\xe1\x29\x35\xf9\x13\x00\x00\xff\xff\x98\xf3\xfb\x8b\xc7\x03\x00\x00")

func templatesTableMmGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTableMmGoTpl,
		"templates/table.mm.go.tpl",
	)
}

func templatesTableMmGoTpl() (*asset, error) {
	bytes, err := templatesTableMmGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/table.mm.go.tpl", size: 967, mode: os.FileMode(420), modTime: time.Unix(1491378843, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUpdateGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xdf\x6f\xda\x30\x10\x7e\xb6\xff\x8a\x5b\x54\x69\xc9\x9a\x19\xf5\x75\x12\x0f\x6d\xc9\xba\xee\x07\x30\xa0\x9a\xa6\x69\x12\x6e\x38\xc0\x6a\xe2\xa4\xb6\x03\x42\x91\xff\xf7\x29\x76\x28\x50\x18\xdb\x0b\xd8\xbe\xef\xbe\xfb\xee\xee\x4b\x5d\xc3\x85\x5e\x16\xca\xdc\x66\x5c\x6b\xf8\xd0\x05\x77\x93\x3c\x47\x60\x13\xfe\x98\xa1\xff\xed\x37\x0f\xd6\xd2\x06\x9f\x6e\xa1\xee\x70\x16\xea\xc8\xbe\x15\x33\xcc\xfe\x41\xbd\x2f\xa2\xcd\xcd\xb7\x69\xee\x70\xb6\x8c\x42\x53\x29\xf9\x82\x6d\xaf\xa7\xd0\x25\x4f\x9f\xf8\x02\xa1\xae\x81\x0d\xdb\xb3\xb5\x94\x76\x3a\x70\x97\xf4\x93\xd1\xf5\x24\xe9\xc1\xcd\x4f\x18\x0e\xee\x06\x0c\x7a\x03\xe8\x0f\x26\x90\xf4\xee\x27\x8c\x52\x91\x97\x85\x32\x10\x52\x12\xa0\x52\x85\xd2\x01\x25\x81\x36\x4a\xc8\x85\x0e\x68\xe4\x48\x1e\xca\x19\x37\x08\x66\xe9\x4a\xb4\x3d\x58\x0b\x8f\x1b\xf7\x36\x54\x22\xe7\x6a\x03\x5f\x70\x43\xe7\x95\x4c\x21\x7c\xb5\x00\x6b\xe1\xdd\x6e\xc6\xd6\x46\x2d\x63\x83\x2b\x7d\xb2\x9f\xc4\x6d\x91\x55\xb9\x74\x09\xbb\x90\xd9\x94\x07\xa1\x18\x5e\x2d\x61\x4b\xbf\xd5\x15\x79\x01\xed\xc0\x3c\xd7\x4b\x30\x06\x54\x0a\x5c\xab\x11\xd4\x94\xcc\x05\x66\x33\xb7\xf8\x23\xd1\x6c\x81\xe6\xa3\x0b\x87\x47\x15\x23\x4a\x49\xa7\x03\x73\xa1\xb4\x81\x74\x89\xe9\x13\x88\x39\xac\x11\x96\x7c\xe5\x27\xd5\xaa\x87\x27\xdc\x50\x22\xe6\x70\xa6\xd7\x6e\x17\xa4\xc8\x1a\x35\xa4\x15\x7d\xa0\x3f\xf6\x72\x35\xeb\xe3\x3a\x9c\xee\xf1\x42\xf0\x77\xd2\x00\xf2\x4a\x1b\x78\x44\x90\x85\x7c\x2f\x45\x36\x8d\x28\xb1\x5e\xf5\xac\x90\x6f\x0d\x54\xbb\xad\x1e\x68\x9d\x61\x86\x06\x43\x3f\x98\xf8\x6c\x8d\x76\x0a\xa5\xc2\x92\x2b\x4f\xa5\x33\x91\xa2\xa6\x24\x8d\x41\xc4\xb0\x6a\x06\xfb\x5c\xa1\xda\x8c\xdd\xfb\x0b\xeb\x55\x9b\xaa\x9f\x33\x1f\xa7\x44\x3f\x67\xda\xa8\x26\x61\xfa\x30\xec\x5d\x4f\x92\x66\x0a\x3a\x5d\x62\xce\x81\x8d\xdb\xff\x63\xf7\xc3\x38\x99\x40\x38\x85\x4b\x4a\x48\xeb\x5b\xf6\xb9\x10\x32\x4c\x63\x08\x62\x08\x22\xb8\x84\x69\x04\xdd\x93\x18\xb1\x8f\xa1\x84\xfc\xf8\x94\x8c\x92\xb3\xab\x82\x8b\x2b\x4a\xc8\x28\x99\x3c\x8c\xfa\xf7\xfd\xbb\x06\xdb\x5a\x68\x0f\x36\xf5\xcd\xa9\x4a\x6e\x9b\x5b\xf1\xac\x42\x67\x33\x5e\x96\x28\x67\xe1\xaf\xdf\x42\x1a\x54\x73\x9e\x62\x6d\xeb\x63\x4b\xb3\x9d\x08\x31\x3b\x90\x60\x63\x58\x31\xc6\x22\x4a\x7a\x37\x5f\x8b\x45\xe8\xe7\x16\x83\x2f\xe1\x22\x94\xa8\x62\x7d\xda\xd3\xbd\x1b\xf6\xbd\x91\x34\x2a\xd6\xa7\x32\x49\xf3\x75\x74\x41\x15\x6b\x36\x4e\xb9\x6c\x8c\xbf\x28\x5e\x37\xb8\xb3\x66\xe4\xac\xdd\xe4\xbc\xf9\x0f\x0f\x7b\x03\x9e\x0e\x4b\x91\x51\x4b\xff\x04\x00\x00\xff\xff\xdf\x36\xed\xac\xba\x05\x00\x00")

func templatesUpdateGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUpdateGoTpl,
		"templates/update.go.tpl",
	)
}

func templatesUpdateGoTpl() (*asset, error) {
	bytes, err := templatesUpdateGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/update.go.tpl", size: 1466, mode: os.FileMode(420), modTime: time.Unix(1491380433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUpdateMmGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x61\x6f\xda\x3c\x10\xfe\x6c\xff\x8a\x7b\xd1\x2b\xbd\xc9\xdb\xcc\x68\x5f\x27\xf1\xa1\x2d\x69\xd7\x75\x05\x06\x54\xd3\x34\x4d\xc2\x4d\x2e\xc1\x22\x71\x52\x3b\x01\xa1\xc8\xff\x7d\xb2\x13\x4a\x29\xb0\xee\x03\xc4\xf6\x3d\x77\xf7\xdc\x73\x77\x4d\x03\xff\xea\x65\xa1\xaa\xeb\x8c\x6b\x0d\x9f\x06\xe0\x6e\x92\xe7\x08\x6c\xce\x9f\x32\x6c\xff\x47\xf6\xc1\x18\x6a\xf1\xd1\x0e\xea\x0e\x16\xfa\xf0\x70\x16\xec\xc2\x3d\x14\x31\x66\xef\x04\x7f\x4d\xa3\xf3\xcd\x77\x6e\xee\xf0\x4e\x22\x85\x55\xad\xe4\x0b\xba\xbd\x9e\xc1\x97\x3c\x5a\xf1\x14\xa1\x69\x80\x4d\xba\xb3\x31\x94\xf6\xfb\x70\x1b\x8e\xc2\xe9\xe5\x3c\x1c\xc2\xd5\x0f\x98\x8c\x6f\xc7\x0c\x86\x63\x18\x8d\xe7\x10\x0e\xef\xe6\xcc\x61\x1e\xcb\x98\x57\x08\xd5\xd2\x45\xe8\x68\x1a\x03\x4f\x5b\xf7\x36\x51\x22\xe7\x6a\x0b\xf7\xb8\xa5\x49\x2d\x23\xf0\xde\xa8\x6c\x0c\xfc\xbf\x17\xd2\x18\xbf\x8b\x68\x71\xc9\xaa\xe4\x8a\xe7\x1a\xd8\x4d\xa1\x50\xa4\xf2\x1e\xb7\x1a\xd8\x75\x91\xd5\xb9\xb4\xe0\x00\xde\xc8\xba\x8b\xb6\xa3\xe1\xb7\xf9\x3a\x3d\x8c\x39\xe0\x18\x00\x2a\x65\x7f\x85\xf2\xa1\xa1\x24\x11\x98\xc5\xae\x99\x47\x1c\x59\x8a\xd5\x8d\x33\x7b\x47\x19\x7d\x4a\x49\xbf\x0f\x89\x50\xba\x82\x68\x89\xd1\x0a\x44\x02\x1b\x84\x25\x5f\xb7\xc2\x24\x2d\x7b\x58\xe1\x56\x53\xd2\x34\xa0\xb8\x4c\xf1\xb0\x2a\x63\x28\x21\x22\xb1\xa9\x1d\x8f\x5d\x99\x5d\x9b\x60\x30\x00\x29\x32\x4b\x93\x90\xae\x9c\x83\xca\x82\xb6\x10\xcd\x46\xb8\xf1\x16\x3d\xdb\xcd\x83\x00\x3d\xc8\x6b\x5d\xc1\x13\x82\x2c\xe4\x07\x29\xb2\x85\x4f\x09\x31\x8e\x0e\xca\xd8\xb5\xdc\x96\x11\x17\xf2\xbf\x0a\xea\x7d\x57\xff\x9a\x7c\x8c\x19\x56\xe8\xb5\x2a\x06\x70\x82\x82\x7f\x94\xad\x54\x58\x72\xd5\x26\xd2\x99\x88\x50\x53\x12\x05\x20\x02\x58\xdb\x3e\x3c\xd7\xa8\xb6\x33\xf7\xfe\x12\xf7\x63\xa7\xb7\x7e\xce\x5a\x3b\x25\xfa\x39\xd3\x95\xb2\x0e\x8b\xc7\xc9\xf0\x72\x1e\x5a\x69\x74\xb4\xc4\x9c\x03\x9b\x75\xdf\xe3\xd1\x87\x59\x38\x07\x6f\x01\x17\x94\x10\x5d\x29\x21\x53\xcd\xbe\x14\x42\x7a\x51\x00\xbd\x00\x7a\x3e\x5c\xc0\xc2\x87\xc1\x49\x8c\x78\x8d\xa1\x84\x7c\xff\x1c\x4e\x5d\xde\x64\xb5\x59\xa2\x3a\x25\xd0\x34\x9c\x3f\x4e\x47\x77\xa3\xdb\x97\x26\x1f\x0c\xf3\xa2\xad\x4b\xd5\x72\x57\xd7\x9a\x67\x35\xba\x81\xfc\xf9\x4b\xc8\x0a\x55\xc2\x23\x6c\x4c\x63\xfe\xd8\x87\xce\x6b\x00\xbc\x2c\x51\xc6\x5e\x7b\x0f\xce\x4d\xd6\x41\x53\xce\x3a\xaf\x19\x63\x3e\x25\xc3\xab\xaf\x45\xea\xb5\x7a\x07\xd0\x1a\x9d\x85\x12\x55\x6c\x4e\xaf\xce\xf0\x8a\x7d\xb3\xf5\x4c\x8b\xcd\x29\x4f\x62\x97\x70\x00\xaa\xd8\xb0\x59\xc4\xa5\xdd\xaf\xb4\x78\xab\xce\x7e\xce\x7d\x6a\xb7\xc4\xfa\xfc\xb3\xdf\x88\xb3\x0b\x41\x89\x1d\xb4\xd3\x66\x29\x32\x6a\xe8\xef\x00\x00\x00\xff\xff\x6e\x9b\xd8\x11\xf5\x05\x00\x00")

func templatesUpdateMmGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUpdateMmGoTpl,
		"templates/update.mm.go.tpl",
	)
}

func templatesUpdateMmGoTpl() (*asset, error) {
	bytes, err := templatesUpdateMmGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/update.mm.go.tpl", size: 1525, mode: os.FileMode(420), modTime: time.Unix(1491380433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/delete.go.tpl": templatesDeleteGoTpl,
	"templates/delete.mm.go.tpl": templatesDeleteMmGoTpl,
	"templates/enum.go.tpl": templatesEnumGoTpl,
	"templates/find.go.tpl": templatesFindGoTpl,
	"templates/find.mm.go.tpl": templatesFindMmGoTpl,
	"templates/insert.go.tpl": templatesInsertGoTpl,
	"templates/insert.mm.go.tpl": templatesInsertMmGoTpl,
	"templates/model.go.tpl": templatesModelGoTpl,
	"templates/table.go.tpl": templatesTableGoTpl,
	"templates/table.mm.go.tpl": templatesTableMmGoTpl,
	"templates/update.go.tpl": templatesUpdateGoTpl,
	"templates/update.mm.go.tpl": templatesUpdateMmGoTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"delete.go.tpl": &bintree{templatesDeleteGoTpl, map[string]*bintree{}},
		"delete.mm.go.tpl": &bintree{templatesDeleteMmGoTpl, map[string]*bintree{}},
		"enum.go.tpl": &bintree{templatesEnumGoTpl, map[string]*bintree{}},
		"find.go.tpl": &bintree{templatesFindGoTpl, map[string]*bintree{}},
		"find.mm.go.tpl": &bintree{templatesFindMmGoTpl, map[string]*bintree{}},
		"insert.go.tpl": &bintree{templatesInsertGoTpl, map[string]*bintree{}},
		"insert.mm.go.tpl": &bintree{templatesInsertMmGoTpl, map[string]*bintree{}},
		"model.go.tpl": &bintree{templatesModelGoTpl, map[string]*bintree{}},
		"table.go.tpl": &bintree{templatesTableGoTpl, map[string]*bintree{}},
		"table.mm.go.tpl": &bintree{templatesTableMmGoTpl, map[string]*bintree{}},
		"update.go.tpl": &bintree{templatesUpdateGoTpl, map[string]*bintree{}},
		"update.mm.go.tpl": &bintree{templatesUpdateMmGoTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

