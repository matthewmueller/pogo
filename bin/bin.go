// Code generated by go-bindata.
// sources:
// templates/delete-many.go.tpl
// templates/delete.go.tpl
// templates/delete.mm.go.tpl
// templates/enum.go.tpl
// templates/find-many.go.tpl
// templates/find-one.go.tpl
// templates/find.go.tpl
// templates/find.mm.go.tpl
// templates/insert.go.tpl
// templates/insert.mm.go.tpl
// templates/model.go.tpl
// templates/table.go.tpl
// templates/table.mm.go.tpl
// templates/update-many.go.tpl
// templates/update.go.tpl
// templates/update.mm.go.tpl
// templates/upsert.go.tpl
// DO NOT EDIT!

package bin

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDeleteManyGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x52\x51\x6f\xd3\x30\x18\x7c\xae\x7f\xc5\x31\xf1\xd0\x42\xe5\xbc\x4f\xea\x03\x25\x61\x20\xad\xed\x54\x2a\x21\x9e\x98\xeb\x7e\x4d\xad\xd9\x4e\xfa\xd9\x81\x95\xc8\xff\x1d\x25\xeb\xba\x8a\xc1\xf6\x92\x5c\xbe\xdc\x5d\xee\xcb\xb9\x6d\xf1\x36\xec\x2a\x8e\x1f\xad\x0a\x01\x97\x13\xf4\x4f\x5e\x39\x82\x5c\xa9\xb5\xa5\x87\xeb\xbc\x1b\xa4\x24\x3a\xbe\x7e\xa4\xf6\xe0\x45\x6a\x6f\x36\xab\x36\x64\x5f\xb1\x3e\x0f\x71\xd4\xba\x47\x59\x0f\x5e\xfe\x8c\xf1\x65\x63\x15\x9f\xd8\x4c\xb1\x61\xff\x5f\xfe\xf1\xf5\xe5\x04\xb5\x6d\x58\x59\xf3\x9b\xce\x4c\x52\x12\xb5\xd2\x77\xaa\x24\xb4\x2d\xe4\xcd\x11\xa7\x24\x84\x71\x75\xc5\x11\x17\xa5\x89\xbb\x66\x2d\x75\xe5\x32\xa7\x62\xdc\xd1\x2f\xd7\x90\xb5\xc4\x59\x5d\xde\x5f\x08\x91\x65\xb8\x2a\xe6\xc5\xf2\xc3\xaa\xc8\x31\xfd\x8e\x9b\xc5\xd5\x42\x22\x5f\x60\xbe\x58\xa1\xc8\xbf\xac\x64\xcf\xc9\xc9\x52\xa4\x99\xf2\x07\x6c\x7a\x08\xd7\xe1\xa7\xed\x53\x0a\x58\x1f\xa0\xa0\x2b\xbf\x31\xd1\x54\x5e\x6c\x1b\xaf\x31\xfc\xab\xb7\x94\xf0\xee\xa9\x9a\x94\x46\x67\xd6\xc3\x93\x16\x21\xb2\xf1\xe5\x18\xb5\x62\xe5\x82\x94\x12\xc6\x47\xe2\xad\xd2\xd4\xa6\x11\x86\xc4\x0c\x62\xae\x78\x84\x56\x0c\xb2\x0c\x61\x6f\x11\xc8\x92\x8e\xd8\x37\xc4\x87\x31\x6a\x36\x4e\xf1\x01\x77\x74\x40\xcd\xd5\x4f\xb3\xa1\x4d\x17\x31\xd0\xbe\x21\xaf\x49\x0c\xc2\xde\x86\xd8\x57\x71\x9b\x17\xd7\xc5\xaa\xc0\xa7\xe5\x62\xd6\x2d\x15\xf4\x8e\x9c\x82\xfc\x7a\xbc\x3f\x6f\x07\xdf\x3e\x17\xcb\x02\xb7\x78\x7f\xb6\xb1\x18\xe4\xd3\xeb\xaa\x1c\x3e\x18\x9f\xa5\x1f\x09\xe0\xc7\xb8\x4b\x8c\x09\x9e\xfd\x11\x99\x4f\x65\x71\x4f\xfa\xdf\x3a\xb3\xed\x75\x6f\x26\xf0\xc6\xa2\x15\x00\x70\x3c\x16\xc4\x2c\x80\x24\xc4\x69\xe2\x8d\x15\x49\xfc\x09\x00\x00\xff\xff\x14\xa1\x73\x78\x2c\x03\x00\x00")

func templatesDeleteManyGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDeleteManyGoTpl,
		"templates/delete-many.go.tpl",
	)
}

func templatesDeleteManyGoTpl() (*asset, error) {
	bytes, err := templatesDeleteManyGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/delete-many.go.tpl", size: 812, mode: os.FileMode(420), modTime: time.Unix(1492854922, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDeleteGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x92\xcf\x6e\xda\x4c\x14\xc5\xd7\xcc\x53\x9c\x0f\xb1\x80\x4f\x91\x51\xb7\x95\x58\x94\xd8\x49\x23\x25\x10\x51\xaa\xaa\xab\x66\xb0\x2f\xd8\x8a\x3d\x63\xee\x8c\x13\x90\xe5\x77\xaf\xc6\x7f\x42\x52\x42\x9a\xac\xba\x81\xf1\x99\x33\xe7\xde\xb9\xf3\x2b\x4b\x0c\x4c\xac\xd9\x9e\xa7\xd2\x18\x7c\x9e\xa0\xfe\x52\x32\x23\x78\x4b\xb9\x4a\xa9\xf9\x9d\x39\xa1\xaa\x84\xf3\x87\x9d\xb5\x5e\xbc\x69\xad\xc3\x6e\x74\x44\xe9\x5f\xa2\x9f\x37\xd1\x9e\xcd\xba\x63\xf5\xe2\xcd\x32\x4c\xb6\x60\xf5\xe4\x6d\x3f\x5f\x73\xe7\x32\xbc\x97\x1b\x42\x59\xc2\xbb\x6d\xd7\x55\x25\x44\x92\xe5\x9a\x2d\x86\xa2\xd7\xdf\x24\x36\x2e\x56\x5e\xa8\xb3\x71\x26\xad\x8d\xe9\x31\x2b\x28\x4d\x89\xc7\xf9\x66\xd7\x17\x23\x21\xc6\x63\x5c\x06\xb3\x60\xf1\x65\x19\xf8\x98\xfe\xc4\xed\xfc\x72\xee\xc1\x9f\x63\x36\x5f\x22\xf0\xaf\x96\x5e\xed\xf1\x29\x25\x4b\xb0\x71\x5d\xae\xbd\x4f\x55\x61\xcd\x3a\xab\xd5\x48\x5a\xb9\x92\x86\x3c\xb1\x2e\x54\x88\xe1\x1f\x8f\x51\x55\xf8\xff\x30\xef\xaa\x1a\xb5\x89\xce\x97\x73\x92\x49\xde\x37\x53\x39\xd7\x69\x91\xa9\xfa\xc0\x61\xcb\xee\xf3\x17\x5b\x23\x0c\x89\x19\xc4\xac\x79\x84\x52\xf4\xc6\x63\x98\x6d\x8a\x6d\x41\xbc\x17\x3d\xb3\x4d\x8d\x65\x37\xc2\x3b\x3f\xb8\x0e\x96\x01\x2e\x16\xf3\x1b\x97\x67\xc2\x98\x32\x09\xef\x5b\xfb\x7f\x3c\x55\xfc\xf8\x1a\x2c\x02\xf4\x4f\xf7\xd5\xc7\x04\x83\x4f\x77\xa2\xae\xca\x85\xea\xaa\xfa\xd3\x6b\xbd\x19\x36\xb5\xcf\x70\xfa\xfc\x48\xf4\x7e\x9d\xb9\xde\x31\xc1\xd1\x94\x3c\x7f\xea\x05\x3b\x0a\xdf\x97\x93\xac\xeb\x9c\xff\x26\x50\x49\x8a\x52\x00\x40\xab\x4d\x26\xc8\x37\x3b\x2f\x60\x9e\xe9\x85\x7e\x34\xed\x2e\xd0\x02\x15\x30\x3f\x7f\xc8\x99\xb6\x17\xba\x50\x51\x6d\xaa\xc4\x33\x23\x31\x0b\x27\x89\x5e\x2b\xa8\x24\x15\x95\x70\xac\xb2\x54\x1b\xc2\x20\x89\x76\x6e\xd6\xde\x95\x8a\x68\x47\x1d\xf3\xc9\x1a\xde\x95\xf9\xae\x92\x6d\xe1\xe6\xda\x28\x4a\x5b\xa7\xde\x36\x37\x72\xce\x27\xb6\xa6\x7b\x67\x71\x11\x19\xd9\x58\x47\x4d\xae\x43\x2c\x51\x11\xe4\x0b\xec\x3e\xc6\xd8\xa9\xe4\x61\x27\xe7\x92\x65\x66\x3a\xf9\x14\x5c\x86\x52\x0a\x6d\xf3\xda\x67\xdd\xa3\xe0\x9e\xf6\xc8\x59\x3f\x24\x11\x45\x58\xed\x61\x68\x5b\x90\x0a\xe9\x1d\x14\x0e\x3a\x0c\x07\xa7\x39\xec\x5a\x7c\x8c\x89\xa9\xeb\xd0\xb1\x77\x44\x5b\x6d\x7b\x90\x7c\xb8\xc7\x47\x39\x7b\x2d\xe1\x1f\x12\x56\x96\x20\x15\x35\xe8\x34\x8b\x83\x24\x7e\x07\x00\x00\xff\xff\xd3\xe2\xbf\x9b\xec\x05\x00\x00")

func templatesDeleteGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDeleteGoTpl,
		"templates/delete.go.tpl",
	)
}

func templatesDeleteGoTpl() (*asset, error) {
	bytes, err := templatesDeleteGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/delete.go.tpl", size: 1516, mode: os.FileMode(420), modTime: time.Unix(1492245140, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDeleteMmGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xcd\x6e\xdb\x30\x10\x84\xcf\xe2\x53\x4c\x81\x1e\xec\x22\xa0\xef\x05\x7c\xa8\x23\x26\x2d\x1a\x5b\x81\x2b\xa0\xe8\xa9\x61\x94\xb5\x2d\x84\x22\x93\x25\x85\x36\x10\xf8\xee\x05\x29\xb9\x3f\x69\x03\xf7\x22\xed\x2e\xbe\x9d\x1d\x0d\x34\x0c\x78\xed\x0f\x8e\xc3\xb9\xd1\xde\xe3\xed\x12\xb9\xb3\xba\x23\xc8\x5a\xdf\x1a\x1a\x9f\x9b\x34\x88\x51\x24\xbe\x39\xa2\xb9\x48\xe8\x7a\xfd\x22\x9c\xe5\xd6\xee\x8e\xcc\x09\xf1\xdf\x6d\x4c\xbb\xdd\x71\x2d\x17\x27\x0e\x31\x85\x9e\xed\x4f\x7a\x6c\x5f\xe0\x1f\x74\x73\xaf\xf7\x84\x61\x80\xbc\x9e\xea\x18\x85\x58\x2c\x70\xa9\x36\x6a\xfb\xae\x56\x25\x56\x5f\x70\x5d\x5d\x56\x12\x65\x85\x4d\x55\x43\x95\x1f\x6a\x99\x99\x92\x0c\x05\x42\x38\x64\x85\xc9\x66\x8c\xd8\xb1\xeb\xf2\xf4\x4e\x07\x7d\xab\x3d\x49\xb1\xeb\x6d\x83\xd9\xb3\x94\x63\xc4\x9b\x5f\x41\xc6\x38\x9f\x14\x13\xb7\xbb\x7f\xd0\xac\x3b\x0f\x79\xe1\x98\xda\xbd\xfd\x48\x4f\x1e\xf2\xdc\x99\xbe\xb3\x23\x3c\x23\x66\x10\xb3\xe3\x39\x06\x51\x2c\x16\xf0\x8f\x06\x8f\x3d\xf1\x93\x28\x1a\x67\x7d\x48\x03\x1f\x18\x4b\xdc\x08\x00\x28\xd5\x95\xaa\x15\x2e\xb6\xd5\x3a\x39\xf6\xcd\x81\x3a\x0d\xf9\x69\x7a\xff\x23\xa1\xb4\xf5\xf9\xbd\xda\x2a\x64\x4f\xdf\x0e\xc4\xf4\xa7\xa5\x0c\xdd\x88\x7c\x9f\x7b\x7b\xbc\x5f\xae\xae\xdc\x7e\x36\xde\x3f\x1b\x97\x4d\xeb\xc3\xf3\xdd\xb9\x28\xbe\x9e\xa5\x8f\xc0\x12\x7f\xa5\x23\xcb\x95\x54\xdf\xa9\xf9\x2f\x99\x76\x97\x65\x5e\x2d\x61\x5b\x93\xf2\x28\xa6\x3f\x81\x98\x45\x11\x85\x38\xf6\xb6\x35\x22\x8a\x1f\x01\x00\x00\xff\xff\x32\x52\x9b\x10\xf1\x02\x00\x00")

func templatesDeleteMmGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDeleteMmGoTpl,
		"templates/delete.mm.go.tpl",
	)
}

func templatesDeleteMmGoTpl() (*asset, error) {
	bytes, err := templatesDeleteMmGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/delete.mm.go.tpl", size: 753, mode: os.FileMode(420), modTime: time.Unix(1491978600, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesEnumGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x95\x51\x6b\xdb\x3e\x14\xc5\x9f\xad\x4f\x71\xff\xe6\x0f\xb1\x4a\xa7\xd0\x97\x3d\x14\xf2\xb0\xd2\x50\x06\x6d\x12\xda\xac\x6c\x8c\x3d\x28\xf6\xb5\x23\x6a\xcb\x99\x24\xa7\x29\x46\xdf\x7d\xc8\xb2\x5b\x3b\xc9\x4a\xd6\x37\x45\xbe\x3a\xfe\xdd\x73\x8f\x95\xba\x86\xff\x8b\x32\xc1\x1c\x2e\x27\xd0\x2c\x24\x2f\x10\xd8\x54\x56\x05\x9b\xb9\xa5\xb5\xc4\x15\xe9\x75\xa9\xcc\x5d\x57\xd9\xfc\x3a\x52\xb9\xe1\xf1\x13\xcf\x10\xea\x1a\xd8\xa2\x5d\x5b\x4b\xc8\x78\x0c\x37\xd3\xd9\xf4\xfe\xcb\x72\x7a\x0d\x57\x3f\x60\x31\xbf\x99\x33\xb8\x9e\xc3\x6c\xbe\x84\xe9\xf5\xd7\x25\x23\x44\x14\x9b\x52\x19\x88\x48\x10\x26\xdc\xf0\x15\xd7\x38\xd6\xbf\xf3\x71\xa2\xc4\x16\x55\x48\x82\x10\x95\x2a\x95\x0e\x09\x09\xc2\x4c\x98\x75\xb5\x62\x71\x59\x8c\x0b\x6e\xcc\x1a\x9f\x8b\x0a\xf3\x1c\xd5\x78\x93\xed\x42\x42\x9b\x57\xbe\x35\x67\x2d\x08\x0d\x66\x8d\x30\x72\x68\x7d\xe6\x11\xa0\xac\x0a\x30\x2f\x1b\x84\x54\x95\x05\xe8\x78\x8d\x05\xf7\x85\x0f\x7e\x6d\xed\x88\x91\xa6\x62\x20\x59\x09\x69\x2e\x3e\x13\x12\x97\x52\x3b\x70\x70\x8f\x15\x97\x59\x67\xcb\x23\xcf\x2b\xd4\xce\x81\x60\x0f\xa7\xae\x21\xce\xb9\xd6\xde\xc3\x5b\xbe\x3a\x84\xec\x36\x47\x83\x83\x8c\x04\x27\xe8\x4c\x06\x67\x22\x27\x37\x57\x09\x2a\xb0\x96\x7a\x4c\x94\x89\xe3\xf2\x46\x3d\x18\x25\x64\x06\x0a\x4d\xa5\xa4\x47\xd0\x7e\x6b\xeb\x3a\x80\x32\x6d\xf6\x86\x1c\x69\x25\x63\x88\xf6\xb2\x61\xed\xa0\x8a\xb6\xd2\x11\xed\x04\x6b\x12\x6c\xb9\x6a\x3c\x7f\xe4\x79\xbb\x4b\x48\xa0\x9f\x85\x89\xd7\x70\x44\xee\x3d\x5b\x01\x62\xae\xf1\x04\x67\x2f\x09\x00\xbc\xbe\x75\x02\x61\xdf\xe1\x70\x60\x49\x60\x09\x09\xbc\x15\xdd\x01\xe2\x23\x7c\xc7\x95\x5e\xf3\x7c\x89\x3b\x03\x85\x5f\xeb\xbd\x90\x49\x53\x82\xc1\x9d\x39\xd5\x9e\x9e\x64\x44\x21\xfa\xf9\x6b\xf5\x62\xf0\x1c\x9a\xa4\x53\x67\x56\x0b\xe2\x1f\x1c\xca\xb1\xce\x5f\x7a\x0e\x52\x74\xa0\xdf\x64\xd1\x43\xad\xe4\x71\xd8\x26\xed\xef\xc3\x9e\x0d\x69\x07\xba\x91\x3b\xda\x82\x51\x4f\xec\x80\xdb\x41\xfa\xc1\x36\x35\xf4\xa4\x19\x0e\x27\xe2\xe7\x75\x76\x48\x34\x39\x61\xd8\xc3\x71\x26\x98\xf2\x2a\x37\x97\x24\x78\x9d\x6a\x73\x8f\xb0\x19\x3e\x47\xa1\x90\x5b\x9e\x8b\x64\xa0\x1a\xd2\x41\x08\xde\x7c\x6d\xa0\x41\x73\x23\x74\x2a\xb0\xfd\x50\x5e\xaf\x28\xdf\x93\x72\x21\x40\x95\xf2\x18\x21\x75\x96\x7c\xe0\xa3\x69\x84\x5c\x1e\xfa\xc2\x47\x52\xf1\xf7\x38\xf4\xd3\xf0\x10\x73\xb9\x07\xdd\xbf\x60\x99\x7b\x2e\x3f\xc8\xbd\x17\x10\x27\x15\x69\x15\xbf\x69\xd5\xb6\x97\x8d\x55\x95\x9e\x43\xf9\xd4\xfc\x83\xa8\x98\xb5\x71\xa7\x24\x10\x29\xfc\x57\x3e\xb9\x92\x0f\xce\xe8\xd0\x89\x61\x56\x57\x55\x4a\x7b\x76\x2c\xb2\x9d\xff\x56\x17\x37\xdf\xff\xa5\xb7\x45\xb6\x8b\xb6\x0a\xce\x36\xd9\xce\x0f\xe5\x1e\x79\x82\xaa\xd7\xa2\x48\x61\xab\xd8\x2d\xca\x88\xc2\x64\x02\x9f\x2e\xfa\x4d\xb9\x99\x04\xf6\x64\xe8\xad\x62\x4e\xff\xea\xc5\xa0\x8e\x3a\x55\xea\xfa\xf8\x13\x00\x00\xff\xff\x35\xaf\x0a\x6d\xb7\x07\x00\x00")

func templatesEnumGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesEnumGoTpl,
		"templates/enum.go.tpl",
	)
}

func templatesEnumGoTpl() (*asset, error) {
	bytes, err := templatesEnumGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/enum.go.tpl", size: 1975, mode: os.FileMode(420), modTime: time.Unix(1492157467, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFindManyGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xc1\x6e\xdb\x38\x14\x3c\x9b\x5f\x31\x1b\xec\x41\xda\x35\xe4\x9c\x03\xe8\xb0\xb1\x95\x6c\x81\xc4\x4e\x13\x03\x45\x51\x14\x08\x23\x3d\x59\x44\x28\x4a\x26\xa5\x3a\xae\xc0\x7f\x2f\x48\xc9\x89\xed\xba\x69\x0f\xb6\x28\x72\x66\xde\xcc\x7b\x54\xd7\xe1\x6f\x53\x54\xba\x99\x4a\x6e\x0c\x2e\x62\xf8\x37\xc5\x4b\x42\xb4\xe4\x4f\x92\xfa\xff\xb9\xdb\xb0\x96\x39\x7c\xba\x83\xfa\xc5\xbb\x50\x2f\x76\x5b\x65\x24\x7f\x23\xbd\x6f\x62\xe0\x96\x3b\x9a\x5f\xbc\x5f\x46\xa8\x55\x2b\xb9\x7e\x45\x6b\x6a\x5a\xad\x7e\x89\x1f\x8e\x2f\x62\xd4\xb2\xd5\x5c\x8a\xef\xb4\x27\x62\x2d\xab\x79\xfa\xcc\x57\x84\xae\x43\x74\x37\xac\xad\x65\x4c\x94\x75\xa5\x1b\x9c\xad\x44\x53\xb4\x4f\x51\x5a\x95\x93\x92\x37\x4d\x41\x9b\xb2\x25\x29\x49\x4f\xea\xd5\xcb\x19\x63\x93\x09\xae\x93\x79\x72\xff\xdf\x32\x99\xe1\xf2\x33\xee\x16\xd7\x8b\x08\xb3\x05\xe6\x8b\x25\x92\xd9\x87\x65\xe4\x31\x57\x42\x65\xb7\x5c\x6d\x91\x0b\x95\xa1\x74\xab\xb7\xe4\xd6\x1a\x3c\x6d\xc1\x91\x56\x2a\x13\x8d\xa8\x14\xcb\x5b\x95\x22\x38\x9a\x99\xb5\xf8\xe7\x6d\x2c\xd6\x86\xaf\xb2\xc1\x2b\x13\xa6\xd1\x42\xad\xc6\xa8\xb9\xe6\xa5\x89\xa2\x08\x42\x35\xa4\x73\x9e\x52\x67\xc3\x5e\x73\xe8\x8a\xb5\xf8\xf2\x75\xdf\xc6\x18\xa4\xb5\xfb\x55\x3a\x44\xc7\x46\x93\x09\xcc\x5a\xc2\x90\xa4\xb4\xc1\xba\x25\xbd\x1d\xa3\xd6\xa2\xe4\x7a\x8b\x67\xda\xa2\xd6\xd5\x37\x91\x51\xe6\xec\x1b\x5a\xb7\xa4\x52\x62\x23\xb3\x96\xa6\xf1\x23\x7a\x64\x00\xf0\x90\xdc\x24\xd3\xa5\x0b\x9c\x0b\x92\x99\x41\x34\xad\x64\x5b\x2a\x7f\x01\x1c\xe0\xea\x7e\x71\xeb\x8e\x4d\x5a\x50\xc9\x11\x3d\x0c\xcf\x13\x43\x75\xf0\x4f\xff\x27\xf7\x09\x1e\xf1\xef\x5e\xc3\xd8\x68\x76\x79\x53\xad\x82\xbe\xf6\x5e\xfc\x90\x01\xba\xda\x98\x3e\xdb\x45\x8c\x9f\x9a\x1a\xcd\x2e\xa3\x8f\x2e\xdb\x69\xb2\xc8\x3d\xf3\xaf\x18\x4a\x48\x74\xde\xc1\xd0\xc0\x83\x5e\xfa\x02\x0c\x70\x1e\x33\xca\x49\xfb\xb2\xd1\x54\x56\x86\x82\x90\x31\x20\xaf\x86\xbd\x39\xbd\x34\x41\x38\x68\x1d\x5c\x6b\x6b\x77\x16\x77\x33\xe9\xfa\xcc\xce\x42\xdc\xb3\x1f\x52\xae\xdc\x18\x57\xd5\x71\x3b\xf7\x75\x42\x4f\x3b\x65\xfe\x7d\xfb\x7d\x00\x1c\x1e\x22\x06\xaf\x6b\x52\x59\x70\xc4\x39\x32\x1f\xfa\xfc\x7d\xd3\xbc\xd7\x44\xeb\x20\xfc\x93\xde\xbd\xa1\x7b\x09\x77\xf7\x48\x99\x56\x13\x36\xb4\xe3\x70\x05\x2a\xeb\x66\x0b\xae\x35\xdf\x7a\x8c\xe6\x4d\x41\x1a\x4d\xc1\x95\xaf\xb1\x29\x48\x39\x46\xc9\xb5\x29\xb8\x64\x23\x91\x43\x92\x3a\xf4\x1d\x22\x8e\x71\xee\x6e\xf8\x68\xd8\x2b\xf9\x33\x05\xc7\x1f\xc3\x79\x38\x76\x9a\x6c\xe4\x23\x9d\xf6\xed\xce\x2d\xfb\x11\x00\x00\xff\xff\x0b\xf4\x7a\xf7\x5d\x05\x00\x00")

func templatesFindManyGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesFindManyGoTpl,
		"templates/find-many.go.tpl",
	)
}

func templatesFindManyGoTpl() (*asset, error) {
	bytes, err := templatesFindManyGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/find-many.go.tpl", size: 1373, mode: os.FileMode(420), modTime: time.Unix(1492854890, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFindOneGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x91\x5f\x6f\xda\x30\x14\xc5\x9f\xeb\x4f\x71\x56\xf5\xa1\x6c\xc8\x79\x9f\xc4\xc3\x5a\x42\x37\xa9\x25\x1d\x20\x4d\x7b\xab\x49\x4c\xb0\xea\xd8\xe1\xda\x19\x45\x91\xbf\xfb\xe4\x10\x28\xdd\x58\xf7\x00\xb9\xb6\x7f\xe7\xfe\x39\xb7\x6d\x71\xe5\xd6\x96\xfc\xad\x16\xce\xe1\xf3\x08\xdd\xc9\x88\x4a\x82\x2f\xc4\x52\xcb\xfd\xff\x34\x5e\x84\xc0\x22\x9f\x1f\xd0\x2e\x78\x17\xed\x92\x3d\xd8\x42\xea\xff\xa4\x3e\x6d\xa2\xd7\x56\x07\x59\x17\xbc\x5b\x86\xa4\x6f\xc8\x1c\xd9\xfe\x78\x8e\xae\x45\xfe\x2c\x4a\x89\xb6\x05\x7f\xec\xe3\x10\x18\x53\x55\x6d\xc9\xe3\xb2\x54\x7e\xdd\x2c\x79\x6e\xab\xa4\x12\xde\xaf\xe5\xb6\x6a\xa4\xd6\x92\x92\xba\x7c\xb9\x64\x2c\x49\x70\x97\x4e\xd3\xd9\x97\x45\x3a\xc6\xcd\x4f\x3c\x66\x77\x19\xc7\x38\xc3\x34\x5b\x20\x1d\x7f\x5b\xf0\x8e\x99\x28\x53\x64\xa6\x2b\xd3\xcf\x11\x02\x96\x3b\x08\xe4\xd6\x14\xca\x2b\x6b\xd8\xaa\x31\x39\xae\xff\x58\x40\x08\xf8\xf8\xea\x71\x08\x83\x43\xaa\xeb\xa3\x10\xce\x93\x32\xe5\x10\xb5\x20\x51\x39\xce\x39\x94\xf1\x92\x56\x22\x97\x6d\x18\xec\x53\xf6\x16\x84\xf0\xa6\x85\x21\x24\x51\xfc\x59\x1a\xa0\x65\x17\x49\x02\xb7\xd1\x70\x52\xcb\xdc\x63\xd3\x48\xda\x0d\x51\x93\xaa\x04\xed\xf0\x2c\x77\xa8\xc9\xfe\x52\x85\x2c\x62\xef\x4e\x6e\x1a\x69\x72\xc9\x2e\xdc\x46\x3b\x4f\xd1\xee\x27\x06\x00\xf3\xf4\x3e\xbd\x5d\xc4\x4a\x2b\x25\x75\xe1\xc0\x6f\xad\x6e\x2a\xd3\xad\x32\x02\x93\x59\xf6\x10\x9f\x5d\xbe\x96\x95\x00\x9f\xf7\xdf\x33\x0b\x8a\xf8\x8f\xaf\xe9\x2c\xc5\x13\x3e\x9d\xb8\xc5\x2e\xc6\x37\xf7\xb6\xbc\xde\xd7\x3e\x19\x7e\xc0\x00\xb2\xdb\xd8\xcd\x5f\x5e\xf2\xf1\x0d\xff\x1e\xa7\x9a\xd9\xed\x79\x65\xf4\x63\x14\xf5\x7c\x9e\x0b\x13\xad\x2b\x6d\x3f\xc4\xd5\x71\x8a\x57\x37\xa3\x44\xad\x3a\xd5\x87\x11\x8c\xd2\x68\xbb\x8e\xfb\xbb\xd1\x08\x75\xf9\xc2\x53\xa2\xa9\x9d\xd9\xad\xeb\x5f\x81\x3e\xc1\x9b\xcd\x0c\x81\x94\xe8\x74\x3d\x53\xeb\x27\xb6\x31\x45\x27\xda\x5b\x71\x5e\x28\x89\x58\x24\xd8\xbf\x00\xa3\x34\x0b\xec\x77\x00\x00\x00\xff\xff\x9a\x46\xd8\xc1\xdd\x03\x00\x00")

func templatesFindOneGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesFindOneGoTpl,
		"templates/find-one.go.tpl",
	)
}

func templatesFindOneGoTpl() (*asset, error) {
	bytes, err := templatesFindOneGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/find-one.go.tpl", size: 989, mode: os.FileMode(420), modTime: time.Unix(1492450222, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFindGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x53\x4f\x6f\xda\x4e\x10\x3d\xef\x7e\x8a\xf9\x21\x1f\xe0\x27\x64\xd4\x6b\x25\x0e\x25\x38\x69\xa4\x04\x52\x42\x55\xf5\x96\x8d\x3d\x18\x2b\xf6\xae\x99\x5d\x07\x90\xb5\xdf\xbd\x5a\xff\x89\x49\x02\xb4\xb9\x54\xea\x01\xbc\x9e\x7d\xf3\x3c\xf3\x66\x5e\x59\x82\xa7\xd7\x8a\xcc\x45\x2a\xb4\x86\xcf\x63\xa8\xde\xa4\xc8\x10\xfc\xa5\x78\x4c\xb1\xfe\x9f\xb9\x80\xb5\xdc\xe1\xc3\x16\x5a\x1d\xce\x42\x2b\xb2\x5b\x15\x61\xfa\x1b\xea\xc3\x22\x9a\xdc\xac\x4d\xab\x0e\x67\x3f\x43\x68\x0a\x92\x2f\xd8\xe6\xf5\x18\x3a\x17\xe1\x93\x88\x11\xca\x12\xfc\xbb\xe6\x6c\x2d\xe7\x49\x96\x2b\x32\xd0\xe7\xac\x17\x27\x66\x5d\x3c\xfa\xa1\xca\x46\x99\x30\x66\x8d\xdb\xac\xc0\x34\x45\x1a\xe5\xf1\xae\xc7\x07\x9c\x8f\x46\x70\x15\xcc\x82\xc5\x97\x65\x30\x85\xc9\x4f\xb8\x9b\x5f\xcd\x7d\x98\xce\x61\x36\x5f\x42\x30\xbd\x5e\xfa\x15\xe6\x32\x91\x11\x08\xe8\x7a\xb1\x16\x1e\xf7\xd0\x2b\x4b\xc8\x29\xc9\x04\xed\xeb\xa6\x2e\x54\x5a\x64\xd2\xf5\xdd\xe3\xab\x42\x86\xd0\x7f\x33\x15\x6b\xe1\xff\x4e\x78\x6b\x07\x15\x75\xff\x34\x0f\x74\x57\x66\x9f\xbf\xba\x1a\xd4\xec\x8d\x44\x35\xf4\xa5\xbc\x21\x20\x91\xfb\x29\x1a\x40\xc9\xd9\x68\x04\x7a\x93\x82\xc6\x14\x43\x03\x9b\x02\x69\x3f\x6c\x89\xe1\x09\xf7\x90\x93\x7a\x4e\x22\x8c\x5c\x5f\x1a\x37\x05\xca\x10\x39\xd3\x9b\x54\x1b\x72\xe3\x78\xe0\x00\x00\xf7\xc1\x4d\x70\xb1\x74\x5f\x5a\x25\x98\x46\xfa\xb0\x9e\x0a\x70\xb9\x98\xdf\xba\x6b\x1d\xae\x31\x13\xe0\xdf\x37\xcf\x23\x03\x74\xf0\x1f\x5f\x83\x45\x70\x56\x47\x18\x83\xf7\xe9\x81\x73\x36\x9d\xdc\xa8\xb8\x5f\x17\x34\x84\xd3\x19\x03\xce\x48\x6d\x5d\xc9\xef\xb4\xf7\xa7\x13\xff\x9b\x6b\x7d\xa1\xb6\x7f\xc6\xe4\x44\x1c\x03\xa9\xad\x7f\x1f\x0a\xe9\xf4\x8e\xd5\xdb\xce\xbb\x09\x0c\x38\x4b\x56\x95\xf0\xff\x8d\x41\x26\xa9\x13\xbe\x8d\x8c\xc7\x90\xc7\x3b\x3f\x20\x9a\xa9\x85\xda\xea\xea\x8e\x35\xa9\xaf\xe6\x38\x04\x08\x88\x0e\x87\x39\x53\xe6\x52\x15\x32\xe2\x8c\x59\x7e\x2a\x09\x89\x38\xb3\x9c\x9f\xb8\x96\x49\xca\x2d\x77\x1e\x23\x21\x63\x04\x2f\x89\x76\x4e\x24\xff\x5a\x46\xb8\xc3\xd6\xab\xc9\x0a\xfc\x6b\xfd\x5d\x26\x9b\xc2\x0d\xa9\x8e\x48\x65\x5c\xf4\xae\x59\x17\x6b\x5b\x4f\x4c\xf6\x0e\xe0\x08\x32\x34\x6b\x15\xd5\xac\xd6\xc2\xea\xbd\x61\x3e\x62\x88\x53\xbc\xfd\x36\x9c\x0b\x12\x99\x6e\xc3\x7f\xdb\x09\x8c\xbd\xf3\x81\x77\x68\x04\xc6\xde\xd8\xc0\x6b\x7d\xe0\x1d\x33\x02\x63\xb5\x0d\xda\xe6\xb6\x6b\x24\x6c\x7b\x3b\xba\xfa\x15\xec\x59\x50\xa7\xc0\xc7\x97\xfe\x18\xc7\x99\x75\xf7\xfe\xc9\x7d\x2f\x4b\x40\x19\xd5\x8b\x5c\x1f\xba\x10\xff\x15\x00\x00\xff\xff\xd8\x23\x4f\xf6\x32\x07\x00\x00")

func templatesFindGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesFindGoTpl,
		"templates/find.go.tpl",
	)
}

func templatesFindGoTpl() (*asset, error) {
	bytes, err := templatesFindGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/find.go.tpl", size: 1842, mode: os.FileMode(420), modTime: time.Unix(1492159774, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFindMmGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x91\x41\x8f\xda\x3c\x10\x86\xcf\xf1\xaf\x78\x3f\xe9\x3b\x40\x85\xcc\xbd\x12\x87\x02\x61\x5b\x75\x81\x2d\x44\xaa\x7a\x5b\x6f\x32\x80\x85\x63\x83\x9d\x14\x45\x91\xff\x7b\x65\x87\x2d\x0b\x2d\xda\x1e\x92\xd8\x99\x67\xc6\x33\x8f\xdb\x16\xff\xbb\x9d\xb1\xd5\x44\x09\xe7\xf0\x71\x84\xb8\xd3\xa2\x24\xf0\x4c\xbc\x28\xea\xde\x8b\xf0\xc3\x7b\x16\xf8\xfc\x15\x8d\x8b\x80\xce\xe7\x77\xe1\x58\x6e\x6e\x0a\x52\xef\x14\x7f\xdb\xc6\x39\xb7\x7c\x4d\x8b\x8b\x77\x0e\xb2\x54\xd5\x56\xff\xa6\xbb\xed\x1d\xfe\x20\xf2\xbd\xd8\x12\xda\x16\xfc\xe9\xbc\xf6\x9e\xb1\xe1\x10\x0f\xe9\x22\x5d\x7d\xca\xd2\x29\xc6\x3f\xf0\xb4\x7c\x58\x72\x4c\x97\x58\x2c\x33\xa4\xd3\x2f\x19\x8f\xcc\x4c\xea\x02\x02\x15\x89\x12\x2f\x0d\x64\xc1\x36\xb5\xce\xd1\xbb\x91\xe9\x3d\x3e\x5c\x7c\x79\xdf\x8f\x89\x81\xda\xec\x0f\xc2\x8a\xd2\x81\xcf\x8c\x25\xb9\xd5\x5f\xa9\x71\xe0\x13\xa3\xea\x52\x77\x68\xef\xcd\x4c\xde\xe3\xa2\xc3\xfb\x01\xc8\xda\xf0\x18\xdb\x47\xcb\x92\xe1\x10\xee\xa8\xe0\x48\x51\x5e\xe1\x58\x93\x6d\x06\x38\x58\x59\x0a\xdb\x60\x4f\x0d\x0e\xd6\xfc\x94\x05\x15\xa1\x59\x47\xc7\x9a\x74\x4e\x2c\x71\x47\xe5\x2a\x1b\x84\x3d\x33\x00\x58\xa7\x8f\xe9\x24\x0b\x27\x6d\x24\xa9\xe2\xaa\x9f\x08\xcc\x56\xcb\x79\x08\xbb\x7c\x47\xa5\x00\x5f\x9f\xbf\x7f\x11\x1c\xf0\xef\x9f\xd3\x55\x1a\xcb\xed\x4f\x3b\xb2\x74\x3d\xac\xf7\xcf\x8c\x25\xd3\xf1\xa3\xd9\xf6\xba\x4e\x06\x1d\xab\xa4\xab\x6e\xd1\x3e\x4b\xac\x39\x85\x56\xff\x50\xcc\xa7\x63\xfe\x2d\x8c\xbc\x32\xa7\x7f\x2a\x14\xdc\x8d\x60\xcd\x89\xaf\x73\xa1\x83\xe6\xad\xb9\x1d\xf8\x22\xbe\xcf\x12\xb9\x89\xbe\xff\x1b\x41\x4b\x15\x7c\x27\xe7\xe8\xd5\x0d\xc5\x4b\x61\x89\x67\xec\x4e\x58\x4b\xc5\x3c\xfb\x15\x00\x00\xff\xff\xbb\xbb\x5c\x5d\x70\x03\x00\x00")

func templatesFindMmGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesFindMmGoTpl,
		"templates/find.mm.go.tpl",
	)
}

func templatesFindMmGoTpl() (*asset, error) {
	bytes, err := templatesFindMmGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/find.mm.go.tpl", size: 880, mode: os.FileMode(420), modTime: time.Unix(1491380433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesInsertGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x52\x5d\x6f\xda\x30\x14\x7d\x8e\x7f\xc5\x59\xb5\x07\xb2\x66\x66\xcf\x93\xfa\xd0\x96\xac\x62\xea\x42\x07\xe9\xa4\x3d\x81\x49\x4c\xb0\xea\xd8\x60\x87\x22\x14\xf9\xbf\x4f\x36\x61\x1d\x1f\xea\x1e\x20\xb6\xef\xb9\xe7\x9e\x7b\xee\x6d\x5b\x7c\xb4\x4b\x6d\x9a\x7b\xc9\xac\xc5\xd7\x1b\x84\x9b\x62\x35\x07\xcd\xd9\x5c\xf2\xfd\x7f\xe6\x1f\x9c\x23\x1e\x5f\x1c\xa0\xe1\xf0\x2e\x34\x90\xfd\xd0\x25\x97\xff\xa1\xfe\x57\x44\x97\x5b\x1f\xd2\xc2\xe1\xdd\x32\x86\x37\x1b\xa3\xfe\x62\xbb\xeb\x25\xf4\x8a\x15\x2f\xac\xe2\x68\x5b\xd0\xa7\xee\xec\x1c\x21\xfd\x3e\x1e\xd2\x2c\x1d\xdf\xe6\xe9\x00\x77\xbf\xf1\x34\x7a\x18\x51\x0c\x46\xc8\x46\x39\xd2\xc1\x30\xa7\x01\x33\x54\x96\x9b\x06\xcd\x32\x30\x74\x12\x9d\x43\xa3\xc3\x5b\xc9\x1a\x36\x67\x96\x53\xb2\xd8\xa8\x02\xbd\x13\x77\x9d\xc3\xa7\x37\x03\x9d\x8b\x3b\xbe\xde\x89\x55\x07\xdc\x81\x3e\xde\x33\x75\x6d\x39\x77\x54\x3b\x01\x37\xc6\xff\xb4\x89\xd1\x92\xa8\xdf\x47\xc5\x1b\x30\x29\x83\x24\xa5\xd5\x67\x25\x24\x16\x82\xcb\xd2\x82\xa9\x12\x2b\xc3\x57\xcc\x70\x1f\xae\xb1\xd0\x26\xe0\xd6\x1b\x6e\x76\x24\x9a\x16\x09\xa6\x22\xc1\xf4\xd5\xbb\x19\x1e\x27\x52\x14\xdc\x9e\xf7\x42\x2b\xde\x7c\x0b\xac\xe7\xfa\xe3\x04\x5f\x62\x12\xc4\xd8\xb5\x84\xd8\xdb\x16\xe8\x12\xac\x8c\xa8\x99\xd9\xe1\x85\xef\xb0\x32\xfa\x55\x94\xbc\xc4\x7c\x07\xcb\xd7\x1b\xae\x0a\x4e\x22\xbb\x96\xb6\x31\x5e\xc1\x8c\x44\xc3\x6c\x92\x8e\x73\x0c\xb3\x7c\xe4\x1b\xb7\xc5\x92\xd7\x0c\x74\xd2\x7d\xcf\x87\x8c\xde\x0c\xd7\xb0\x8d\x11\xaa\xb2\xf4\xbb\x16\xaa\xe7\xdb\xba\x4a\x70\x15\xe3\x1a\xb3\x98\x44\xbf\x6e\x1f\x9f\xd3\xc9\x25\xa0\x38\x06\x8e\xd3\xfc\x79\x9c\x0d\xb3\x07\x5f\xba\xf3\x90\xde\x6b\xb9\xa9\x95\xf7\x60\x46\x48\x34\xb8\x7b\xd4\x55\x6f\x2f\xd9\x1b\x47\x29\x8d\x49\x64\xf4\xd6\xeb\x3f\x77\x6d\x70\x47\x7f\x7a\x1f\xc6\x7a\x7b\x96\xe4\x27\x79\x03\xa3\xb7\x74\x52\x30\xe5\x6d\xad\xf4\x69\xd1\xb7\x35\x88\x49\x24\x16\x61\xfa\x1f\x6e\xe0\x67\xdc\x92\x08\xe8\xc2\x47\x0b\x13\x76\x84\x44\x8e\x90\xe8\x72\x58\x09\x49\x1c\xf9\x13\x00\x00\xff\xff\xc7\x93\x1e\x7f\x0d\x04\x00\x00")

func templatesInsertGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesInsertGoTpl,
		"templates/insert.go.tpl",
	)
}

func templatesInsertGoTpl() (*asset, error) {
	bytes, err := templatesInsertGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/insert.go.tpl", size: 1037, mode: os.FileMode(420), modTime: time.Unix(1494140827, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesInsertMmGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x52\xd1\x6e\xda\x30\x14\x7d\x8e\xbf\xe2\xac\xda\x03\x59\x33\xb3\xe7\x49\x7d\x68\x4b\x56\x31\xb5\xa1\x83\x74\xd2\x9e\xc0\x24\x26\x58\x75\x6c\xb0\x43\x11\x8a\xfc\xef\x93\x4d\x58\x07\xb4\xea\x03\xc4\xf6\x3d\xf7\xdc\x73\xcf\xbd\x6d\x8b\xcf\x76\xa9\x4d\x73\x2b\x99\xb5\xf8\x7e\x85\x70\x53\xac\xe6\xa0\x39\x9b\x4b\xbe\xff\xcf\xfc\x83\x73\xc4\xe3\x8b\x03\x34\x1c\x3c\xf4\xe1\xe1\x5d\x70\xa0\x7b\xd0\x25\x97\x1f\x90\xff\x2f\xa3\xcb\xad\x0f\x69\xe1\xf0\x41\x21\xc3\x9b\x8d\x51\xff\xd0\xfb\xeb\x3b\xf8\x15\x2b\x9e\x59\xc5\xd1\xb6\xa0\x8f\xdd\xd9\x39\x42\xfa\x7d\xdc\xa5\x59\x3a\xbe\xce\xd3\x01\x6e\xfe\xe0\x71\x74\x37\xa2\x18\x8c\x90\x8d\x72\xa4\x83\x61\x4e\x03\x66\xa8\x2c\x37\x0d\x9a\x65\x60\xe8\x64\x3a\x87\x46\x87\xb7\x92\x35\x6c\xce\x2c\xa7\x64\xb1\x51\x05\x7a\x27\x1e\x3b\x87\x2f\xaf\x36\x3a\x17\x77\x7c\xbd\x13\xbb\x0e\xb8\x03\x7d\xbc\x67\xea\xfa\x74\xee\xa8\x76\x02\x6e\x8c\xff\x69\x13\xa3\x25\x51\xbf\x8f\x8a\x37\x60\x52\x06\x49\x4a\xab\xaf\x4a\x48\x2c\x04\x97\xa5\x05\x53\x25\x56\x86\xaf\x98\xe1\x3e\x5c\x63\xa1\x4d\xc0\xad\x37\xdc\xec\x48\x34\x2d\x12\x4c\x45\x82\xe9\x8b\xf7\x33\x3c\x4e\xa4\x28\xb8\x3d\xef\x85\x56\xbc\xf9\x11\x58\xcf\xf5\xc7\x09\xbe\xc5\x24\x88\xb1\x6b\x09\xb1\xb7\x2d\xd0\x25\x58\x19\x51\x33\xb3\xc3\x33\xdf\x61\x65\xf4\x8b\x28\x79\x89\xf9\x0e\x96\xaf\x37\x5c\x15\x9c\x44\x76\x2d\x6d\x63\xbc\x82\x19\x89\x86\xd9\x24\x1d\xe7\x18\x66\xf9\xc8\x37\x6e\x8b\x25\xaf\x19\xe8\xa4\xfb\x9e\x0f\x19\xbd\x19\x2e\x61\x1b\x23\x54\x65\xe9\x4f\x2d\x54\xcf\xb7\x75\x91\xe0\x22\xc6\x25\x66\x31\x89\x7e\x5f\xdf\x3f\xa5\x93\xb7\x80\xe2\x18\x38\x4e\xf3\xa7\x71\x36\xcc\xee\x7c\xe9\xce\x43\x7a\xab\xe5\xa6\x56\xde\x83\x19\x21\xd1\xe0\xe6\x5e\x57\xbd\xbd\x64\x6f\x1c\xa5\x34\x26\x91\xd1\x5b\xaf\xff\xdc\xb5\xc1\x0d\xfd\xe5\x7d\x18\xeb\xed\x59\x92\x9f\xe4\x15\x8c\xde\xd2\x49\xc1\x94\xb7\xb5\xd2\xa7\x45\x5f\xd7\x20\x26\x91\x58\x84\xe9\x7f\xba\x82\x9f\x71\x4b\x22\xa0\x0b\x1f\x2d\x4c\xd8\x11\x12\x39\x42\xa2\xb7\xc3\x4a\x48\xe2\xc8\xdf\x00\x00\x00\xff\xff\x33\xeb\x40\x39\x13\x04\x00\x00")

func templatesInsertMmGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesInsertMmGoTpl,
		"templates/insert.mm.go.tpl",
	)
}

func templatesInsertMmGoTpl() (*asset, error) {
	bytes, err := templatesInsertMmGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/insert.mm.go.tpl", size: 1043, mode: os.FileMode(420), modTime: time.Unix(1494140862, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x93\xcf\x6e\xa3\x3a\x18\xc5\xd7\xf8\x29\x8e\xd0\x95\x9a\xdc\x20\xd0\xdd\x5e\x29\x8b\x76\x88\x3a\x95\x46\x49\xa6\xa5\x8b\x51\xa7\x0b\xc7\x7c\x80\x55\xb0\xa9\x6d\x48\xa2\x88\x77\x1f\x39\xd0\x7f\x33\xea\xec\x3e\xd9\xe7\x77\x8e\x39\xd8\x2d\x17\x4f\xbc\x24\x9c\x4e\x88\xb7\xd3\x3c\x0c\x8c\xc9\xa6\xd5\xc6\x61\xc6\x82\xd0\x3a\x23\xb4\xea\x43\xc6\x82\xb0\x94\xae\xea\x76\xb1\xd0\x4d\xd2\x70\xe7\x2a\xda\x37\x1d\xd5\x35\x99\xa4\x2d\x0f\x21\x9b\x33\x96\x24\xb8\x5e\xad\x57\xb7\x97\xd9\x2a\xc5\xd5\x0f\x6c\x37\xd7\x9b\x18\xe9\x06\xeb\x4d\x86\x55\x7a\x93\xc5\x67\x4d\x7a\x05\x69\xe1\x2a\x82\xd0\x4d\xa3\x15\xa4\x72\x64\x0a\x2e\x08\x85\x36\xc8\xb9\xe3\x3b\x6e\x09\xba\x25\xc3\x9d\xd4\xca\x8b\xb9\x83\xe0\x0a\x3b\x42\x67\x29\xc7\x5e\xba\xca\x7b\xb9\x63\x4b\x16\x85\xd1\x0d\xac\xa8\xa8\xe1\xb8\xf0\x9f\x73\x37\xce\xc3\x70\x11\xb3\x24\xf1\xc2\xac\x92\x16\xb6\xd2\x5d\x9d\x63\xaf\xcd\xd3\xd9\xe1\x35\x2b\xb1\xcf\x75\x9c\x5e\x81\xab\xfc\xe3\x5a\x76\x88\x99\xcf\x38\x1f\xfa\xf5\x98\x27\x16\xac\x0e\x24\x66\xd6\x19\xa9\xca\x08\x71\x1c\xbf\x6e\x9e\x86\x39\x66\x6d\x79\x88\xbf\xe8\xa6\xe1\x2a\xcf\x78\x19\x81\x8c\xd1\x66\xce\x82\xef\x1d\x99\xe3\xe7\xd8\xbf\x9e\xbb\xd5\x7b\xfb\x1b\x71\xab\xf7\x9f\x42\x2f\x0c\x1b\xa6\x72\xbf\xe9\x12\xad\xd1\xbd\xcc\x69\x6c\xb9\xd6\x25\x8a\x4e\x89\xb1\xb9\xdd\x11\x25\x29\xdf\x2c\xe5\x78\xee\xc8\x48\xb2\x31\xeb\xb9\x99\xd0\xe5\x59\xfb\x69\xdc\x69\x60\xec\x6c\xe6\xd1\xe3\x5d\x2d\x05\xd9\x59\x21\xa9\xce\x2d\x1a\xde\x3e\x8c\xdc\xe3\x3b\x26\x82\x2e\x0a\x4b\xce\xf7\x37\xc7\x4c\xe0\xe1\xf1\xc5\x5c\xbe\x9b\x7b\x3c\x3c\x7e\x4c\x62\x81\xc2\xff\xcb\x17\x7a\x81\xff\x58\xe0\xef\x87\xd0\x75\x84\x9e\xd7\x7e\xcf\x70\x55\x12\xa6\xf8\x13\x0b\x02\x81\x25\x78\xdb\x92\xca\x67\x22\x42\xf8\x33\x0c\x17\x42\xd7\x0b\x3f\xcc\x59\x10\xc8\xb7\x6d\x19\x21\xfc\x27\x5c\x4c\x37\x3c\xbe\x71\x9a\xcf\xd4\xdc\x8b\xfa\x37\x51\x7f\x4e\xf2\x8b\x6a\xb1\x60\xc1\xc0\x02\x43\xae\x33\x0a\x22\x82\x8c\xd0\xfb\xd2\x85\x56\xd6\xbf\x16\x20\x49\x70\xdf\x5a\x32\x2e\xd5\x6b\xed\x2a\xa9\x4a\xa4\x1a\x6a\x1a\x65\xe1\xff\x86\xa1\x0b\x0b\x0e\xa1\x55\x51\x4b\xe1\x18\xfe\x40\x96\x08\xc7\x27\xf3\xf5\x66\x7d\x1d\x7e\xb4\xbd\x6f\x73\xee\x08\x5b\x32\x85\x36\x0d\xb8\x42\x37\xae\xec\x2b\x52\x7f\xb7\x9f\xd0\xd1\xfd\x7e\x9b\x5e\x66\x2b\xff\x68\x7f\x05\x00\x00\xff\xff\x78\x7d\xbe\xda\x05\x04\x00\x00")

func templatesModelGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGoTpl,
		"templates/model.go.tpl",
	)
}

func templatesModelGoTpl() (*asset, error) {
	bytes, err := templatesModelGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.go.tpl", size: 1029, mode: os.FileMode(420), modTime: time.Unix(1492158068, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTableGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xcb\x6e\xdb\x30\x10\x3c\x8b\x5f\x31\x35\x7a\xb0\x8b\x54\xb9\x1b\xf0\xa1\x8a\x94\xa0\x87\xca\x41\xa1\x4b\x11\x04\x08\x2d\x51\xb6\x5a\x89\x34\x48\xaa\x41\x40\xf0\xdf\x0b\x52\xa2\xdc\x3c\xfc\xb8\x08\xab\xe5\xec\xcc\x3e\x8d\xc1\x67\xb5\x13\x52\xdf\xb4\x54\x29\x2c\x57\xf0\x7f\x9c\x76\x0c\x71\x41\x37\x2d\x1b\xbe\xb9\x73\x58\x4b\x1c\xbe\x0c\x50\x6f\x9c\x84\x7a\xb2\x1f\xa2\x62\xed\x19\xea\xff\x93\x18\x63\xbb\x10\xe6\x8d\xa3\x32\x7b\x5a\xfe\xa1\x5b\x06\x63\x10\xdf\x8f\xb6\xb5\x84\x5c\x5f\xe3\x2e\xcb\xb3\x9f\xdf\x8a\x2c\x45\xf2\x0b\xf7\xeb\xbb\x75\x8c\x74\x8d\x7c\x5d\x20\x4b\xbf\x17\xb1\xc7\x64\x52\x1e\xc4\xac\xcd\x85\xbe\x15\x3d\xaf\x20\x99\xee\x25\x67\x15\x9a\x1a\x7a\xe7\xe9\x27\x10\x1a\x05\x2e\x34\x6a\x87\x24\x7f\xa9\x3c\xca\xb2\x02\x93\x52\x48\x15\xe7\xec\x79\x3e\x7b\xc5\x31\x11\xcc\x16\x3e\x11\x63\x4e\xf7\x73\x78\x25\xfa\x65\xcf\xce\x63\x95\x96\x7d\xa9\x61\x48\x94\x26\x48\x13\x62\x83\xc4\xc9\x5e\x0e\xaf\x93\xc4\x69\xec\x24\x01\x87\x95\x94\x6f\x19\xe2\x1b\xd1\xf6\x1d\xf7\x23\xf4\xee\xba\x61\x6d\x15\xdc\x21\x32\xf8\xbd\x4e\x9c\x52\x4d\x0b\x67\x59\x8b\xa7\xdf\x4a\xf0\xa5\xeb\xd3\xeb\x90\x2b\xd1\x35\x9a\x75\x7b\xfd\x32\x7b\x32\x06\x8c\x57\x4e\x61\x28\x2a\x67\xcf\x17\xd6\x55\xf7\xbc\xbc\x04\x3e\xaf\x36\x48\x93\xc5\xf9\x2e\x1b\x12\x0d\x6b\x72\x16\x6a\x48\x14\xa5\xc9\x12\xd5\xe6\x8a\x44\x21\xf3\x2d\xd3\xb7\xae\x0f\x0a\x35\xd3\xe5\xce\xaf\x19\x17\xfc\x2b\x6f\xda\xa1\x41\x6a\x48\x79\xfe\xe6\x48\xad\xc5\x97\xc3\x1d\x5a\xbb\x38\x30\xcd\xdf\x1c\x5d\x80\x86\xad\x5b\xa0\xa3\xfb\x07\xa5\x65\xc3\xb7\x8f\x0d\xd7\x4c\xd6\xb4\x64\xc6\x97\x32\x48\xfa\x83\xfb\x10\x63\x2c\x39\x3e\xeb\xa6\xc6\x3b\xe9\xf8\xd8\x02\x7c\x5a\xc1\xd5\xe8\x56\x07\x63\xa5\x0f\xef\x87\x3e\x7b\xc4\xea\x72\x52\x02\x8c\x3b\x37\x6e\xc7\x34\x9b\xb1\x95\x96\xfc\x0b\x00\x00\xff\xff\xee\xd2\x35\x39\xec\x04\x00\x00")

func templatesTableGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTableGoTpl,
		"templates/table.go.tpl",
	)
}

func templatesTableGoTpl() (*asset, error) {
	bytes, err := templatesTableGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/table.go.tpl", size: 1260, mode: os.FileMode(420), modTime: time.Unix(1491979613, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTableMmGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x52\x4d\x8f\x9b\x30\x10\x3d\xe3\x5f\x31\x8d\x7a\x48\xaa\x2d\x7b\x8f\x94\x43\x59\xd3\x55\x0f\x81\x55\xc5\xa5\x5a\x45\x8a\x03\x03\xa1\x05\x83\xb0\x51\x15\x59\xfe\xef\x95\x6d\x20\x21\x1f\x6d\x2f\xd1\xe4\xf1\x66\xe6\x3d\xbf\x51\x0a\x3e\x8a\x63\xd3\xc9\x97\x8a\x09\x01\xeb\x0d\xd8\x7f\x9c\xd5\x08\x7e\xc2\x0e\x15\xba\xdf\xc8\x00\x5a\x13\xc3\x4f\x47\xaa\x2d\x0c\x75\xbb\x7d\x48\xb6\xe3\xb6\x4d\x86\xd5\x3f\x86\x5f\xca\x18\x7a\xeb\xb1\xcd\x16\x7f\x59\xd4\xb2\xf4\x17\x2b\x10\x94\x02\xff\x6d\xa8\xb5\x26\xe4\xf9\x19\x5e\xc3\x28\xfc\xfe\x25\x09\x29\x04\x3f\xe0\x2d\x7e\x8d\x7d\xa0\x31\x44\x71\x02\x21\xfd\x96\xf8\x96\x73\x36\xa5\xb5\x33\x45\xe4\xa9\xc5\x39\x2e\x64\xd7\xa7\x12\x14\xf1\x68\x00\x34\x20\x7a\x6a\x75\x32\xb5\x76\x32\xcf\xad\x13\x3e\xb5\x82\xc1\x3b\xc6\x0b\x04\xff\xa5\xa9\xfa\x9a\x5b\xaf\x16\xce\x4b\xac\xb2\x11\x1e\x8c\x4d\xb8\x9d\xe9\x53\x26\x59\x62\x2a\xad\x61\xff\x53\x34\x7c\xbd\x30\x8e\x67\x2d\x4f\x4d\x5d\x4a\xac\x5b\x79\x5a\xec\x95\x02\xe4\x99\xd9\xe0\xc4\x46\xf8\xfb\x8e\xde\xbc\xe7\xe9\xf5\xa7\x65\x76\x00\x1a\xac\xe6\x2f\xa0\x88\xd7\xa1\xec\x3b\x3e\x83\x15\xf1\x3c\x1a\xac\x21\x3b\x3c\x11\x6f\xdc\x54\xa0\xfc\x6a\x74\x0b\xc8\x51\xa6\x47\x90\x47\x04\xde\xf0\xcf\xbc\xac\x9c\x21\xe1\xd6\x2e\xaf\xee\x4f\x6b\xf8\x74\x39\x7c\x75\x9e\xb4\xbc\xba\xa6\x91\x3a\x4a\x5e\x41\xcd\xda\x77\x21\xbb\x92\x17\xbb\x92\x4b\xec\x72\x96\xa2\xb2\xb2\xdd\x4a\x7b\x49\x77\x39\x4a\x93\xc7\xd9\x94\x39\xdc\xac\xf6\x1f\x05\xf6\x61\x03\xc6\xa3\x89\x1a\x06\xa7\xef\xb7\x21\x2d\x76\xb0\xf9\xff\xa1\x04\x60\xb8\x91\x21\xcd\x29\x87\xe1\x29\x35\xf9\x13\x00\x00\xff\xff\x98\xf3\xfb\x8b\xc7\x03\x00\x00")

func templatesTableMmGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTableMmGoTpl,
		"templates/table.mm.go.tpl",
	)
}

func templatesTableMmGoTpl() (*asset, error) {
	bytes, err := templatesTableMmGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/table.mm.go.tpl", size: 967, mode: os.FileMode(420), modTime: time.Unix(1491378843, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUpdateManyGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x4d\x6f\xeb\x36\x10\x3c\x8b\xbf\x62\x6b\xf4\x20\x36\x82\x9c\x73\x00\x1d\x92\x58\x4d\x53\x34\x76\x6a\x3b\x28\x8a\x20\xb0\x19\x79\x6d\x13\xa1\x28\x85\x94\x92\xba\x02\xff\x7b\xc1\x0f\xd7\x1f\xf1\xf3\x7b\x97\x44\xe4\xce\xce\xce\xce\xae\xd9\x75\xf0\xb3\x5e\x57\xaa\xb9\x15\x4c\x6b\xb8\xca\xc0\x9d\x24\x2b\x11\xd2\x29\x7b\x15\xe8\xff\x0e\xed\x85\x31\xc4\xe2\x8b\x2d\xd4\x7d\x9c\x85\x3a\xb2\x87\x6a\x81\xe2\x3b\xd4\xfb\x22\x42\x6e\xb9\x4d\x73\x1f\xe7\xcb\x70\xb9\x6a\x05\x53\xff\xa3\x15\x36\xad\x92\xdf\xc4\x87\xf0\x55\x06\xb5\x68\x15\x13\xfc\x5f\xdc\x23\x31\x86\xd4\xac\x78\x63\x2b\x84\xae\x83\xf4\x31\x7c\x1b\x43\x48\xbf\x0f\x77\xf9\x30\x1f\x5f\x4f\xf3\x01\xdc\xfc\x0d\x8f\xa3\xbb\x51\x0a\x83\x11\x0c\x47\x53\xc8\x07\xf7\xd3\x94\x10\x5e\xd6\x95\x6a\x20\x26\x51\x0f\x95\xaa\x94\xee\x91\xa8\xa7\x1b\xc5\xe5\x4a\xf7\x08\x75\x24\x4f\xf5\x82\x35\xf8\xc0\xe4\x06\x54\xf5\xa9\xe1\x75\x03\xcd\x1a\xa1\xa8\xe4\x82\x37\xbc\x92\x64\xd9\xca\x02\xe2\xa3\xe9\x18\x03\xbf\xec\x06\x60\x0c\xdd\xe3\x89\x8f\xec\xde\x62\xcb\x70\x4a\x76\xe4\xe0\xc5\x24\x50\x33\xc5\x4a\x9d\xa6\x29\x70\xd9\xa0\x5a\xb2\x02\x3b\x43\x7d\xd9\x60\x91\x31\xf0\xfc\x72\xc8\x83\x4a\x81\x6b\x8c\x42\x47\xa2\x25\x47\xb1\x70\xdb\xf0\x45\x6c\xba\xc2\xe6\x57\x17\xfe\x2a\x8e\x12\x12\xf5\xfb\x50\x2b\xac\x99\x42\xd7\xbc\x16\xbc\x40\x4d\xa2\x59\x91\xc0\x8c\x27\x30\xfb\xb0\xac\xef\x2d\xaa\xcd\xc4\x85\x62\x5f\x2b\x01\x81\x32\xf6\xda\x69\xe0\xd1\xef\xc2\x23\x49\xa4\xdf\x85\x6e\xdc\x26\xcc\x9f\x1e\x07\xd7\xd3\xdc\x0a\xd3\xc5\x1a\x4b\x06\xe9\x24\xfc\xff\xba\x17\x30\xc9\xa7\x10\xcf\xe1\x82\x44\x51\x18\x56\xfa\x7b\xc5\x65\x6c\xe5\xf4\x12\xe8\x51\xb8\x80\x39\x85\xec\x34\x88\x1f\x80\x2c\x02\x00\x60\xfe\xd7\x6f\xf9\x38\xb7\xc7\x3d\xf7\x2f\x60\x0e\x9e\x62\x3e\xce\xa7\x4f\xe3\xe1\xfd\xf0\xce\x6a\x0c\x4e\xa6\xb7\x95\x68\x4b\x69\x0d\x9c\x13\x02\xf0\xc1\x44\x8b\xce\xe0\xe7\x97\xbd\x31\x75\x66\x17\xcb\x80\xd5\x35\xca\x45\xec\xcf\x7b\x83\xa5\x67\x40\xb3\x0f\x07\x70\xfe\xa9\x56\x6e\xfd\x1b\xdc\xfc\x51\xad\x62\xef\x62\x12\x92\x03\x93\x5d\x55\x3f\xff\x93\xe3\x1e\xdc\xa4\x7f\x5a\x8e\xd3\xc9\x7c\xe9\x32\x7f\xca\x40\x72\x01\x9d\xf3\x27\x2c\xd9\xc1\xbe\xb9\x02\x04\xc0\xf6\xb7\xc0\x25\x2a\x57\x36\xbd\x15\x95\xc6\x98\x5a\x47\x96\x55\xb8\x1b\xe2\x3f\x4d\x4c\x03\xd7\xc1\x3b\x60\xcc\x56\xe2\x76\x6f\x9d\x5f\xe0\x24\x64\x3e\x7b\x52\x30\x69\x17\x73\x55\x1d\x3b\xbf\xcf\x43\x5d\xda\x29\xf1\xe7\xe5\xfb\x06\xe0\x30\xb8\x1b\xc2\x51\xce\x91\x78\xea\xfa\xf7\xa6\x39\xad\xb9\x52\x31\xfd\x11\xef\x76\x68\x4f\x61\x87\x8b\x52\xb7\x0a\xe1\x13\xb7\x39\x4c\x02\x96\x75\xb3\x01\xa6\x14\xdb\xf8\x05\x60\xcd\x1a\x15\x34\x6b\x26\x5d\x8d\xcf\x35\x4a\x9b\x51\x32\xa5\xd7\x4c\x90\x88\x2f\xdd\xcf\xee\xa0\x1c\x85\x2c\x83\x4b\xfb\x0a\x44\xe1\xae\x64\x6f\x18\x1f\x3f\x18\x97\x34\xb1\x9c\x24\x72\x2d\x9d\xd6\x6d\xe3\x86\xfc\x17\x00\x00\xff\xff\x90\xa4\x8b\x51\x8e\x06\x00\x00")

func templatesUpdateManyGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUpdateManyGoTpl,
		"templates/update-many.go.tpl",
	)
}

func templatesUpdateManyGoTpl() (*asset, error) {
	bytes, err := templatesUpdateManyGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/update-many.go.tpl", size: 1678, mode: os.FileMode(420), modTime: time.Unix(1494140953, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUpdateGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x55\x4d\x6f\xe3\x36\x10\x3d\x93\xbf\x62\x2a\x18\xa8\xd4\x75\x15\xec\xb5\x80\x0f\x9b\xb5\x9a\xa6\x1f\x4e\xea\x38\x28\x8a\xa2\x88\x19\x69\x6c\x13\x91\x28\x85\xa4\xe2\x35\x0c\xfe\xf7\x82\xa4\x64\xd9\x89\xec\x26\x05\xba\xb9\x24\x14\x67\xe6\xcd\x9b\x0f\x3e\x6f\xb7\x30\x50\xab\x52\xea\xcf\x39\x53\x0a\x7e\x18\x81\xfb\x12\xac\x40\x88\x67\xec\x3e\x47\xff\x77\x62\x2f\x8c\xa1\xd6\x3f\x6d\x5d\xdd\xe1\xa4\xab\x03\xfb\xad\xcc\x30\xff\x17\xe8\x7d\x12\x4d\x6c\xd1\x86\xb9\xc3\xc9\x34\x12\x75\x2d\xc5\xce\xb7\xf9\xec\xf3\xae\x58\xfa\xc0\x96\x08\xdb\x2d\xc4\xd7\xcd\xd9\x18\x4a\xcf\xce\xe0\x22\x99\x24\xd3\x4f\xb3\x64\x0c\xe7\x7f\xc2\xf5\xd5\xc5\x55\x0c\xe3\x2b\x98\x5c\xcd\x20\x19\x5f\xce\x62\x4a\x79\x51\x95\x52\x43\x48\x49\x80\x52\x96\x52\x05\x94\x04\x4a\x4b\x2e\x96\x2a\xa0\x91\x03\xb9\xad\x32\xa6\x11\xf4\xca\xa5\x68\x6a\x30\x06\xee\x37\xee\xee\x5a\xf2\x82\xc9\x0d\xfc\x82\x1b\xba\xa8\x45\x0a\xe1\xb3\x01\x18\x03\xdf\x75\x3d\x36\x26\x6a\x10\xc3\x67\xdd\x6c\xfd\xda\x04\x43\x9b\xae\xf2\xe8\xbe\x55\x9f\xcb\xbc\x2e\x84\x43\xec\x4c\x7a\x53\x1d\x98\x22\x4f\xa0\x69\x98\x77\xdd\xc3\x44\x29\xc1\x95\x1a\xc1\x96\x92\x05\xc7\x3c\x73\x83\x7f\x41\x3a\x5e\xa2\xfe\xd1\x99\x5f\x12\x8d\x28\x25\x67\x67\xb0\xe0\x52\x69\x48\x57\x98\x3e\x00\x5f\xc0\x1a\x61\xc5\x9e\x7c\xa7\x1a\x72\xf0\x80\x1b\x4a\xf8\xe2\x54\x29\xa3\x11\x08\x9e\x5b\x36\xa4\x21\x7d\xc0\x7f\xe8\xe9\xaa\x78\x82\xeb\x70\xbe\x87\x0b\xc1\x71\xd0\x00\x8a\x5a\x69\xb8\x47\x10\xa5\xf8\x5e\xf0\x7c\x1e\x51\x62\x3c\xeb\xac\x14\xdf\x6a\xa8\xbb\xa9\x1e\x70\xcd\x30\x47\x8d\xa1\x6f\xcc\xf0\x64\x8e\xa6\x0b\x95\xc4\x8a\x49\x0f\xa5\x72\x9e\xa2\xa2\xe4\x2e\x1d\xc2\x1d\x1f\xc2\xdd\x93\xed\xed\x63\x8d\x72\x73\xe3\x4c\x3b\xe0\x8f\x4d\xb4\x7a\xcc\xbd\x9d\x12\xf5\x98\x2b\x2d\x6d\xc0\xfc\xf6\x7a\xfc\x69\x96\xd8\x46\xa8\x74\x85\x05\x83\xf8\xa6\xf9\xff\xf2\x01\xc0\x4d\x32\x83\x70\x0e\x1f\x28\x21\xcd\xea\xc6\x3f\x97\x5c\x84\x96\x44\x30\x84\x20\x82\x0f\x30\x8f\x60\xd4\xef\xc4\xf7\x9d\x28\x21\x7f\xfc\x94\x4c\x93\xd3\xbd\x1d\xc1\xe0\x23\x25\x64\x9a\xcc\x6e\xa7\x93\xcb\xc9\x85\xe5\xd9\x6c\xd2\x9e\xdf\xdc\x17\x28\x6b\xd1\x16\xf8\xc4\xf2\x1a\xdd\xb6\xb1\xaa\x42\x91\x85\x7f\xfd\xcd\x85\x46\xb9\x60\x29\x6e\xcd\xf6\xd4\x92\x18\xdb\xcb\x38\x8e\x23\x4a\xc6\xe7\xbf\x96\xcb\xd0\x37\x6b\x08\x1e\xd3\x59\x28\x91\xe5\xba\x7f\x97\xc7\xe7\xf1\xef\x96\xc3\xb4\x5c\xf7\x45\x12\xfb\x2a\x46\x20\xcb\x75\x7c\x93\x32\x61\x17\x7e\x59\x3e\xaf\xa8\x5b\xc9\xc8\xad\xb4\x8d\xf9\xe6\x15\xbb\xeb\x17\xaf\xdf\x2c\x78\x4e\x0d\xb5\x82\x27\x99\x58\x22\x0c\x78\xf6\xc5\x56\x10\x5f\x8a\x0c\xbf\x60\x2b\x9c\x7c\x01\xf1\xa5\xba\x15\xfc\xb1\xb6\x13\xf7\x37\xa2\xd4\xf6\xb6\xd5\x1f\x63\x3a\xb1\x3a\xdf\x58\x17\x0b\x51\xa0\x5e\x95\x99\xc7\x35\x06\x16\x5c\x64\xc0\x0e\x24\xe1\x6d\xa2\x75\x0c\xf9\x55\x62\xe6\xe2\x2a\x26\x59\xa1\xda\xb8\xf7\x57\x2b\x96\xe7\xee\xe9\x3e\xe0\x46\xd9\x4b\x81\x98\x51\xb2\x9b\xc8\xde\x12\x7a\x19\xeb\x8a\x68\x6d\xed\x3b\x7c\x93\x90\xd9\x5f\xab\xc3\xf0\x5e\xc5\xb2\x44\x50\x64\xee\x07\xad\x57\xbc\x2c\xed\x7e\xba\x3d\x4a\x76\x94\x7b\x10\xbd\xc8\xf4\xdf\x64\xad\x4d\x92\xa3\x58\xea\xd5\x6e\xca\x6f\xd2\xba\x41\x2b\x76\x83\xff\x59\xed\xc0\x7b\xcc\xbd\xe4\xb5\xd4\xd7\x2b\x94\xb8\x7b\x31\x8d\x4b\x9f\xd6\x0d\x5e\x29\x76\x87\x2a\x67\xfa\xa7\xd5\xb8\xef\xa4\xd1\x7f\x0f\x4f\x6e\xdc\xc1\xd0\xc8\x31\x84\x77\xd2\xcd\xc1\x57\x10\xce\x5d\xf5\x5d\x1b\xba\xd3\x3f\x01\x00\x00\xff\xff\xc8\x1a\x10\x9b\x08\x0b\x00\x00")

func templatesUpdateGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUpdateGoTpl,
		"templates/update.go.tpl",
	)
}

func templatesUpdateGoTpl() (*asset, error) {
	bytes, err := templatesUpdateGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/update.go.tpl", size: 2824, mode: os.FileMode(420), modTime: time.Unix(1494140899, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUpdateMmGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xdf\x6f\xe2\x38\x10\x7e\xb6\xff\x8a\x39\x74\xd2\x25\xd7\x9c\x79\x3f\x89\x87\xb6\xa4\xdd\x6e\xb7\xc0\x02\xd5\x6a\xb5\x5a\x81\x1b\x26\xc1\x22\x38\xd4\x4e\x40\x28\xf2\xff\xbe\xb2\x1d\x4a\xf9\xb5\xdd\x07\x88\xed\xf9\x66\xe6\x9b\xf9\x66\xea\x1a\xfe\xd6\xf3\x42\x95\xb7\x39\xd7\x1a\xfe\xef\x80\xbb\x49\xbe\x44\x60\x63\xfe\x92\xa3\xff\xef\xd9\x07\x63\xa8\xc5\x27\x3b\xa8\x3b\x58\xe8\xd3\xd3\x45\xb0\x0b\xf7\x54\xcc\x30\xff\x20\xf8\x7b\x1a\x8d\xef\x72\xe7\xe6\x0e\x1f\x24\x52\x58\x56\x4a\xbe\xa1\xfd\xf5\x02\x7e\xc5\x93\x05\xcf\x10\xea\x1a\xd8\xa0\x39\x1b\x43\x69\xbb\x0d\xf7\x71\x2f\x1e\x5e\x8f\xe3\x2e\xdc\x7c\x87\x41\xff\xbe\xcf\xa0\xdb\x87\x5e\x7f\x0c\x71\xf7\x61\xcc\x1c\xe6\x79\x35\xe3\x25\x42\x39\x77\x11\x1a\x9a\xc6\xc0\xcb\xd6\xbd\x0d\x94\x58\x72\xb5\x85\x47\xdc\xd2\xb4\x92\x09\x04\x47\x5d\x36\x06\xfe\xdd\x37\xd2\x98\xb0\x89\x68\x71\xe9\x62\xc5\x15\x5f\x6a\x60\x77\x85\x42\x91\xc9\x47\xdc\x6a\x60\xb7\x45\x5e\x2d\xa5\x05\x47\x70\xd4\xd6\x5d\xb4\x1d\x8d\xd0\xe7\x6b\xfa\x61\xcc\x01\xc7\x08\x50\x29\xfb\x2b\x54\x08\x35\x25\xa9\xc0\x7c\xe6\xc4\x3c\xe1\xc8\x32\x2c\xef\x9c\x39\x38\xc9\x18\x52\x4a\xda\x6d\x48\x85\xd2\x25\x24\x73\x4c\x16\x20\x52\xd8\x20\xcc\xf9\xda\x37\x26\xf5\xec\x61\x81\x5b\x4d\x49\x5d\x83\xe2\x32\xc3\xc3\xaa\x8c\xa1\x84\x88\xd4\xa6\x76\x3c\x76\x65\x36\x32\x41\xa7\x03\x52\xe4\x96\x26\x21\x4d\x39\x07\x95\x45\xbe\x10\xcd\x7a\xb8\x09\xa6\x2d\xab\xe6\x41\x80\x16\x2c\x2b\x5d\xc2\x0b\x82\x2c\xe4\x7f\x52\xe4\xd3\x90\x12\x62\x1c\x1d\x94\x33\x27\xb9\x2d\x63\x56\xc8\x7f\x4a\xa8\xf6\xaa\xfe\x31\xf9\x19\xe6\x58\x62\xe0\xbb\x18\xc1\x19\x0a\xe1\x49\xb6\x95\xc2\x15\x57\x3e\x91\xce\x45\x82\x9a\x92\x49\x12\xc1\x44\x44\x30\x59\x5b\x29\x5e\x2b\x54\xdb\x91\x33\xbd\x85\x76\xa3\x91\xa3\xcc\xca\xf9\x31\x8f\x46\x0c\xfd\x9a\x7b\x4f\x4a\xf4\x6b\xae\x4b\x65\x43\x4d\x9f\x07\xdd\xeb\x71\x6c\xdd\x75\x32\xc7\x25\x07\x36\x6a\xbe\xa7\x7b\x01\xa3\x78\x0c\xc1\x14\xae\x28\x21\xba\x54\x42\x66\x9a\x7d\x2e\x84\x0c\x2c\xbd\x56\x04\xad\x10\xae\x60\x1a\x42\xe7\x3c\x48\xbc\x07\x51\x42\xbe\x7d\x8a\x87\xb1\x27\xbe\x99\xa3\x3a\xd7\xbf\x61\x3c\x7e\x1e\xf6\x1e\x7a\xf7\x6f\x33\x70\x30\xeb\x53\x5f\x99\xaa\xe4\xae\xb2\x35\xcf\x2b\x74\xf3\xfa\xe3\xa7\x90\x25\xaa\x94\x27\x58\x9b\xda\xfc\x56\xa6\xc6\xab\x03\x7c\xb5\x42\x39\x0b\xfc\x3d\xba\x34\x78\x07\x9a\x5d\x74\x9e\xac\x19\x63\x21\x25\xdd\x9b\x2f\x45\x16\xf8\x96\x47\xe0\xad\xce\x42\x89\x2a\x36\xe7\x57\xab\x7b\xc3\xbe\xda\x82\x86\xc5\xe6\x9c\x27\xb1\x4b\xda\x01\x55\x6c\xd8\x28\xe1\xd2\xee\x5f\x56\x1c\xb7\x67\xbf\x07\x21\xb5\x5b\x64\x7d\xfe\xda\x6f\xcc\xc5\x85\xa1\xc4\x0e\xe2\x79\xb3\x14\x39\x35\xf4\x57\x00\x00\x00\xff\xff\xcb\x1c\x76\x7a\x15\x06\x00\x00")

func templatesUpdateMmGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUpdateMmGoTpl,
		"templates/update.mm.go.tpl",
	)
}

func templatesUpdateMmGoTpl() (*asset, error) {
	bytes, err := templatesUpdateMmGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/update.mm.go.tpl", size: 1557, mode: os.FileMode(420), modTime: time.Unix(1494140926, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUpsertGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x54\x4d\x6f\xe3\x36\x10\x3d\x9b\xbf\xe2\x55\x30\x16\x52\x63\xc8\x3d\x17\xf0\x21\xb1\xb4\x0b\xb7\xa9\x9c\xda\x72\xd1\x9e\x22\x45\xa2\x65\xa2\x12\xa9\x50\x54\x1c\x43\xe0\x7f\x2f\xa8\x8f\x38\x8e\xbd\x59\x6c\x81\x62\x0b\xb4\x17\x9b\x22\xdf\x3c\xce\xcc\xe3\xbc\xa6\xc1\xb8\xda\x09\xa9\xe6\x79\x5c\x55\xf8\x71\x86\xf6\x8b\xc7\x05\x85\x1b\xc6\x0f\x39\xed\x7e\x03\xb3\xa1\x35\x31\xf8\x64\x80\xb6\x8b\x77\xa1\x2d\xd9\x2f\x22\xa5\xf9\x17\xa8\x5f\x27\xd1\xc7\x16\x43\x58\xbb\x78\xf7\x1a\x49\x55\x2d\xf9\x0b\xb6\xff\xbc\x84\x2e\xe3\xe4\xcf\x38\xa3\x68\x1a\xb8\x77\xfd\x5a\x6b\x42\xa6\x53\x7c\xf2\x03\x7f\x75\x1d\xfa\x1e\x6e\xfe\xc0\xdd\xf2\xd3\xd2\x85\xb7\x44\xb0\x0c\xe1\x7b\x8b\xd0\x25\x84\x15\xa5\x90\x0a\x36\x19\x59\x54\x4a\x21\x2b\x8b\x8c\xac\x4a\x49\xc6\xb3\xca\x22\x04\xb0\x32\xa6\x76\xf5\x83\x9b\x88\x62\x5a\xc4\x4a\xed\xe8\xbe\xa8\x69\x9e\x53\x39\x2d\xb3\x67\x8b\x38\xed\x3d\x9b\xb2\xa2\x52\x41\xed\xda\x2c\xfa\x32\xb5\xc6\xc3\xa1\xdd\xbb\x93\xac\x88\xe5\x01\x3f\xd3\x03\xd9\xd6\x3c\x81\xfd\x46\x23\xad\xf1\xfd\x51\x06\xad\x9d\x9e\xd1\x7e\xd3\xf0\x01\x37\x5c\x30\x41\x9c\x28\x26\x38\xba\x94\x9d\x8e\xb8\xef\x95\xd6\x38\xc5\x52\x29\xd1\x56\xe9\xa0\x21\xa3\x2d\xa3\x79\xda\x6a\x7e\x96\x8c\x9b\x51\xf5\xb1\x3d\x3e\x4f\xc0\x21\x64\x34\x9d\xa2\x94\xb4\x8c\x25\x6d\xcb\xab\x72\x96\xd0\x8a\x8c\xee\x93\x09\xee\xd9\x04\xf7\x4f\x86\xf5\xb1\xa6\xf2\xb0\x6e\x8f\xec\xee\xae\x09\x7e\x70\x4c\x4f\xa7\x53\xa4\x54\x51\x59\x30\x4e\x21\x38\x12\xc1\xb7\x39\x4b\x54\x5f\x0c\x01\x9e\x62\x89\xba\xed\xc0\xf5\xeb\xfa\x08\xc0\xb6\x43\xc9\xb3\x59\xdf\x24\x4f\x6c\xca\x34\x56\x14\x0d\x01\x70\x1a\x37\x43\xe4\x2d\xb1\xb9\xf3\xae\x43\x1f\x6b\x3f\x84\x1d\xe1\xaa\x67\xab\xdc\x9f\x04\xe3\xb6\xc9\xda\x9a\xc0\x72\x70\x85\xc8\xc1\x0c\x36\xfc\xdf\xe7\xb7\x1b\xcf\xf7\xdc\xcf\x81\x5f\x00\x7d\x54\x44\x00\x0d\x9a\x57\xf4\x72\x82\x81\x50\x3b\xc6\xb3\xcb\x19\xbe\x01\x1d\xa9\x3a\x74\xaf\xe6\x89\xb0\x93\x4e\xc7\xca\x0d\xe8\xde\xb6\x18\x7f\x8a\x73\x96\xf6\xbc\xfd\xf5\x96\x63\x88\x3a\xb1\xaa\xc7\xbc\x93\x83\xc0\xac\x2b\x25\x8d\x40\xd1\x22\x58\xfb\xab\x10\x8b\x20\x5c\x1a\xfa\x2a\xd9\xd1\x22\x86\xbb\xee\xff\xcf\x47\xed\xcb\xdd\x8b\x70\x45\x46\xd1\x6f\xd7\xb7\x1b\x7f\x7d\x09\xcd\xce\xd0\x40\xb4\x0c\x30\x5f\x06\x1f\x6f\x17\xf3\x10\xb6\xd5\x34\x28\xbb\x79\xe9\xfc\x61\x2e\xf2\xba\xe0\xe6\x59\x5a\x43\xc4\x49\x03\xaf\x10\x0d\x44\x2b\x3f\xdc\xac\x82\x45\xf0\xc9\x94\xd3\xbf\xef\x57\xf1\x51\xd7\x0d\x59\xf3\x97\x6e\x78\x37\xb7\x22\xb3\xbb\x9e\x98\x87\xeb\xba\xae\x43\x46\x52\xec\x2f\xcf\x85\x77\xe3\xfe\x6a\x22\x57\x62\x7f\x16\x64\xa6\x6b\x06\x29\xf6\xee\x3a\x89\xb9\x19\x9c\x4c\xbc\xcd\xe1\xa8\xa0\x43\x46\x6c\xdb\x4e\xe4\x77\x33\x70\x96\xe3\xc3\x87\xe1\xab\xcc\x9e\x5d\x5f\xca\x40\xac\xc4\xbe\x32\x93\xfa\xce\x1b\x20\x23\x23\xf1\xe5\x63\xce\x72\xa2\x89\x31\x53\x19\xf3\x8c\x62\xcc\xd2\x67\x53\x96\xbb\xe0\x29\x7d\xa6\x83\x29\xb3\x2d\xdc\x45\xb5\xe1\xec\xb1\x36\x1a\x77\x3b\x5c\x28\xb3\x3b\x18\x97\xd6\x47\x97\xbb\x39\x18\x88\xa1\x28\xa8\xda\x89\xb4\xe3\xd5\x1a\x5b\xc6\x53\xc4\x27\x9e\xf3\x75\x6e\xf7\x39\xe6\x7f\xd0\x05\x81\xff\x6d\xf0\x3f\x61\x83\x6d\xbb\xbf\xca\x07\xc7\x83\x11\x8e\xbf\x91\x13\x0e\xc3\x50\xc6\x32\x2e\x72\x56\xa9\x61\x1e\xfe\x8e\x0d\x8e\xff\x0d\x3e\x38\xfe\x96\x46\xd8\x34\xa0\x3c\xed\x1c\xae\x5b\x1c\xb7\xc8\x5f\x01\x00\x00\xff\xff\x1e\x8b\x63\xce\x34\x0b\x00\x00")

func templatesUpsertGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUpsertGoTpl,
		"templates/upsert.go.tpl",
	)
}

func templatesUpsertGoTpl() (*asset, error) {
	bytes, err := templatesUpsertGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/upsert.go.tpl", size: 2868, mode: os.FileMode(420), modTime: time.Unix(1494141032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/delete-many.go.tpl": templatesDeleteManyGoTpl,
	"templates/delete.go.tpl": templatesDeleteGoTpl,
	"templates/delete.mm.go.tpl": templatesDeleteMmGoTpl,
	"templates/enum.go.tpl": templatesEnumGoTpl,
	"templates/find-many.go.tpl": templatesFindManyGoTpl,
	"templates/find-one.go.tpl": templatesFindOneGoTpl,
	"templates/find.go.tpl": templatesFindGoTpl,
	"templates/find.mm.go.tpl": templatesFindMmGoTpl,
	"templates/insert.go.tpl": templatesInsertGoTpl,
	"templates/insert.mm.go.tpl": templatesInsertMmGoTpl,
	"templates/model.go.tpl": templatesModelGoTpl,
	"templates/table.go.tpl": templatesTableGoTpl,
	"templates/table.mm.go.tpl": templatesTableMmGoTpl,
	"templates/update-many.go.tpl": templatesUpdateManyGoTpl,
	"templates/update.go.tpl": templatesUpdateGoTpl,
	"templates/update.mm.go.tpl": templatesUpdateMmGoTpl,
	"templates/upsert.go.tpl": templatesUpsertGoTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"delete-many.go.tpl": &bintree{templatesDeleteManyGoTpl, map[string]*bintree{}},
		"delete.go.tpl": &bintree{templatesDeleteGoTpl, map[string]*bintree{}},
		"delete.mm.go.tpl": &bintree{templatesDeleteMmGoTpl, map[string]*bintree{}},
		"enum.go.tpl": &bintree{templatesEnumGoTpl, map[string]*bintree{}},
		"find-many.go.tpl": &bintree{templatesFindManyGoTpl, map[string]*bintree{}},
		"find-one.go.tpl": &bintree{templatesFindOneGoTpl, map[string]*bintree{}},
		"find.go.tpl": &bintree{templatesFindGoTpl, map[string]*bintree{}},
		"find.mm.go.tpl": &bintree{templatesFindMmGoTpl, map[string]*bintree{}},
		"insert.go.tpl": &bintree{templatesInsertGoTpl, map[string]*bintree{}},
		"insert.mm.go.tpl": &bintree{templatesInsertMmGoTpl, map[string]*bintree{}},
		"model.go.tpl": &bintree{templatesModelGoTpl, map[string]*bintree{}},
		"table.go.tpl": &bintree{templatesTableGoTpl, map[string]*bintree{}},
		"table.mm.go.tpl": &bintree{templatesTableMmGoTpl, map[string]*bintree{}},
		"update-many.go.tpl": &bintree{templatesUpdateManyGoTpl, map[string]*bintree{}},
		"update.go.tpl": &bintree{templatesUpdateGoTpl, map[string]*bintree{}},
		"update.mm.go.tpl": &bintree{templatesUpdateMmGoTpl, map[string]*bintree{}},
		"upsert.go.tpl": &bintree{templatesUpsertGoTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

