// Code generated by go-bindata.
// sources:
// templates/delete.go.tpl
// templates/delete.mm.go.tpl
// templates/enum.go.tpl
// templates/find-many.go.tpl
// templates/find.go.tpl
// templates/find.mm.go.tpl
// templates/insert.go.tpl
// templates/insert.mm.go.tpl
// templates/model.go.tpl
// templates/table.go.tpl
// templates/table.mm.go.tpl
// templates/update.go.tpl
// templates/update.mm.go.tpl
// templates/upsert.go.tpl
// DO NOT EDIT!

package bin

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDeleteGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x92\x5f\x6f\xda\x30\x14\xc5\x9f\xe3\x4f\x71\x87\x78\x80\xa9\x4a\xb4\xd7\x49\x3c\x8c\x26\xeb\x90\x5a\x40\x8c\x69\xda\xd3\x6a\x92\x0b\x89\x6a\x3b\xe1\xda\x69\x89\x22\x7f\xf7\xc9\xf9\x53\xd6\x51\xba\xf2\x02\xf6\xcd\xf1\xb9\xd7\xc7\xbf\xba\x86\xa1\x4e\x73\x32\xd7\x82\x6b\x0d\x9f\x27\xd0\xec\x14\x97\x08\xfe\x9a\x6f\x04\xb6\xbf\x73\x57\xb0\x96\x39\x7d\xdc\x4b\x9b\xc5\x9b\xd2\xc6\xec\x2e\x4f\x50\xfc\xc7\xfa\xef\x21\xba\xb3\xb2\x3f\xd6\x2c\xde\x6c\x43\x68\x4a\x52\xcf\xda\x6e\xfb\x9a\xba\xe0\xf1\x03\xdf\x21\xd4\x35\xf8\xcb\x6e\x6d\x2d\x63\x99\x2c\x72\x32\x30\x62\xde\x60\x97\x99\xb4\xdc\xf8\x71\x2e\x03\xc9\x8d\x49\xf1\x49\x96\x28\x04\x52\x50\xec\x0e\x03\x36\x66\x2c\x08\xe0\x26\x9a\x47\xab\x2f\xeb\x28\x84\xe9\x2f\x58\x2e\x6e\x16\x3e\x84\x0b\x98\x2f\xd6\x10\x85\xb3\xb5\xdf\x68\x42\x14\x68\x10\x4c\xda\xb4\xeb\xee\x63\x2d\x6c\x29\x97\x4d\x35\xe1\x86\x6f\xb8\x46\x9f\x6d\x4b\x15\xc3\xe8\x9f\xc7\xb0\x16\x3e\x1e\xf3\xb6\x76\xdc\x39\x3a\x5d\x41\x99\xe4\x54\xb5\xa9\x5c\xe7\xa2\x94\xaa\x39\x70\xfc\x64\xaa\xe2\xc5\xa7\x31\x8c\x90\x08\x90\x28\xa7\x31\xd4\xcc\x0b\x02\xd0\x7b\x01\xfb\x12\xa9\x62\x9e\xde\x0b\x6d\xc8\x45\x78\x1f\x46\xb7\xd1\x3a\x82\xaf\xab\xc5\x9d\xf3\xd3\x71\x8a\x92\x83\xff\xbd\xfb\x3f\x4d\x15\x7e\x7e\x8b\x56\x11\x0c\xce\xcf\x35\x80\x09\x0c\x3f\xdd\xb3\xa6\x2b\x95\xaa\xef\x1a\x4e\x6f\xf3\xdd\xa8\xed\x7d\x05\xe7\xcf\x8f\x99\xf7\xfb\xca\xcd\x0e\x13\x38\x49\xc9\x0f\xa7\x7e\x74\xc0\xf8\x7d\x3e\xd9\xb6\xf1\xf9\x30\x01\x95\x09\x97\x83\xd7\xe1\x82\x44\xcc\xb3\x8c\xf5\x7b\x95\x09\x66\x99\xe3\x8b\xb8\xda\x21\x0c\xb3\xe4\xe0\xf2\xf1\x67\x2a\xc1\x03\xf6\x9c\x66\x5b\xf0\x67\xfa\x87\xca\xf6\xa5\xcb\xa2\xad\xa8\xdc\xb8\xea\xb2\x9d\xc2\x29\x9f\x79\x98\x56\x4e\xe2\x2c\x24\x9a\x34\x4f\x5a\x5f\x87\x45\xa6\x12\xe0\x2f\x50\xb9\x8c\x8b\x73\xce\xa3\xbe\x5c\x70\xe2\x52\xf7\xe5\x73\x40\x68\x14\x18\x9b\xf6\x85\xae\xfa\x20\xe1\x01\x2b\x28\x28\x7f\xcc\x12\x4c\x60\x53\x81\xc6\x7d\x89\x2a\xc6\x77\x90\x33\xec\xd1\x19\x9e\x67\xa7\x1f\xf1\x29\x45\xc2\x7e\x42\xc7\xcb\x09\x21\x8d\xec\x91\xd3\xf1\x1e\x97\xb2\xf1\x9a\xc3\x85\x54\xd4\x35\xa0\x4a\xda\xe7\x6e\x17\xc7\x12\xfb\x13\x00\x00\xff\xff\x9d\x3b\x94\x29\x54\x05\x00\x00")

func templatesDeleteGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDeleteGoTpl,
		"templates/delete.go.tpl",
	)
}

func templatesDeleteGoTpl() (*asset, error) {
	bytes, err := templatesDeleteGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/delete.go.tpl", size: 1364, mode: os.FileMode(420), modTime: time.Unix(1492163337, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDeleteMmGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xcd\x6e\xdb\x30\x10\x84\xcf\xe2\x53\x4c\x81\x1e\xec\x22\xa0\xef\x05\x7c\xa8\x23\x26\x2d\x1a\x5b\x81\x2b\xa0\xe8\xa9\x61\x94\xb5\x2d\x84\x22\x93\x25\x85\x36\x10\xf8\xee\x05\x29\xb9\x3f\x69\x03\xf7\x22\xed\x2e\xbe\x9d\x1d\x0d\x34\x0c\x78\xed\x0f\x8e\xc3\xb9\xd1\xde\xe3\xed\x12\xb9\xb3\xba\x23\xc8\x5a\xdf\x1a\x1a\x9f\x9b\x34\x88\x51\x24\xbe\x39\xa2\xb9\x48\xe8\x7a\xfd\x22\x9c\xe5\xd6\xee\x8e\xcc\x09\xf1\xdf\x6d\x4c\xbb\xdd\x71\x2d\x17\x27\x0e\x31\x85\x9e\xed\x4f\x7a\x6c\x5f\xe0\x1f\x74\x73\xaf\xf7\x84\x61\x80\xbc\x9e\xea\x18\x85\x58\x2c\x70\xa9\x36\x6a\xfb\xae\x56\x25\x56\x5f\x70\x5d\x5d\x56\x12\x65\x85\x4d\x55\x43\x95\x1f\x6a\x99\x99\x92\x0c\x05\x42\x38\x64\x85\xc9\x66\x8c\xd8\xb1\xeb\xf2\xf4\x4e\x07\x7d\xab\x3d\x49\xb1\xeb\x6d\x83\xd9\xb3\x94\x63\xc4\x9b\x5f\x41\xc6\x38\x9f\x14\x13\xb7\xbb\x7f\xd0\xac\x3b\x0f\x79\xe1\x98\xda\xbd\xfd\x48\x4f\x1e\xf2\xdc\x99\xbe\xb3\x23\x3c\x23\x66\x10\xb3\xe3\x39\x06\x51\x2c\x16\xf0\x8f\x06\x8f\x3d\xf1\x93\x28\x1a\x67\x7d\x48\x03\x1f\x18\x4b\xdc\x08\x00\x28\xd5\x95\xaa\x15\x2e\xb6\xd5\x3a\x39\xf6\xcd\x81\x3a\x0d\xf9\x69\x7a\xff\x23\xa1\xb4\xf5\xf9\xbd\xda\x2a\x64\x4f\xdf\x0e\xc4\xf4\xa7\xa5\x0c\xdd\x88\x7c\x9f\x7b\x7b\xbc\x5f\xae\xae\xdc\x7e\x36\xde\x3f\x1b\x97\x4d\xeb\xc3\xf3\xdd\xb9\x28\xbe\x9e\xa5\x8f\xc0\x12\x7f\xa5\x23\xcb\x95\x54\xdf\xa9\xf9\x2f\x99\x76\x97\x65\x5e\x2d\x61\x5b\x93\xf2\x28\xa6\x3f\x81\x98\x45\x11\x85\x38\xf6\xb6\x35\x22\x8a\x1f\x01\x00\x00\xff\xff\x32\x52\x9b\x10\xf1\x02\x00\x00")

func templatesDeleteMmGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDeleteMmGoTpl,
		"templates/delete.mm.go.tpl",
	)
}

func templatesDeleteMmGoTpl() (*asset, error) {
	bytes, err := templatesDeleteMmGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/delete.mm.go.tpl", size: 753, mode: os.FileMode(420), modTime: time.Unix(1491978600, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesEnumGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x95\x51\x6b\xdb\x3e\x14\xc5\x9f\xad\x4f\x71\xff\xe6\x0f\xb1\x4a\xa7\xd0\x97\x3d\x14\xf2\xb0\xd2\x50\x06\x6d\x12\xda\xac\x6c\x8c\x3d\x28\xf6\xb5\x23\x6a\xcb\x99\x24\xa7\x29\x46\xdf\x7d\xc8\xb2\x5b\x3b\xc9\x4a\xd6\x37\x45\xbe\x3a\xfe\xdd\x73\x8f\x95\xba\x86\xff\x8b\x32\xc1\x1c\x2e\x27\xd0\x2c\x24\x2f\x10\xd8\x54\x56\x05\x9b\xb9\xa5\xb5\xc4\x15\xe9\x75\xa9\xcc\x5d\x57\xd9\xfc\x3a\x52\xb9\xe1\xf1\x13\xcf\x10\xea\x1a\xd8\xa2\x5d\x5b\x4b\xc8\x78\x0c\x37\xd3\xd9\xf4\xfe\xcb\x72\x7a\x0d\x57\x3f\x60\x31\xbf\x99\x33\xb8\x9e\xc3\x6c\xbe\x84\xe9\xf5\xd7\x25\x23\x44\x14\x9b\x52\x19\x88\x48\x10\x26\xdc\xf0\x15\xd7\x38\xd6\xbf\xf3\x71\xa2\xc4\x16\x55\x48\x82\x10\x95\x2a\x95\x0e\x09\x09\xc2\x4c\x98\x75\xb5\x62\x71\x59\x8c\x0b\x6e\xcc\x1a\x9f\x8b\x0a\xf3\x1c\xd5\x78\x93\xed\x42\x42\x9b\x57\xbe\x35\x67\x2d\x08\x0d\x66\x8d\x30\x72\x68\x7d\xe6\x11\xa0\xac\x0a\x30\x2f\x1b\x84\x54\x95\x05\xe8\x78\x8d\x05\xf7\x85\x0f\x7e\x6d\xed\x88\x91\xa6\x62\x20\x59\x09\x69\x2e\x3e\x13\x12\x97\x52\x3b\x70\x70\x8f\x15\x97\x59\x67\xcb\x23\xcf\x2b\xd4\xce\x81\x60\x0f\xa7\xae\x21\xce\xb9\xd6\xde\xc3\x5b\xbe\x3a\x84\xec\x36\x47\x83\x83\x8c\x04\x27\xe8\x4c\x06\x67\x22\x27\x37\x57\x09\x2a\xb0\x96\x7a\x4c\x94\x89\xe3\xf2\x46\x3d\x18\x25\x64\x06\x0a\x4d\xa5\xa4\x47\xd0\x7e\x6b\xeb\x3a\x80\x32\x6d\xf6\x86\x1c\x69\x25\x63\x88\xf6\xb2\x61\xed\xa0\x8a\xb6\xd2\x11\xed\x04\x6b\x12\x6c\xb9\x6a\x3c\x7f\xe4\x79\xbb\x4b\x48\xa0\x9f\x85\x89\xd7\x70\x44\xee\x3d\x5b\x01\x62\xae\xf1\x04\x67\x2f\x09\x00\xbc\xbe\x75\x02\x61\xdf\xe1\x70\x60\x49\x60\x09\x09\xbc\x15\xdd\x01\xe2\x23\x7c\xc7\x95\x5e\xf3\x7c\x89\x3b\x03\x85\x5f\xeb\xbd\x90\x49\x53\x82\xc1\x9d\x39\xd5\x9e\x9e\x64\x44\x21\xfa\xf9\x6b\xf5\x62\xf0\x1c\x9a\xa4\x53\x67\x56\x0b\xe2\x1f\x1c\xca\xb1\xce\x5f\x7a\x0e\x52\x74\xa0\xdf\x64\xd1\x43\xad\xe4\x71\xd8\x26\xed\xef\xc3\x9e\x0d\x69\x07\xba\x91\x3b\xda\x82\x51\x4f\xec\x80\xdb\x41\xfa\xc1\x36\x35\xf4\xa4\x19\x0e\x27\xe2\xe7\x75\x76\x48\x34\x39\x61\xd8\xc3\x71\x26\x98\xf2\x2a\x37\x97\x24\x78\x9d\x6a\x73\x8f\xb0\x19\x3e\x47\xa1\x90\x5b\x9e\x8b\x64\xa0\x1a\xd2\x41\x08\xde\x7c\x6d\xa0\x41\x73\x23\x74\x2a\xb0\xfd\x50\x5e\xaf\x28\xdf\x93\x72\x21\x40\x95\xf2\x18\x21\x75\x96\x7c\xe0\xa3\x69\x84\x5c\x1e\xfa\xc2\x47\x52\xf1\xf7\x38\xf4\xd3\xf0\x10\x73\xb9\x07\xdd\xbf\x60\x99\x7b\x2e\x3f\xc8\xbd\x17\x10\x27\x15\x69\x15\xbf\x69\xd5\xb6\x97\x8d\x55\x95\x9e\x43\xf9\xd4\xfc\x83\xa8\x98\xb5\x71\xa7\x24\x10\x29\xfc\x57\x3e\xb9\x92\x0f\xce\xe8\xd0\x89\x61\x56\x57\x55\x4a\x7b\x76\x2c\xb2\x9d\xff\x56\x17\x37\xdf\xff\xa5\xb7\x45\xb6\x8b\xb6\x0a\xce\x36\xd9\xce\x0f\xe5\x1e\x79\x82\xaa\xd7\xa2\x48\x61\xab\xd8\x2d\xca\x88\xc2\x64\x02\x9f\x2e\xfa\x4d\xb9\x99\x04\xf6\x64\xe8\xad\x62\x4e\xff\xea\xc5\xa0\x8e\x3a\x55\xea\xfa\xf8\x13\x00\x00\xff\xff\x35\xaf\x0a\x6d\xb7\x07\x00\x00")

func templatesEnumGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesEnumGoTpl,
		"templates/enum.go.tpl",
	)
}

func templatesEnumGoTpl() (*asset, error) {
	bytes, err := templatesEnumGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/enum.go.tpl", size: 1975, mode: os.FileMode(420), modTime: time.Unix(1492157467, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFindManyGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x53\xc1\x6e\xdb\x3a\x10\x3c\x87\x5f\xb1\x2f\x78\x07\xe9\x3d\x83\xbe\x07\xd0\xa1\xb1\x95\xb4\x40\x62\xa7\x8e\x81\xa2\x28\x0a\x84\x91\x56\x32\x11\x8a\x94\x97\x54\x13\x57\xe0\xbf\x17\xa2\xe4\x44\x76\xdd\xf4\x60\x8b\x22\x67\x76\x67\x66\xa9\xb6\x85\x7f\xed\xc6\x90\x9b\x29\x61\x2d\x5c\x24\x10\xde\xb4\xa8\x10\xf8\x5a\x3c\x2a\xec\xff\x17\xdd\x86\xf7\xac\xc3\x67\x7b\x68\x58\xbc\x0b\x0d\xc5\x6e\x4d\x8e\xea\x2f\xa5\xc7\x22\x06\x6e\xb5\xa7\x85\xc5\xfb\x6d\xa4\x2e\x1b\x25\xe8\x15\x4d\xe8\x1a\xd2\x7f\xc4\x0f\xc7\x17\x09\xd4\xaa\x21\xa1\xe4\x4f\x1c\x15\xf1\x9e\xd5\x22\x7b\x12\x25\x42\xdb\x02\xbf\x1b\xd6\xde\x33\x26\xab\xda\x90\x83\xf3\x52\xba\x4d\xf3\xc8\x33\x53\x4d\x2b\xe1\xdc\x06\x9f\xab\x06\x95\x42\x9a\xd6\xe5\xcb\x39\x63\xd3\x29\x5c\xa7\x8b\x74\xf5\x61\x9d\xce\xe1\xf2\x2b\xdc\x2d\xaf\x97\x1c\xe6\x4b\x58\x2c\xd7\x90\xce\x3f\xad\x79\xc0\x5c\x49\x9d\xdf\x0a\xbd\x83\x42\xea\x1c\xaa\x6e\xf5\xe6\xdc\x7b\x0b\x8f\x3b\x10\x90\x19\x9d\x4b\x27\x8d\x66\x45\xa3\x33\x88\x8e\x66\xe6\x3d\xfc\xf7\x36\x16\xef\xe3\xd7\xb2\xd1\x2b\x13\xac\x23\xa9\xcb\x09\xd4\x82\x44\x65\x39\xe7\x20\xb5\x43\x2a\x44\x86\xad\x8f\xfb\x9a\x43\x2a\xde\xc3\xb7\xef\x63\x19\x13\x40\xa2\xee\x67\x28\x86\x96\x9d\x4d\xa7\x60\xb7\x0a\x2c\x2a\xcc\x1c\x6c\x1b\xa4\xdd\x04\x6a\x92\x95\xa0\x1d\x3c\xe1\x0e\x6a\x32\x3f\x64\x8e\x79\x27\xdf\xe2\xb6\x41\x9d\x21\x3b\xb3\x5b\x65\x5d\x18\xd1\x03\x03\x00\xb8\x4f\x6f\xd2\xd9\xba\x33\x5c\x48\x54\xb9\x05\x3e\x33\xaa\xa9\x74\xb8\x00\x1d\xe0\x6a\xb5\xbc\xed\x8e\x6d\xb6\xc1\x4a\x00\xbf\x1f\x9e\x27\x86\xda\xc1\xbf\x7c\x4c\x57\x29\x3c\xc0\xff\xa3\xc0\xd8\xd9\xfc\xf2\xc6\x94\x51\xdf\x7b\x64\x3f\x66\x00\x64\x9e\x6d\xef\xed\x22\x81\xdf\x42\xe5\xf3\x4b\xfe\xb9\xf3\x76\x9a\x2c\x8b\xc0\xfc\x27\x01\x2d\x15\xb4\x41\xc1\xb0\x97\x24\x50\x97\x2f\x3c\x25\x5a\x98\x95\x79\xb6\xc3\x29\xc0\x10\xf0\x41\xd6\x13\x48\x89\xc6\x69\x2f\x8c\xbb\x32\x8d\xce\x03\xa7\x77\x76\x9a\x87\x44\xac\x47\xe4\x58\x20\x05\x3b\x7c\xa6\x8c\xc5\x28\x66\x0c\xa0\x30\xc3\xde\x02\x5f\x5c\x14\x0f\x2a\x0e\x3e\x17\xef\xf7\xd6\xf7\xdd\xdb\xbe\x63\xb0\xd1\xb3\xef\x33\xa1\xbb\xeb\x51\x9a\xe3\x31\x8d\xeb\xc4\xe3\x00\x0e\x42\x79\x5f\xfe\xde\xe2\xe1\xfd\x4b\x40\xd4\x35\xea\x3c\x3a\xe2\x1c\x89\x8f\x83\xff\x7e\x18\x41\x6b\x4a\x14\xc5\x87\xed\x4f\x37\x7f\x43\xef\x4b\x9c\xc6\x69\xa9\x98\x67\xbf\x02\x00\x00\xff\xff\x49\x59\xb1\xb9\x25\x05\x00\x00")

func templatesFindManyGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesFindManyGoTpl,
		"templates/find-many.go.tpl",
	)
}

func templatesFindManyGoTpl() (*asset, error) {
	bytes, err := templatesFindManyGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/find-many.go.tpl", size: 1317, mode: os.FileMode(420), modTime: time.Unix(1492161416, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFindGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x53\x4f\x6f\xda\x4e\x10\x3d\xef\x7e\x8a\xf9\x21\x1f\xe0\x27\x64\xd4\x6b\x25\x0e\x25\x38\x69\xa4\x04\x52\x42\x55\xf5\x96\x8d\x3d\x18\x2b\xf6\xae\x99\x5d\x07\x90\xb5\xdf\xbd\x5a\xff\x89\x49\x02\xb4\xb9\x54\xea\x01\xbc\x9e\x7d\xf3\x3c\xf3\x66\x5e\x59\x82\xa7\xd7\x8a\xcc\x45\x2a\xb4\x86\xcf\x63\xa8\xde\xa4\xc8\x10\xfc\xa5\x78\x4c\xb1\xfe\x9f\xb9\x80\xb5\xdc\xe1\xc3\x16\x5a\x1d\xce\x42\x2b\xb2\x5b\x15\x61\xfa\x1b\xea\xc3\x22\x9a\xdc\xac\x4d\xab\x0e\x67\x3f\x43\x68\x0a\x92\x2f\xd8\xe6\xf5\x18\x3a\x17\xe1\x93\x88\x11\xca\x12\xfc\xbb\xe6\x6c\x2d\xe7\x49\x96\x2b\x32\xd0\xe7\xac\x17\x27\x66\x5d\x3c\xfa\xa1\xca\x46\x99\x30\x66\x8d\xdb\xac\xc0\x34\x45\x1a\xe5\xf1\xae\xc7\x07\x9c\x8f\x46\x70\x15\xcc\x82\xc5\x97\x65\x30\x85\xc9\x4f\xb8\x9b\x5f\xcd\x7d\x98\xce\x61\x36\x5f\x42\x30\xbd\x5e\xfa\x15\xe6\x32\x91\x11\x08\xe8\x7a\xb1\x16\x1e\xf7\xd0\x2b\x4b\xc8\x29\xc9\x04\xed\xeb\xa6\x2e\x54\x5a\x64\xd2\xf5\xdd\xe3\xab\x42\x86\xd0\x7f\x33\x15\x6b\xe1\xff\x4e\x78\x6b\x07\x15\x75\xff\x34\x0f\x74\x57\x66\x9f\xbf\xba\x1a\xd4\xec\x8d\x44\x35\xf4\xa5\xbc\x21\x20\x91\xfb\x29\x1a\x40\xc9\xd9\x68\x04\x7a\x93\x82\xc6\x14\x43\x03\x9b\x02\x69\x3f\x6c\x89\xe1\x09\xf7\x90\x93\x7a\x4e\x22\x8c\x5c\x5f\x1a\x37\x05\xca\x10\x39\xd3\x9b\x54\x1b\x72\xe3\x78\xe0\x00\x00\xf7\xc1\x4d\x70\xb1\x74\x5f\x5a\x25\x98\x46\xfa\xb0\x9e\x0a\x70\xb9\x98\xdf\xba\x6b\x1d\xae\x31\x13\xe0\xdf\x37\xcf\x23\x03\x74\xf0\x1f\x5f\x83\x45\x70\x56\x47\x18\x83\xf7\xe9\x81\x73\x36\x9d\xdc\xa8\xb8\x5f\x17\x34\x84\xd3\x19\x03\xce\x48\x6d\x5d\xc9\xef\xb4\xf7\xa7\x13\xff\x9b\x6b\x7d\xa1\xb6\x7f\xc6\xe4\x44\x1c\x03\xa9\xad\x7f\x1f\x0a\xe9\xf4\x8e\xd5\xdb\xce\xbb\x09\x0c\x38\x4b\x56\x95\xf0\xff\x8d\x41\x26\xa9\x13\xbe\x8d\x8c\xc7\x90\xc7\x3b\x3f\x20\x9a\xa9\x85\xda\xea\xea\x8e\x35\xa9\xaf\xe6\x38\x04\x08\x88\x0e\x87\x39\x53\xe6\x52\x15\x32\xe2\x8c\x59\x7e\x2a\x09\x89\x38\xb3\x9c\x9f\xb8\x96\x49\xca\x2d\x77\x1e\x23\x21\x63\x04\x2f\x89\x76\x4e\x24\xff\x5a\x46\xb8\xc3\xd6\xab\xc9\x0a\xfc\x6b\xfd\x5d\x26\x9b\xc2\x0d\xa9\x8e\x48\x65\x5c\xf4\xae\x59\x17\x6b\x5b\x4f\x4c\xf6\x0e\xe0\x08\x32\x34\x6b\x15\xd5\xac\xd6\xc2\xea\xbd\x61\x3e\x62\x88\x53\xbc\xfd\x36\x9c\x0b\x12\x99\x6e\xc3\x7f\xdb\x09\x8c\xbd\xf3\x81\x77\x68\x04\xc6\xde\xd8\xc0\x6b\x7d\xe0\x1d\x33\x02\x63\xb5\x0d\xda\xe6\xb6\x6b\x24\x6c\x7b\x3b\xba\xfa\x15\xec\x59\x50\xa7\xc0\xc7\x97\xfe\x18\xc7\x99\x75\xf7\xfe\xc9\x7d\x2f\x4b\x40\x19\xd5\x8b\x5c\x1f\xba\x10\xff\x15\x00\x00\xff\xff\xd8\x23\x4f\xf6\x32\x07\x00\x00")

func templatesFindGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesFindGoTpl,
		"templates/find.go.tpl",
	)
}

func templatesFindGoTpl() (*asset, error) {
	bytes, err := templatesFindGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/find.go.tpl", size: 1842, mode: os.FileMode(420), modTime: time.Unix(1492159774, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesFindMmGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x91\x41\x8f\xda\x3c\x10\x86\xcf\xf1\xaf\x78\x3f\xe9\x3b\x40\x85\xcc\xbd\x12\x87\x02\x61\x5b\x75\x81\x2d\x44\xaa\x7a\x5b\x6f\x32\x80\x85\x63\x83\x9d\x14\x45\x91\xff\x7b\x65\x87\x2d\x0b\x2d\xda\x1e\x92\xd8\x99\x67\xc6\x33\x8f\xdb\x16\xff\xbb\x9d\xb1\xd5\x44\x09\xe7\xf0\x71\x84\xb8\xd3\xa2\x24\xf0\x4c\xbc\x28\xea\xde\x8b\xf0\xc3\x7b\x16\xf8\xfc\x15\x8d\x8b\x80\xce\xe7\x77\xe1\x58\x6e\x6e\x0a\x52\xef\x14\x7f\xdb\xc6\x39\xb7\x7c\x4d\x8b\x8b\x77\x0e\xb2\x54\xd5\x56\xff\xa6\xbb\xed\x1d\xfe\x20\xf2\xbd\xd8\x12\xda\x16\xfc\xe9\xbc\xf6\x9e\xb1\xe1\x10\x0f\xe9\x22\x5d\x7d\xca\xd2\x29\xc6\x3f\xf0\xb4\x7c\x58\x72\x4c\x97\x58\x2c\x33\xa4\xd3\x2f\x19\x8f\xcc\x4c\xea\x02\x02\x15\x89\x12\x2f\x0d\x64\xc1\x36\xb5\xce\xd1\xbb\x91\xe9\x3d\x3e\x5c\x7c\x79\xdf\x8f\x89\x81\xda\xec\x0f\xc2\x8a\xd2\x81\xcf\x8c\x25\xb9\xd5\x5f\xa9\x71\xe0\x13\xa3\xea\x52\x77\x68\xef\xcd\x4c\xde\xe3\xa2\xc3\xfb\x01\xc8\xda\xf0\x18\xdb\x47\xcb\x92\xe1\x10\xee\xa8\xe0\x48\x51\x5e\xe1\x58\x93\x6d\x06\x38\x58\x59\x0a\xdb\x60\x4f\x0d\x0e\xd6\xfc\x94\x05\x15\xa1\x59\x47\xc7\x9a\x74\x4e\x2c\x71\x47\xe5\x2a\x1b\x84\x3d\x33\x00\x58\xa7\x8f\xe9\x24\x0b\x27\x6d\x24\xa9\xe2\xaa\x9f\x08\xcc\x56\xcb\x79\x08\xbb\x7c\x47\xa5\x00\x5f\x9f\xbf\x7f\x11\x1c\xf0\xef\x9f\xd3\x55\x1a\xcb\xed\x4f\x3b\xb2\x74\x3d\xac\xf7\xcf\x8c\x25\xd3\xf1\xa3\xd9\xf6\xba\x4e\x06\x1d\xab\xa4\xab\x6e\xd1\x3e\x4b\xac\x39\x85\x56\xff\x50\xcc\xa7\x63\xfe\x2d\x8c\xbc\x32\xa7\x7f\x2a\x14\xdc\x8d\x60\xcd\x89\xaf\x73\xa1\x83\xe6\xad\xb9\x1d\xf8\x22\xbe\xcf\x12\xb9\x89\xbe\xff\x1b\x41\x4b\x15\x7c\x27\xe7\xe8\xd5\x0d\xc5\x4b\x61\x89\x67\xec\x4e\x58\x4b\xc5\x3c\xfb\x15\x00\x00\xff\xff\xbb\xbb\x5c\x5d\x70\x03\x00\x00")

func templatesFindMmGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesFindMmGoTpl,
		"templates/find.mm.go.tpl",
	)
}

func templatesFindMmGoTpl() (*asset, error) {
	bytes, err := templatesFindMmGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/find.mm.go.tpl", size: 880, mode: os.FileMode(420), modTime: time.Unix(1491380433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesInsertGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x52\x5d\x6f\xda\x30\x14\x7d\x8e\x7f\xc5\x59\xb5\x07\xb2\x66\x66\xcf\x93\xfa\xd0\x96\x0c\x31\x75\xa1\x83\x74\xd2\xde\x30\x89\x09\x56\x1d\x1b\xec\x00\x42\x91\xff\xfb\x64\x13\xd6\xf1\xa1\xee\x01\x62\xdf\x7b\xee\xb9\xe7\x9e\xeb\xb6\xc5\x47\xbb\xd4\xa6\x79\x94\xcc\x5a\x7c\xbd\x43\xb8\x29\x56\x73\xd0\x9c\xcd\x25\x3f\xfc\x67\x3e\xe0\x1c\xf1\xf8\xe2\x08\x0d\x87\x77\xa1\x81\xec\x87\x2e\xb9\xfc\x0f\xf5\xbf\x22\xba\xda\xfa\x58\x16\x0e\xef\xb6\x31\xbc\xd9\x18\xf5\x17\xdb\x5d\xaf\xa1\x57\xac\x78\x65\x15\x47\xdb\x82\x3e\x77\x67\xe7\x08\xe9\xf7\x31\x4c\xb3\x74\x72\x9f\xa7\x03\x3c\xfc\xc6\xf3\x78\x38\xa6\x18\x8c\x91\x8d\x73\xa4\x83\x51\x4e\x03\x66\xa4\x2c\x37\x0d\x9a\x65\x60\xe8\x24\x3a\x87\x46\x87\x58\xc9\x1a\x36\x67\x96\x53\xb2\xd8\xa8\x02\xbd\x33\x77\x9d\xc3\xa7\x37\x03\x9d\x8b\x3b\xbe\xde\x99\x55\x47\xdc\x91\x3e\x3e\x30\x75\x63\x39\x77\xd2\x3b\x01\x37\xc6\xff\xb4\x89\xd1\x92\xa8\xdf\x47\xc5\x1b\x30\x29\x83\x24\xa5\xd5\x67\x25\x24\x16\x82\xcb\xd2\x82\xa9\x12\x2b\xc3\x57\xcc\x70\x9f\xae\xb1\xd0\x26\xe0\xd6\x1b\x6e\xf6\x24\x2a\x12\x88\x04\x5b\x6f\x65\x88\x4c\xa5\x28\xb8\xbd\x1c\x84\x56\xbc\xf9\x16\x28\x2f\xc5\xc7\x09\xbe\xc4\x24\x28\xb1\x6b\x09\x71\xf0\x2c\xd0\x25\x58\x19\x51\x33\xb3\xc7\x2b\xdf\x63\x65\xf4\x56\x94\xbc\xc4\x7c\x0f\xcb\xd7\x1b\xae\x0a\x4e\x22\xbb\x96\xb6\x31\x5e\xc1\x8c\x44\xa3\x6c\x9a\x4e\x72\x8c\xb2\x7c\xec\xa7\xb6\xc5\x92\xd7\x0c\x74\xda\x7d\x2f\x37\x8c\xde\x0c\xb7\xb0\x8d\x11\xaa\xb2\xf4\xbb\x16\xaa\x57\x24\xb8\x49\x70\x13\xe3\x16\xb3\x98\x44\xbf\xee\x9f\x5e\xd2\xe9\x15\x9c\x38\xc5\x4d\xd2\xfc\x65\x92\x8d\xb2\xa1\x6f\xdc\xd9\x47\x1f\xb5\xdc\xd4\xca\x3b\x30\x23\x24\x1a\x3c\x3c\xe9\xaa\x77\x10\x9c\x60\x4b\x29\x8d\x49\x64\xf4\xce\x8b\xbf\xb4\x6c\xf0\x40\x7f\x7a\x13\x26\x7a\x77\x5e\xe3\x57\x78\x07\xa3\x77\x74\x5a\x30\xe5\x2d\xad\xf4\x79\xcb\xb7\xfd\xc7\x24\x12\x8b\xb0\xf6\x0f\x77\xf0\xcb\x6d\x49\x04\x74\xe9\x93\x97\x12\x1e\x07\x89\x1c\x21\xd1\xf5\xb4\x12\x92\x38\xf2\x27\x00\x00\xff\xff\x3a\xf5\x76\x31\x06\x04\x00\x00")

func templatesInsertGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesInsertGoTpl,
		"templates/insert.go.tpl",
	)
}

func templatesInsertGoTpl() (*asset, error) {
	bytes, err := templatesInsertGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/insert.go.tpl", size: 1030, mode: os.FileMode(420), modTime: time.Unix(1492160063, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesInsertMmGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x52\xd1\x6e\xda\x30\x14\x7d\x8e\xbf\xe2\xac\xda\x03\x59\x33\xb3\xe7\x49\x7d\x68\x4b\x56\x31\x95\xd0\x41\x3a\x69\x6f\x98\xc4\x04\xab\x8e\x0d\x76\x00\xa1\xc8\xff\x3e\xd9\x84\x75\x40\xab\x3e\x40\xec\x7b\xcf\x3d\xf7\xdc\x73\xdd\xb6\xf8\x6c\x97\xda\x34\xf7\x92\x59\x8b\xef\x37\x08\x37\xc5\x6a\x0e\x9a\xb3\xb9\xe4\x87\xff\xcc\x07\x9c\x23\x1e\x5f\x1c\xa1\xe1\xe0\xa1\xa3\xd1\xbb\xe0\x40\x37\xd2\x25\x97\x1f\x90\xff\x2f\xa3\xab\xad\x8f\x65\xe1\xf0\x41\x23\xc3\x9b\x8d\x51\xff\xd0\x87\xeb\x3b\xf8\x15\x2b\x5e\x58\xc5\xd1\xb6\xa0\x4f\xdd\xd9\x39\x42\xfa\x7d\x3c\xa4\x59\x3a\xb9\xcd\xd3\x01\xee\xfe\xe0\x69\xfc\x30\xa6\x18\x8c\x91\x8d\x73\xa4\x83\x61\x4e\x03\x66\xa8\x2c\x37\x0d\x9a\x65\x60\xe8\x64\x3a\x87\x46\x87\x58\xc9\x1a\x36\x67\x96\x53\xb2\xd8\xa8\x02\xbd\x33\x8f\x9d\xc3\x97\x57\x1b\x9d\x8b\x3b\xbe\xde\x99\x5d\x47\xdc\x91\x3e\x3e\x30\x75\x73\x3a\x77\xd2\x3b\x01\x37\xc6\xff\xb4\x89\xd1\x92\xa8\xdf\x47\xc5\x1b\x30\x29\x83\x24\xa5\xd5\x57\x25\x24\x16\x82\xcb\xd2\x82\xa9\x12\x2b\xc3\x57\xcc\x70\x9f\xae\xb1\xd0\x26\xe0\xd6\x1b\x6e\xf6\x24\x2a\x12\x88\x04\x5b\x6f\x66\x88\x4c\xa5\x28\xb8\xbd\x1c\x84\x56\xbc\xf9\x11\x28\x2f\xc5\xc7\x09\xbe\xc5\x24\x28\xb1\x6b\x09\x71\xf0\x2c\xd0\x25\x58\x19\x51\x33\xb3\xc7\x0b\xdf\x63\x65\xf4\x56\x94\xbc\xc4\x7c\x0f\xcb\xd7\x1b\xae\x0a\x4e\x22\xbb\x96\xb6\x31\x5e\xc1\x8c\x44\xc3\x6c\x9a\x4e\x72\x0c\xb3\x7c\xec\xa7\xb6\xc5\x92\xd7\x0c\x74\xda\x7d\x2f\x37\x8c\xde\x0c\xd7\xb0\x8d\x11\xaa\xb2\xf4\xa7\x16\xaa\x57\x24\xb8\x4a\x70\x15\xe3\x1a\xb3\x98\x44\xbf\x6f\x1f\x9f\xd3\xe9\x1b\x38\x71\x8a\x9b\xa4\xf9\xf3\x24\x1b\x66\x0f\xbe\x71\x67\x1f\xbd\xd7\x72\x53\x2b\xef\xc0\x8c\x90\x68\x70\xf7\xa8\xab\xde\x41\x70\x82\x2d\xa5\x34\x26\x91\xd1\x3b\x2f\xfe\xd2\xb2\xc1\x1d\xfd\xe5\x4d\x98\xe8\xdd\x79\x8d\x5f\xe1\x0d\x8c\xde\xd1\x69\xc1\x94\xb7\xb4\xd2\xe7\x2d\x5f\xf7\x1f\x93\x48\x2c\xc2\xda\x3f\xdd\xc0\x2f\xb7\x25\x11\xd0\xa5\x4f\x5e\x4a\x78\x1c\x24\x72\x84\x44\x6f\xa7\x95\x90\xc4\x91\xbf\x01\x00\x00\xff\xff\x5d\xc9\x0b\x94\x0c\x04\x00\x00")

func templatesInsertMmGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesInsertMmGoTpl,
		"templates/insert.mm.go.tpl",
	)
}

func templatesInsertMmGoTpl() (*asset, error) {
	bytes, err := templatesInsertMmGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/insert.mm.go.tpl", size: 1036, mode: os.FileMode(420), modTime: time.Unix(1492160071, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x93\xcf\x6e\xa3\x3a\x18\xc5\xd7\xf8\x29\x8e\xd0\x95\x9a\xdc\x20\xd0\xdd\x5e\x29\x8b\x76\x88\x3a\x95\x46\x49\xa6\xa5\x8b\x51\xa7\x0b\xc7\x7c\x80\x55\xb0\xa9\x6d\x48\xa2\x88\x77\x1f\x39\xd0\x7f\x33\xea\xec\x3e\xd9\xe7\x77\x8e\x39\xd8\x2d\x17\x4f\xbc\x24\x9c\x4e\x88\xb7\xd3\x3c\x0c\x8c\xc9\xa6\xd5\xc6\x61\xc6\x82\xd0\x3a\x23\xb4\xea\x43\xc6\x82\xb0\x94\xae\xea\x76\xb1\xd0\x4d\xd2\x70\xe7\x2a\xda\x37\x1d\xd5\x35\x99\xa4\x2d\x0f\x21\x9b\x33\x96\x24\xb8\x5e\xad\x57\xb7\x97\xd9\x2a\xc5\xd5\x0f\x6c\x37\xd7\x9b\x18\xe9\x06\xeb\x4d\x86\x55\x7a\x93\xc5\x67\x4d\x7a\x05\x69\xe1\x2a\x82\xd0\x4d\xa3\x15\xa4\x72\x64\x0a\x2e\x08\x85\x36\xc8\xb9\xe3\x3b\x6e\x09\xba\x25\xc3\x9d\xd4\xca\x8b\xb9\x83\xe0\x0a\x3b\x42\x67\x29\xc7\x5e\xba\xca\x7b\xb9\x63\x4b\x16\x85\xd1\x0d\xac\xa8\xa8\xe1\xb8\xf0\x9f\x73\x37\xce\xc3\x70\x11\xb3\x24\xf1\xc2\xac\x92\x16\xb6\xd2\x5d\x9d\x63\xaf\xcd\xd3\xd9\xe1\x35\x2b\xb1\xcf\x75\x9c\x5e\x81\xab\xfc\xe3\x5a\x76\x88\x99\xcf\x38\x1f\xfa\xf5\x98\x27\x16\xac\x0e\x24\x66\xd6\x19\xa9\xca\x08\x71\x1c\xbf\x6e\x9e\x86\x39\x66\x6d\x79\x88\xbf\xe8\xa6\xe1\x2a\xcf\x78\x19\x81\x8c\xd1\x66\xce\x82\xef\x1d\x99\xe3\xe7\xd8\xbf\x9e\xbb\xd5\x7b\xfb\x1b\x71\xab\xf7\x9f\x42\x2f\x0c\x1b\xa6\x72\xbf\xe9\x12\xad\xd1\xbd\xcc\x69\x6c\xb9\xd6\x25\x8a\x4e\x89\xb1\xb9\xdd\x11\x25\x29\xdf\x2c\xe5\x78\xee\xc8\x48\xb2\x31\xeb\xb9\x99\xd0\xe5\x59\xfb\x69\xdc\x69\x60\xec\x6c\xe6\xd1\xe3\x5d\x2d\x05\xd9\x59\x21\xa9\xce\x2d\x1a\xde\x3e\x8c\xdc\xe3\x3b\x26\x82\x2e\x0a\x4b\xce\xf7\x37\xc7\x4c\xe0\xe1\xf1\xc5\x5c\xbe\x9b\x7b\x3c\x3c\x7e\x4c\x62\x81\xc2\xff\xcb\x17\x7a\x81\xff\x58\xe0\xef\x87\xd0\x75\x84\x9e\xd7\x7e\xcf\x70\x55\x12\xa6\xf8\x13\x0b\x02\x81\x25\x78\xdb\x92\xca\x67\x22\x42\xf8\x33\x0c\x17\x42\xd7\x0b\x3f\xcc\x59\x10\xc8\xb7\x6d\x19\x21\xfc\x27\x5c\x4c\x37\x3c\xbe\x71\x9a\xcf\xd4\xdc\x8b\xfa\x37\x51\x7f\x4e\xf2\x8b\x6a\xb1\x60\xc1\xc0\x02\x43\xae\x33\x0a\x22\x82\x8c\xd0\xfb\xd2\x85\x56\xd6\xbf\x16\x20\x49\x70\xdf\x5a\x32\x2e\xd5\x6b\xed\x2a\xa9\x4a\xa4\x1a\x6a\x1a\x65\xe1\xff\x86\xa1\x0b\x0b\x0e\xa1\x55\x51\x4b\xe1\x18\xfe\x40\x96\x08\xc7\x27\xf3\xf5\x66\x7d\x1d\x7e\xb4\xbd\x6f\x73\xee\x08\x5b\x32\x85\x36\x0d\xb8\x42\x37\xae\xec\x2b\x52\x7f\xb7\x9f\xd0\xd1\xfd\x7e\x9b\x5e\x66\x2b\xff\x68\x7f\x05\x00\x00\xff\xff\x78\x7d\xbe\xda\x05\x04\x00\x00")

func templatesModelGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGoTpl,
		"templates/model.go.tpl",
	)
}

func templatesModelGoTpl() (*asset, error) {
	bytes, err := templatesModelGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.go.tpl", size: 1029, mode: os.FileMode(420), modTime: time.Unix(1492158068, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTableGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xcb\x6e\xdb\x30\x10\x3c\x8b\x5f\x31\x35\x7a\xb0\x8b\x54\xb9\x1b\xf0\xa1\x8a\x94\xa0\x87\xca\x41\xa1\x4b\x11\x04\x08\x2d\x51\xb6\x5a\x89\x34\x48\xaa\x41\x40\xf0\xdf\x0b\x52\xa2\xdc\x3c\xfc\xb8\x08\xab\xe5\xec\xcc\x3e\x8d\xc1\x67\xb5\x13\x52\xdf\xb4\x54\x29\x2c\x57\xf0\x7f\x9c\x76\x0c\x71\x41\x37\x2d\x1b\xbe\xb9\x73\x58\x4b\x1c\xbe\x0c\x50\x6f\x9c\x84\x7a\xb2\x1f\xa2\x62\xed\x19\xea\xff\x93\x18\x63\xbb\x10\xe6\x8d\xa3\x32\x7b\x5a\xfe\xa1\x5b\x06\x63\x10\xdf\x8f\xb6\xb5\x84\x5c\x5f\xe3\x2e\xcb\xb3\x9f\xdf\x8a\x2c\x45\xf2\x0b\xf7\xeb\xbb\x75\x8c\x74\x8d\x7c\x5d\x20\x4b\xbf\x17\xb1\xc7\x64\x52\x1e\xc4\xac\xcd\x85\xbe\x15\x3d\xaf\x20\x99\xee\x25\x67\x15\x9a\x1a\x7a\xe7\xe9\x27\x10\x1a\x05\x2e\x34\x6a\x87\x24\x7f\xa9\x3c\xca\xb2\x02\x93\x52\x48\x15\xe7\xec\x79\x3e\x7b\xc5\x31\x11\xcc\x16\x3e\x11\x63\x4e\xf7\x73\x78\x25\xfa\x65\xcf\xce\x63\x95\x96\x7d\xa9\x61\x48\x94\x26\x48\x13\x62\x83\xc4\xc9\x5e\x0e\xaf\x93\xc4\x69\xec\x24\x01\x87\x95\x94\x6f\x19\xe2\x1b\xd1\xf6\x1d\xf7\x23\xf4\xee\xba\x61\x6d\x15\xdc\x21\x32\xf8\xbd\x4e\x9c\x52\x4d\x0b\x67\x59\x8b\xa7\xdf\x4a\xf0\xa5\xeb\xd3\xeb\x90\x2b\xd1\x35\x9a\x75\x7b\xfd\x32\x7b\x32\x06\x8c\x57\x4e\x61\x28\x2a\x67\xcf\x17\xd6\x55\xf7\xbc\xbc\x04\x3e\xaf\x36\x48\x93\xc5\xf9\x2e\x1b\x12\x0d\x6b\x72\x16\x6a\x48\x14\xa5\xc9\x12\xd5\xe6\x8a\x44\x21\xf3\x2d\xd3\xb7\xae\x0f\x0a\x35\xd3\xe5\xce\xaf\x19\x17\xfc\x2b\x6f\xda\xa1\x41\x6a\x48\x79\xfe\xe6\x48\xad\xc5\x97\xc3\x1d\x5a\xbb\x38\x30\xcd\xdf\x1c\x5d\x80\x86\xad\x5b\xa0\xa3\xfb\x07\xa5\x65\xc3\xb7\x8f\x0d\xd7\x4c\xd6\xb4\x64\xc6\x97\x32\x48\xfa\x83\xfb\x10\x63\x2c\x39\x3e\xeb\xa6\xc6\x3b\xe9\xf8\xd8\x02\x7c\x5a\xc1\xd5\xe8\x56\x07\x63\xa5\x0f\xef\x87\x3e\x7b\xc4\xea\x72\x52\x02\x8c\x3b\x37\x6e\xc7\x34\x9b\xb1\x95\x96\xfc\x0b\x00\x00\xff\xff\xee\xd2\x35\x39\xec\x04\x00\x00")

func templatesTableGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTableGoTpl,
		"templates/table.go.tpl",
	)
}

func templatesTableGoTpl() (*asset, error) {
	bytes, err := templatesTableGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/table.go.tpl", size: 1260, mode: os.FileMode(420), modTime: time.Unix(1491979613, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTableMmGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x52\x4d\x8f\x9b\x30\x10\x3d\xe3\x5f\x31\x8d\x7a\x48\xaa\x2d\x7b\x8f\x94\x43\x59\xd3\x55\x0f\x81\x55\xc5\xa5\x5a\x45\x8a\x03\x03\xa1\x05\x83\xb0\x51\x15\x59\xfe\xef\x95\x6d\x20\x21\x1f\x6d\x2f\xd1\xe4\xf1\x66\xe6\x3d\xbf\x51\x0a\x3e\x8a\x63\xd3\xc9\x97\x8a\x09\x01\xeb\x0d\xd8\x7f\x9c\xd5\x08\x7e\xc2\x0e\x15\xba\xdf\xc8\x00\x5a\x13\xc3\x4f\x47\xaa\x2d\x0c\x75\xbb\x7d\x48\xb6\xe3\xb6\x4d\x86\xd5\x3f\x86\x5f\xca\x18\x7a\xeb\xb1\xcd\x16\x7f\x59\xd4\xb2\xf4\x17\x2b\x10\x94\x02\xff\x6d\xa8\xb5\x26\xe4\xf9\x19\x5e\xc3\x28\xfc\xfe\x25\x09\x29\x04\x3f\xe0\x2d\x7e\x8d\x7d\xa0\x31\x44\x71\x02\x21\xfd\x96\xf8\x96\x73\x36\xa5\xb5\x33\x45\xe4\xa9\xc5\x39\x2e\x64\xd7\xa7\x12\x14\xf1\x68\x00\x34\x20\x7a\x6a\x75\x32\xb5\x76\x32\xcf\xad\x13\x3e\xb5\x82\xc1\x3b\xc6\x0b\x04\xff\xa5\xa9\xfa\x9a\x5b\xaf\x16\xce\x4b\xac\xb2\x11\x1e\x8c\x4d\xb8\x9d\xe9\x53\x26\x59\x62\x2a\xad\x61\xff\x53\x34\x7c\xbd\x30\x8e\x67\x2d\x4f\x4d\x5d\x4a\xac\x5b\x79\x5a\xec\x95\x02\xe4\x99\xd9\xe0\xc4\x46\xf8\xfb\x8e\xde\xbc\xe7\xe9\xf5\xa7\x65\x76\x00\x1a\xac\xe6\x2f\xa0\x88\xd7\xa1\xec\x3b\x3e\x83\x15\xf1\x3c\x1a\xac\x21\x3b\x3c\x11\x6f\xdc\x54\xa0\xfc\x6a\x74\x0b\xc8\x51\xa6\x47\x90\x47\x04\xde\xf0\xcf\xbc\xac\x9c\x21\xe1\xd6\x2e\xaf\xee\x4f\x6b\xf8\x74\x39\x7c\x75\x9e\xb4\xbc\xba\xa6\x91\x3a\x4a\x5e\x41\xcd\xda\x77\x21\xbb\x92\x17\xbb\x92\x4b\xec\x72\x96\xa2\xb2\xb2\xdd\x4a\x7b\x49\x77\x39\x4a\x93\xc7\xd9\x94\x39\xdc\xac\xf6\x1f\x05\xf6\x61\x03\xc6\xa3\x89\x1a\x06\xa7\xef\xb7\x21\x2d\x76\xb0\xf9\xff\xa1\x04\x60\xb8\x91\x21\xcd\x29\x87\xe1\x29\x35\xf9\x13\x00\x00\xff\xff\x98\xf3\xfb\x8b\xc7\x03\x00\x00")

func templatesTableMmGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTableMmGoTpl,
		"templates/table.mm.go.tpl",
	)
}

func templatesTableMmGoTpl() (*asset, error) {
	bytes, err := templatesTableMmGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/table.mm.go.tpl", size: 967, mode: os.FileMode(420), modTime: time.Unix(1491378843, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUpdateGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x55\x4d\x6f\xe3\x36\x10\x3d\x93\xbf\x62\x2a\x18\xa8\xd4\x55\x15\xec\xb5\x80\x0f\x9b\xb5\x9a\xa6\x1f\x4e\xea\x38\x28\x8a\xa2\x80\x19\x69\x6c\x13\x91\x28\x85\xa4\xe2\x35\x0c\xfe\xf7\x82\xa4\x64\xd9\xb1\xe2\x6e\x0a\xb4\xc5\x5e\x12\x6a\xbe\xf8\x66\xe6\xf1\x79\xb7\x83\x91\x5a\x57\x52\x7f\x2c\x98\x52\xf0\xdd\x18\xdc\x97\x60\x25\x42\x32\x67\x0f\x05\xfa\xbf\x53\x6b\x30\x86\xda\xf8\xac\x0b\x75\x87\xb3\xa1\xae\xd8\x2f\x55\x8e\xc5\xdf\x94\x3e\x04\xd1\xe6\x96\x5d\x9a\x3b\x9c\xbd\x46\xa2\x6e\xa4\xd8\xc7\xb6\x9f\x43\xd1\x35\xcb\x1e\xd9\x0a\x61\xb7\x83\xe4\xb6\x3d\x1b\x43\xe9\xc5\x05\x5c\xa5\xd3\x74\xf6\x61\x9e\x4e\xe0\xf2\x77\xb8\xbd\xb9\xba\x49\x60\x72\x03\xd3\x9b\x39\xa4\x93\xeb\x79\x42\x29\x2f\xeb\x4a\x6a\x08\x29\x09\x50\xca\x4a\xaa\x80\x92\x40\x69\xc9\xc5\x4a\x05\x34\x72\x45\xee\xeb\x9c\x69\x04\xbd\x76\x57\xb4\x3d\x18\x03\x0f\x5b\x67\xbb\x95\xbc\x64\x72\x0b\x3f\xe1\x96\x2e\x1b\x91\x41\xf8\x62\x01\xc6\xc0\x37\xfd\x8c\x8d\x89\xda\x8a\x36\xae\xf6\xc9\x7e\x12\x1f\xab\xa2\x29\x85\x4b\xe8\x5d\x7a\x5b\x1f\xb9\x62\x78\xb1\x84\xae\x7c\x87\x2b\xf2\x00\xda\x81\xf9\x5a\x7b\x67\x0c\x28\x25\xb8\x56\x23\xd8\x51\xb2\xe4\x58\xe4\x6e\xf1\x27\xa0\x93\x15\xea\xef\x9d\x3b\x3c\xb9\x31\xa2\x94\x5c\x5c\xc0\x92\x4b\xa5\x21\x5b\x63\xf6\x08\x7c\x09\x1b\x84\x35\x7b\xf6\x93\x6a\xd1\xc3\x23\x6e\x29\xe1\x4b\x38\xd3\xeb\x78\x0c\x82\x17\x16\x0d\x69\x41\x1f\xe1\x8f\x3d\x5c\x95\x4c\x71\x13\x2e\x0e\xea\x42\xf0\x7a\xd1\x00\xca\x46\x69\x78\x40\x10\x95\xf8\x56\xf0\x62\x11\x51\x62\x3c\xea\xbc\x12\x5f\x6b\x68\xfa\xad\x1e\x61\xcd\xb1\x40\x8d\xa1\x1f\x4c\x7c\xf6\x8e\x76\x0a\xb5\xc4\x9a\x49\x5f\x4a\x15\x3c\x43\x45\x49\x16\x03\x8f\xe1\xd9\x0e\xf6\xa9\x41\xb9\xbd\x73\xf6\x7d\xd5\xf7\x6d\xaa\x7a\x2a\xbc\x9f\x12\xf5\x54\x28\x2d\x6d\xc2\xe2\xfe\x76\xf2\x61\x9e\xda\x29\xa8\x6c\x8d\x25\x83\xe4\xae\xfd\x7f\xca\x7e\xb8\x4b\xe7\x10\x2e\xe0\x1d\x25\xa4\xe5\x6d\xf2\x63\xc5\x45\x98\xc5\x10\xc4\x10\x44\xf0\x0e\x16\x11\x8c\x07\x63\xf8\x61\x0c\x25\xe4\xb7\x1f\xd2\x59\x7a\x7e\xac\x63\x18\xbd\xa7\x84\xcc\xd2\xf9\xfd\x6c\x7a\x3d\xbd\xb2\x28\x5b\x12\x1d\xc4\x2d\x7c\x7b\xb2\x11\x5d\x7b\xcf\xac\x68\xd0\x11\x8d\xd5\x35\x8a\x3c\xfc\xe3\x4f\x2e\x34\xca\x25\xcb\x70\x67\x76\xa7\xa4\x4e\x7a\x14\x3c\x3f\xe2\x8b\x89\xe1\x39\x49\x92\x88\x92\xc9\xe5\xcf\xd5\x2a\xf4\x93\x8b\xc1\x5f\xe1\x3c\x94\xc8\x6a\x33\xcc\xea\xc9\x65\xf2\xab\x85\x34\xab\x36\x43\x99\xc4\xbe\x8f\x31\xc8\x6a\x93\xdc\x65\x4c\x58\xea\xaf\xaa\x97\x0d\xf6\xe4\x8c\x1c\xb9\x6d\xce\x57\x9f\xc1\x62\x4f\xc1\x61\xb7\xe0\x05\x35\xd4\x4a\x9f\x64\x62\x85\x30\xe2\xf9\x27\xdb\x41\x72\x2d\x72\xfc\x84\x9d\x84\xf2\x25\x24\xd7\xea\x5e\xf0\xa7\xc6\xae\xdf\x5b\x44\xa5\xad\xb5\x53\x22\x63\x7a\xd9\xba\xdc\xda\x10\x5b\xa2\x44\xbd\xae\x72\x5f\xd7\x18\x58\x72\x91\x03\x3b\x12\x87\xb7\xc9\xd7\x6b\x95\xc3\xce\x5c\x33\xc9\x4a\xd5\x99\xbf\x00\xdd\x62\x45\xe1\x1e\xf1\x23\x6e\x95\x35\x0a\xc4\x9c\x92\xfd\x46\x0e\x38\xe8\x05\xad\xef\xb2\xf3\x75\x8f\xf2\x4d\x92\x66\x7f\xb7\x8e\xd3\x07\xb5\xcb\x02\x41\x91\xbb\x9f\xb6\x41\x19\xb3\xb0\x87\xe1\x0e\x68\xda\xab\xd8\x83\xe8\xe4\xa6\x7f\x20\x70\xdd\x0d\x05\x8a\x95\x5e\x77\x1c\x78\x9b\xea\x8d\x3a\xd9\x1b\xfd\xab\xba\x07\x3e\x60\xe1\xc5\xaf\x03\xbe\x59\xa3\xc4\xfd\x63\x69\x43\x86\x54\x6f\xf4\x99\xb2\x77\xac\x77\x66\x78\x51\x6d\xf8\x5e\x24\xfd\x77\x7c\x96\x6c\x47\xfb\x22\xaf\x55\xf8\x7f\x14\x73\xf4\x1f\x48\xe6\xbe\xf9\x7e\x0a\xfd\xe9\xaf\x00\x00\x00\xff\xff\x6c\xa7\xc0\xd6\x0c\x0b\x00\x00")

func templatesUpdateGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUpdateGoTpl,
		"templates/update.go.tpl",
	)
}

func templatesUpdateGoTpl() (*asset, error) {
	bytes, err := templatesUpdateGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/update.go.tpl", size: 2828, mode: os.FileMode(420), modTime: time.Unix(1491999668, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUpdateMmGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x5d\x6f\xe2\x3a\x10\x7d\xb6\x7f\xc5\x5c\x74\xa5\x9b\xdc\xe6\x9a\xf7\x2b\xf1\xd0\x96\xb4\xdb\xed\x16\x58\xa0\x5a\xad\x56\x2b\xe1\x86\x49\xb0\x08\x4e\x6a\x27\x20\x14\xf9\xbf\xaf\x6c\x87\x52\xbe\xb6\xfb\x00\xf1\xc7\x99\x99\x33\xe7\x78\x9a\x06\xfe\xd6\x8b\x42\x55\xb7\x39\xd7\x1a\xfe\xef\x81\xdb\x49\xbe\x42\x60\x53\xfe\x92\xa3\xff\x1f\xd8\x03\x63\xa8\xc5\x27\x3b\xa8\x5b\x58\xe8\xd3\xd3\x45\xb0\x4b\xf7\x54\xcc\x31\xff\x20\xf9\x7b\x1a\x6d\xec\x6a\x17\xe6\x16\x1f\x14\x52\x58\xd5\x4a\xbe\xa1\xfd\xf6\x02\xbe\xe4\xc9\x92\x67\x08\x4d\x03\x6c\xd4\xae\x8d\xa1\xb4\xdb\x85\xfb\x78\x10\x8f\xaf\xa7\x71\x1f\x6e\xbe\xc3\x68\x78\x3f\x64\xd0\x1f\xc2\x60\x38\x85\xb8\xff\x30\x65\x0e\xf3\x5c\xce\x79\x85\x50\x2d\x5c\x86\x96\xa6\x31\xf0\xb2\x75\x67\x23\x25\x56\x5c\x6d\xe1\x11\xb7\x34\xad\x65\x02\xc1\x91\xca\xc6\xc0\xbf\x7b\x21\x8d\x09\xdb\x8c\x16\x97\x2e\x4b\xae\xf8\x4a\x03\xbb\x2b\x14\x8a\x4c\x3e\xe2\x56\x03\xbb\x2d\xf2\x7a\x25\x2d\x38\x82\x23\x59\x77\xd9\x76\x34\x42\x5f\xaf\xd5\xc3\x98\x03\x8e\x11\xa0\x52\xf6\x57\xa8\x10\x1a\x4a\x52\x81\xf9\xdc\x99\x79\xc2\x91\x65\x58\xdd\xb9\xeb\xe0\xa4\x62\x48\x29\xe9\x76\x21\x15\x4a\x57\x90\x2c\x30\x59\x82\x48\x61\x83\xb0\xe0\x6b\x2f\x4c\xea\xd9\xc3\x12\xb7\x9a\x92\xa6\x01\xc5\x65\x86\x87\x5d\x19\x43\x09\x11\xa9\x2d\xed\x78\xec\xda\x6c\x6d\x82\x5e\x0f\xa4\xc8\x2d\x4d\x42\xda\x76\x0e\x3a\x8b\x7c\x23\x9a\x0d\x70\x13\xcc\x3a\xd6\xcd\x83\x04\x1d\x58\xd5\xba\x82\x17\x04\x59\xc8\xff\xa4\xc8\x67\x21\x25\xc4\x38\x3a\x28\xe7\xce\x72\xdb\xc6\xbc\x90\xff\x54\x50\xef\x5d\xfd\x63\xf2\x73\xcc\xb1\xc2\xc0\xab\x18\xc1\x19\x0a\xe1\x49\xb5\x52\x61\xc9\x95\x2f\xa4\x73\x91\xa0\xa6\x24\x89\x40\x44\xb0\xb6\x3e\xbc\xd6\xa8\xb6\x13\x77\xfe\x96\xd7\xbd\x8b\x1c\x65\x56\x2d\x8e\x49\xb4\x4e\xe8\xd7\xdc\x47\x52\xa2\x5f\x73\x5d\x29\x9b\x6a\xf6\x3c\xea\x5f\x4f\x63\x1b\xae\x93\x05\xae\x38\xb0\x49\xfb\x3d\x1d\x0a\x98\xc4\x53\x08\x66\x70\x45\x09\xd1\x95\x12\x32\xd3\xec\x73\x21\x64\x90\x44\xd0\x89\xa0\x13\xc2\x15\xcc\x42\xe8\x9d\xc5\x88\xf7\x18\x4a\xc8\xb7\x4f\xf1\x38\xf6\xb4\x37\x0b\x54\xe7\xa4\x1b\xc7\xd3\xe7\xf1\xe0\x61\x70\xff\x66\xff\xc1\x33\x9f\xf9\xbe\x54\x2d\x77\x7d\xad\x79\x5e\xa3\x7b\xaa\x3f\x7e\x0a\x59\xa1\x4a\x79\x82\x8d\x69\xcc\x6f\x1d\x6a\xa3\x7a\xc0\xcb\x12\xe5\x3c\xf0\xfb\xe8\xd2\x9b\x3b\xb0\xeb\x62\xf0\x9a\x31\x16\x52\xd2\xbf\xf9\x52\x64\x81\xd7\x3b\x02\x7f\xe9\x6e\x28\x51\xc5\xe6\xfc\x50\xf5\x6f\xd8\x57\xdb\xcf\xb8\xd8\x9c\x8b\x24\x76\x3c\x7b\xa0\x8a\x0d\x9b\x24\x5c\xda\xc9\xcb\x8a\x63\x75\xf6\x13\x10\x52\x3b\x3f\x36\xe6\xaf\xfd\xac\x5c\x1c\x15\x4a\xec\x13\x3c\x7f\x2d\x45\x4e\x0d\xfd\x15\x00\x00\xff\xff\x16\x26\x78\x6c\x0f\x06\x00\x00")

func templatesUpdateMmGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUpdateMmGoTpl,
		"templates/update.mm.go.tpl",
	)
}

func templatesUpdateMmGoTpl() (*asset, error) {
	bytes, err := templatesUpdateMmGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/update.mm.go.tpl", size: 1551, mode: os.FileMode(420), modTime: time.Unix(1491999537, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUpsertGoTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x54\x5d\x6f\xa3\x46\x14\x7d\xf6\xfc\x8a\x53\x64\xad\xa0\xb1\x70\x9f\x2b\xf9\x21\x31\x6c\xe4\x36\xc5\xa9\x8d\xab\xf6\x0d\x02\x63\x3c\x2a\xcc\x90\x61\x88\x63\xa1\xf9\xef\xd5\xf0\x11\xc7\x8e\x37\xab\xad\x54\x45\xaa\xf6\xc5\x1e\x2e\xe7\x9e\xb9\xf7\x1e\xee\x69\x1a\x8c\xab\x9d\x90\x6a\x9e\xc7\x55\x85\x9f\x67\x68\x9f\x78\x5c\x50\xb8\x61\xfc\x90\xd3\xee\x37\x30\x01\xad\x89\xc1\x27\x03\xb4\x3d\xbc\x0b\x6d\xc9\x7e\x13\x29\xcd\xbf\x42\xfd\xba\x88\x3e\xb7\x18\xd2\xda\xc3\xbb\xd7\x48\xaa\x6a\xc9\x5f\xb0\xfd\xe3\x25\x74\x19\x27\x7f\xc7\x19\x45\xd3\xc0\xbd\xef\xcf\x5a\x13\x32\x9d\xe2\xd6\x0f\xfc\xd5\x75\xe8\x7b\xb8\xf9\x0b\xf7\xcb\xdb\xa5\x0b\x6f\x89\x60\x19\xc2\xf7\x16\xa1\x4b\x08\x2b\x4a\x21\x15\x6c\x32\xb2\xa8\x94\x42\x56\x16\x19\x59\x95\x92\x8c\x67\x95\x45\x08\x60\x65\x4c\xed\xea\x07\x37\x11\xc5\xb4\x88\x95\xda\xd1\x7d\x51\xd3\x3c\xa7\x72\x5a\x66\xcf\x16\x71\xda\x7b\x36\x65\x45\xa5\x82\xda\xb5\x55\xf4\x6d\x6a\x8d\x87\x43\x1b\xbb\x97\xac\x88\xe5\x01\xbf\xd2\x03\xd9\xd6\x3c\x81\x7d\xa6\x91\xd6\xf8\xf1\x28\x83\xd6\x4e\xcf\x68\x9f\x0d\x7c\xc0\x0d\x17\x4c\x10\x27\x8a\x09\x8e\xae\x64\xa7\x23\xee\x67\xa5\x35\x4e\xb1\x54\x4a\xb4\x5d\x3a\x68\xc8\x68\xcb\x68\x9e\xb6\x9a\xbf\x29\xc6\xcd\xa8\xfa\xdc\xbe\x7e\x5b\x80\x43\xc8\x68\x3a\x45\x29\x69\x19\x4b\xda\xb6\x57\xe5\x2c\xa1\x15\x19\x25\x13\xb0\x09\x9e\x0c\xe5\x63\x4d\xe5\x61\xdd\xc6\xed\xee\xa2\x09\x7e\x72\xcc\x40\xa7\x53\xa4\x54\x51\x59\x30\x4e\x21\x38\x12\xc1\xb7\x39\x4b\x54\xdf\x09\x01\x9e\x62\x89\xba\x6d\xff\xfa\x75\x73\x04\x60\xdb\xa1\xdf\xd9\xac\x9f\x90\x27\x36\x65\x1a\x2b\x8a\x86\x00\x38\xcd\x9b\x21\xf2\x96\xd8\xdc\x7b\xd7\xa1\x8f\xb5\x1f\xc2\x8e\x70\xd5\xb3\x55\xee\x2f\x82\x71\x3b\x99\xc0\x9a\xc0\x72\x70\x85\xc8\xc1\x0c\x36\xfc\x3f\xe7\x77\x1b\xcf\xf7\xdc\x2f\x60\x5f\xde\xf7\x49\x11\x01\x34\x68\x5e\xd1\xcb\xe5\x05\x42\xed\x18\xcf\x2e\xd7\x77\x06\x3a\x52\x75\xe8\x5e\xc8\x13\x4d\x27\x9d\x84\x95\x1b\xd0\xbd\x6d\x31\xfe\x14\xe7\x2c\xed\x79\xfb\xeb\x2d\xc7\x10\x75\x3a\x55\x8f\x79\x27\x06\x81\x39\x57\x4a\x1a\x79\xa2\x45\xb0\xf6\x57\x21\x16\x41\xb8\x34\xf4\x55\xb2\xa3\x45\x0c\x77\xdd\xff\xbf\xdd\xb2\xaf\xce\x2e\xc2\x15\x19\x45\x7f\x5c\xdf\x6d\xfc\xf5\x05\x30\x7b\x03\x06\xa2\x65\x80\xf9\x32\xf8\x7c\xb7\x98\x87\xb0\xad\xa6\x41\xd9\x2d\x4a\x67\x0c\x73\x91\xd7\x05\x37\xdf\xa3\x35\x64\x9c\x8c\xef\x0a\xd1\x40\xb4\xf2\xc3\xcd\x2a\x58\x04\xb7\xa6\x99\xfe\xc3\x7e\x95\x1f\x75\xb3\x90\x35\x7f\x99\x85\x77\x73\x27\x32\xbb\x9b\xc8\x04\x4f\xae\xeb\x3a\x64\x24\xc5\xfe\xf2\x3e\x78\x37\xee\xef\x26\x71\x25\xf6\xe7\x39\x66\xa9\x66\x90\x62\xef\xae\x93\x98\x9b\x7d\xc9\xc4\x79\x05\x47\xf5\x1c\x32\x62\xdb\x76\x11\x7f\x98\x81\xb3\x1c\x9f\x3e\x0d\x4f\x65\xf6\xec\xfa\x52\x06\x62\x25\xf6\x95\x59\xd0\x77\xf4\x27\x23\x23\xef\xe5\xd7\x9c\xe5\x44\x13\xe3\xa1\x32\xe6\x19\xc5\x98\xa5\xcf\xa6\x2b\x77\xc1\x53\xfa\x4c\x07\x2f\x66\x5b\xb8\x8b\x6a\xc3\xd9\x63\x6d\xf4\xed\x22\x5c\x28\x13\x1d\xfc\x4a\xeb\xa3\xb9\xdd\x1c\x0c\xc4\x50\x14\x54\xed\x44\xda\xf1\x6a\x8d\x2d\xe3\x29\xe2\x13\xab\xf9\x36\x93\xfb\x12\xf3\x7f\x68\x7e\xc0\x77\xf7\xfb\xbf\xbb\x5f\x3b\xec\x6f\xb2\xbf\xf1\xe0\x7f\xe3\x0f\x31\xc0\x61\x0b\xca\x58\xc6\x45\xce\x2a\x35\x2c\xc2\xbf\x71\xbf\xf1\xc7\xdb\xdf\xf8\x23\xfd\xaf\x69\x40\x79\xda\x19\x5b\x77\x38\x86\xc8\x3f\x01\x00\x00\xff\xff\x7e\x6d\x0f\x8d\x22\x0b\x00\x00")

func templatesUpsertGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUpsertGoTpl,
		"templates/upsert.go.tpl",
	)
}

func templatesUpsertGoTpl() (*asset, error) {
	bytes, err := templatesUpsertGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/upsert.go.tpl", size: 2850, mode: os.FileMode(420), modTime: time.Unix(1492159197, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/delete.go.tpl": templatesDeleteGoTpl,
	"templates/delete.mm.go.tpl": templatesDeleteMmGoTpl,
	"templates/enum.go.tpl": templatesEnumGoTpl,
	"templates/find-many.go.tpl": templatesFindManyGoTpl,
	"templates/find.go.tpl": templatesFindGoTpl,
	"templates/find.mm.go.tpl": templatesFindMmGoTpl,
	"templates/insert.go.tpl": templatesInsertGoTpl,
	"templates/insert.mm.go.tpl": templatesInsertMmGoTpl,
	"templates/model.go.tpl": templatesModelGoTpl,
	"templates/table.go.tpl": templatesTableGoTpl,
	"templates/table.mm.go.tpl": templatesTableMmGoTpl,
	"templates/update.go.tpl": templatesUpdateGoTpl,
	"templates/update.mm.go.tpl": templatesUpdateMmGoTpl,
	"templates/upsert.go.tpl": templatesUpsertGoTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"delete.go.tpl": &bintree{templatesDeleteGoTpl, map[string]*bintree{}},
		"delete.mm.go.tpl": &bintree{templatesDeleteMmGoTpl, map[string]*bintree{}},
		"enum.go.tpl": &bintree{templatesEnumGoTpl, map[string]*bintree{}},
		"find-many.go.tpl": &bintree{templatesFindManyGoTpl, map[string]*bintree{}},
		"find.go.tpl": &bintree{templatesFindGoTpl, map[string]*bintree{}},
		"find.mm.go.tpl": &bintree{templatesFindMmGoTpl, map[string]*bintree{}},
		"insert.go.tpl": &bintree{templatesInsertGoTpl, map[string]*bintree{}},
		"insert.mm.go.tpl": &bintree{templatesInsertMmGoTpl, map[string]*bintree{}},
		"model.go.tpl": &bintree{templatesModelGoTpl, map[string]*bintree{}},
		"table.go.tpl": &bintree{templatesTableGoTpl, map[string]*bintree{}},
		"table.mm.go.tpl": &bintree{templatesTableMmGoTpl, map[string]*bintree{}},
		"update.go.tpl": &bintree{templatesUpdateGoTpl, map[string]*bintree{}},
		"update.mm.go.tpl": &bintree{templatesUpdateMmGoTpl, map[string]*bintree{}},
		"upsert.go.tpl": &bintree{templatesUpsertGoTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

