package tempo

import "github.com/matthewmueller/pgx"

// GENERATED BY POGO. DO NOT EDIT.

// FindOne Task by a condition
func (t *Tasks) FindOne(condition string, params ...interface{}) (task Task, err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `
    SELECT "id", "key", "target", "rate", "offset", "timezone", "rate_type", "rate_options", "status", "target_type", "target_options", "user", "meta", "refreshed_at", "created_at", "updated_at"
    FROM public.tasks
    WHERE ` + condition

	DBLog(sqlstr, params...)
	row := t.DB.QueryRow(sqlstr, params...)
	err = row.Scan(&task.ID, &task.Key, &task.Target, &task.Rate, &task.Offset, &task.Timezone, &task.RateType, &task.RateOptions, &task.Status, &task.TargetType, &task.TargetOptions, &task.User, &task.Meta, &task.RefreshedAt, &task.CreatedAt, &task.UpdatedAt)
	if err != nil {
		if err == pgx.ErrNoRows {
			return task, ErrTaskNotFound
		}
		return task, err
	}

	return task, nil
}
