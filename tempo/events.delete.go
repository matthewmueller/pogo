package tempo

import (
	"time"

	"github.com/matthewmueller/pgx"
	"github.com/satori/go.uuid"
)

// GENERATED BY POGO. DO NOT EDIT.

// Delete the Event from the database.
func (e *Events) Delete(id *uuid.UUID) (err error) {
	// sql query
	sqlstr := `DELETE FROM public.events WHERE "id" = $1`

	// run query
	DBLog(sqlstr, id)
	_, err = e.DB.Exec(sqlstr, id)
	if err != nil {
		if err == pgx.ErrNoRows {
			return ErrEventNotFound
		}
		return err
	}

	return nil
}

// DeleteByTaskAndTime find a Event
func (e *Events) DeleteByTaskAndTime(task *uuid.UUID, time *time.Time) (err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `DELETE FROM public.events WHERE "task" = $1 AND "time" = $2`

	DBLog(sqlstr, task, time)
	_, err = e.DB.Exec(sqlstr, task, time)
	if err != nil {
		if err == pgx.ErrNoRows {
			return ErrEventNotFound
		}
		return err
	}

	return nil
}
