package tempo

import "github.com/matthewmueller/pgx"

// GENERATED BY POGO. DO NOT EDIT.

// FindOne Active by a condition
func (a *Actives) FindOne(condition string, params ...interface{}) (active Active, err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `
    SELECT "id", "token", "state", "used", "created_at", "updated_at"
    FROM public.actives
    WHERE ` + condition

	DBLog(sqlstr, params...)
	row := a.DB.QueryRow(sqlstr, params...)
	err = row.Scan(&active.ID, &active.Token, &active.State, &active.Used, &active.CreatedAt, &active.UpdatedAt)
	if err != nil {
		if err == pgx.ErrNoRows {
			return active, ErrActiveNotFound
		}
		return active, err
	}

	return active, nil
}
