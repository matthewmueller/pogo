package tempo

import (
	"github.com/matthewmueller/pgx"
	"github.com/satori/go.uuid"
)

// GENERATED BY POGO. DO NOT EDIT.

// Delete the Active from the database.
func (a *Actives) Delete(id *uuid.UUID) (err error) {
	// sql query
	sqlstr := `DELETE FROM public.actives WHERE "id" = $1`

	// run query
	DBLog(sqlstr, id)
	_, err = a.DB.Exec(sqlstr, id)
	if err != nil {
		if err == pgx.ErrNoRows {
			return ErrActiveNotFound
		}
		return err
	}

	return nil
}

// DeleteByState find a Active
func (a *Actives) DeleteByState(state *uuid.UUID) (err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `DELETE FROM public.actives WHERE "state" = $1`

	DBLog(sqlstr, state)
	_, err = a.DB.Exec(sqlstr, state)
	if err != nil {
		if err == pgx.ErrNoRows {
			return ErrActiveNotFound
		}
		return err
	}

	return nil
}

// DeleteByToken find a Active
func (a *Actives) DeleteByToken(token *uuid.UUID) (err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `DELETE FROM public.actives WHERE "token" = $1`

	DBLog(sqlstr, token)
	_, err = a.DB.Exec(sqlstr, token)
	if err != nil {
		if err == pgx.ErrNoRows {
			return ErrActiveNotFound
		}
		return err
	}

	return nil
}
