package tempo

// GENERATED BY POGO. DO NOT EDIT.

import (
 "errors"
 "strings"
)

// Update the SchemaMigration by the Primary Key
func (sm *SchemaMigrations) Update(version *int, smsm *SchemaMigration) (schemamigration SchemaMigration, err error) {
 fields := sm.getFields(smsm)

 // first check if we have the primary key
 if version == nil {
  return schemamigration, errors.New(`primary key "version" must be non-nil`)
 }

 // don't update the primary key
 delete(fields, "version")

 // prepare the slices
 c, i, v := querySlices(fields, 1)

 // sql query
 sqlstr := `UPDATE public.schema_migrations SET (` +
  strings.Join(c, ", ") + `) = (` +
  strings.Join(i, ", ") + `)
		WHERE version = $1
		RETURNING version`

 // run query
 values := append([]interface{}{smsm.Version}, v...)
 DBLog(sqlstr, values...)

 row := sm.DB.QueryRow(sqlstr, values...)
 err = row.Scan(&schemamigration.Version)
 if err != nil {
  return schemamigration, err
 }

 return schemamigration, nil
}
