package tempo

// GENERATED BY POGO. DO NOT EDIT.

import (
 "errors"
 "strings"
)

// Update the Active by the Primary Key
func (a *Actives) Update(id *string, aa *Active) (active Active, err error) {
 fields := a.getFields(aa)

 // first check if we have the primary key
 if id == nil {
  return active, errors.New(`primary key "id" must be non-nil`)
 }

 // don't update the primary key
 delete(fields, "id")

 // prepare the slices
 c, i, v := querySlices(fields, 1)

 // sql query
 sqlstr := `UPDATE public.actives SET (` +
  strings.Join(c, ", ") + `) = (` +
  strings.Join(i, ", ") + `)
		WHERE id = $1
		RETURNING id, token, state, used, created_at, updated_at`

 // run query
 values := append([]interface{}{aa.ID}, v...)
 DBLog(sqlstr, values...)

 row := a.DB.QueryRow(sqlstr, values...)
 err = row.Scan(&active.ID, &active.Token, &active.State, &active.Used, &active.CreatedAt, &active.UpdatedAt)
 if err != nil {
  return active, err
 }

 return active, nil
}
