package tempo

import "time"

// GENERATED BY POGO. DO NOT EDIT.

// Events class
type Events struct {
 DB DB
}

// Event model
type Event struct {
 ID          *string      `json:"id,omitempty"`
 Time        *time.Time   `json:"time,omitempty"`
 Task        *string      `json:"task,omitempty"`
 CreatedAt   *time.Time   `json:"created_at,omitempty"`
 TriggeredAt *time.Time   `json:"triggered_at,omitempty"`
 Status      *EventStatus `json:"status,omitempty"`
 Response    *string      `json:"response,omitempty"`
 Attempts    *int         `json:"attempts,omitempty"`
}

// NewEvent model
func NewEvent(db DB) Events {
 return Events{
  DB: db,
 }
}

// getFields fetch the non-nil fields
func (e *Events) getFields(ee *Event) map[string]interface{} {
 fields := map[string]interface{}{}

 if ee.ID != nil {
  fields["id"] = ee.ID
 }

 if ee.Time != nil {
  fields["time"] = ee.Time
 }

 if ee.Task != nil {
  fields["task"] = ee.Task
 }

 if ee.CreatedAt != nil {
  fields["created_at"] = ee.CreatedAt
 }

 if ee.TriggeredAt != nil {
  fields["triggered_at"] = ee.TriggeredAt
 }

 if ee.Status != nil {
  fields["status"] = ee.Status
 }

 if ee.Response != nil {
  fields["response"] = ee.Response
 }

 if ee.Attempts != nil {
  fields["attempts"] = ee.Attempts
 }

 return fields
}
