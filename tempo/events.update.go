package tempo

// GENERATED BY POGO. DO NOT EDIT.

import (
 "errors"
 "strings"
)

// Update the Event by the Primary Key
func (e *Events) Update(id *string, ee *Event) (event Event, err error) {
 fields := e.getFields(ee)

 // first check if we have the primary key
 if id == nil {
  return event, errors.New(`primary key "id" must be non-nil`)
 }

 // don't update the primary key
 delete(fields, "id")

 // prepare the slices
 c, i, v := querySlices(fields, 1)

 // sql query
 sqlstr := `UPDATE public.events SET (` +
  strings.Join(c, ", ") + `) = (` +
  strings.Join(i, ", ") + `)
		WHERE id = $1
		RETURNING id, time, task, created_at, triggered_at, status, response, attempts`

 // run query
 values := append([]interface{}{ee.ID}, v...)
 DBLog(sqlstr, values...)

 row := e.DB.QueryRow(sqlstr, values...)
 err = row.Scan(&event.ID, &event.Time, &event.Task, &event.CreatedAt, &event.TriggeredAt, &event.Status, &event.Response, &event.Attempts)
 if err != nil {
  return event, err
 }

 return event, nil
}
