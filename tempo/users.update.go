package tempo

// GENERATED BY POGO. DO NOT EDIT.

import (
 "errors"
 "strings"
)

// Update the User by the Primary Key
func (u *Users) Update(id *string, uu *User) (user User, err error) {
 fields := u.getFields(uu)

 // first check if we have the primary key
 if id == nil {
  return user, errors.New(`primary key "id" must be non-nil`)
 }

 // don't update the primary key
 delete(fields, "id")

 // prepare the slices
 c, i, v := querySlices(fields, 1)

 // sql query
 sqlstr := `UPDATE public.users SET (` +
  strings.Join(c, ", ") + `) = (` +
  strings.Join(i, ", ") + `)
		WHERE id = $1
		RETURNING id, role, email, stripe_id, active, access_token, scope, free_events, cost_per_event, total_events, paid_events, token, created_at, updated_at, free_tasks`

 // run query
 values := append([]interface{}{uu.ID}, v...)
 DBLog(sqlstr, values...)

 row := u.DB.QueryRow(sqlstr, values...)
 err = row.Scan(&user.ID, &user.Role, &user.Email, &user.StripeID, &user.Active, &user.AccessToken, &user.Scope, &user.FreeEvents, &user.CostPerEvent, &user.TotalEvents, &user.PaidEvents, &user.Token, &user.CreatedAt, &user.UpdatedAt, &user.FreeTasks)
 if err != nil {
  return user, err
 }

 return user, nil
}
