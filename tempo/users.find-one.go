package tempo

import "github.com/matthewmueller/pgx"

// GENERATED BY POGO. DO NOT EDIT.

// FindOne User by a condition
func (u *Users) FindOne(condition string, params ...interface{}) (user User, err error) {
	// sql select query, primary key provided by sequence
	sqlstr := `
    SELECT "id", "role", "email", "stripe_id", "active", "github_access_token", "scope", "free_events", "cost_per_event", "total_events", "paid_events", "token", "created_at", "updated_at", "free_tasks"
    FROM public.users
    WHERE ` + condition

	DBLog(sqlstr, params...)
	row := u.DB.QueryRow(sqlstr, params...)
	err = row.Scan(&user.ID, &user.Role, &user.Email, &user.StripeID, &user.Active, &user.GithubAccessToken, &user.Scope, &user.FreeEvents, &user.CostPerEvent, &user.TotalEvents, &user.PaidEvents, &user.Token, &user.CreatedAt, &user.UpdatedAt, &user.FreeTasks)
	if err != nil {
		if err == pgx.ErrNoRows {
			return user, ErrUserNotFound
		}
		return user, err
	}

	return user, nil
}
