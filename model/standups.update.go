package model

// GENERATED BY POGO. DO NOT EDIT.

import (
 "errors"
 "strings"
)

// Update the Standup by the Primary Key
func (s *Standups) Update(id *string, ss *Standup) (standup Standup, err error) {
 fields := s.getFields(ss)

 // first check if we have the primary key
 if id == nil {
  return standup, errors.New(`primary key "id" must be non-nil`)
 }

 // don't update the primary key
 delete(fields, "id")

 // prepare the slices
 c, i, v := querySlices(fields, 1)

 // sql query
 sqlstr := `UPDATE jack.standups SET (` +
  strings.Join(c, ", ") + `) = (` +
  strings.Join(i, ", ") + `)
		WHERE id = $1
		RETURNING id, name, slack_channel_id, time, timezone, questions, team_id, created_at, updated_at`

 // run query
 values := append([]interface{}{ss.ID}, v...)
 XOLog(sqlstr, values...)

 row := s.DB.QueryRow(sqlstr, values...)
 err = row.Scan(&standup.ID, &standup.Name, &standup.SlackChannelID, &standup.Time, &standup.Timezone, &standup.Questions, &standup.TeamID, &standup.CreatedAt, &standup.UpdatedAt)
 if err != nil {
  return standup, err
 }

 return standup, nil
}
