package model

// GENERATED BY POGO. DO NOT EDIT.

import (
 "errors"
 "strings"
)

// Update the Teammate by the Primary Key
func (t *Teammates) Update(id *string, tt *Teammate) (teammate Teammate, err error) {
 fields := t.getFields(tt)

 // first check if we have the primary key
 if id == nil {
  return teammate, errors.New(`primary key "id" must be non-nil`)
 }

 // don't update the primary key
 delete(fields, "id")

 // prepare the slices
 c, i, v := querySlices(fields, 1)

 // sql query
 sqlstr := `UPDATE jack.teammates SET (` +
  strings.Join(c, ", ") + `) = (` +
  strings.Join(i, ", ") + `)
		WHERE id = $1
		RETURNING id, slack_id, username, first_name, last_name, email, avatar, timezone, created_at, updated_at`

 // run query
 values := append([]interface{}{tt.ID}, v...)
 DBLog(sqlstr, values...)

 row := t.DB.QueryRow(sqlstr, values...)
 err = row.Scan(&teammate.ID, &teammate.SlackID, &teammate.Username, &teammate.FirstName, &teammate.LastName, &teammate.Email, &teammate.Avatar, &teammate.Timezone, &teammate.CreatedAt, &teammate.UpdatedAt)
 if err != nil {
  return teammate, err
 }

 return teammate, nil
}
